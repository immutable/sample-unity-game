/*
 * Indexer Search API
 *
 * This API implements endpoints to power data driven marketplace and game experiences
 *
 * The version of the OpenAPI document: 1.0
 * Contact: helpmebuild@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Immutable.Search.Model
{
    /// <summary>
    ///     The chain details
    /// </summary>
    [DataContract(Name = "Chain")]
    public class Chain
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="Chain" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Chain()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="Chain" /> class.
        /// </summary>
        /// <param name="id">The id of chain (required).</param>
        /// <param name="name">The name of chain (required).</param>
        public Chain(string id = default, string name = default)
        {
            // to ensure "id" is required (not null)
            if (id == null) throw new ArgumentNullException("id is a required property for Chain and cannot be null");
            Id = id;
            // to ensure "name" is required (not null)
            if (name == null)
                throw new ArgumentNullException("name is a required property for Chain and cannot be null");
            Name = name;
        }

        /// <summary>
        ///     The id of chain
        /// </summary>
        /// <value>The id of chain</value>
        /// <example>eip155:13372</example>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        ///     The name of chain
        /// </summary>
        /// <value>The name of chain</value>
        /// <example>imtbl-zkevm-testnet</example>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Chain {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }
    }
}
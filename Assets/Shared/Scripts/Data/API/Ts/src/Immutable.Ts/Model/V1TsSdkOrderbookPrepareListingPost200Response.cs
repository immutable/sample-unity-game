/*
 * TS SDK API
 *
 * running ts sdk as an api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Immutable.Ts.Client.OpenAPIDateConverter;

namespace Immutable.Ts.Model
{
    /// <summary>
    /// Response schema for the prepareListing endpoint
    /// </summary>
    [DataContract(Name = "_v1_ts_sdk_orderbook_prepareListing_post_200_response")]
    public partial class V1TsSdkOrderbookPrepareListingPost200Response
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1TsSdkOrderbookPrepareListingPost200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected V1TsSdkOrderbookPrepareListingPost200Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="V1TsSdkOrderbookPrepareListingPost200Response" /> class.
        /// </summary>
        /// <param name="actions">actions (required).</param>
        /// <param name="orderComponents">orderComponents (required).</param>
        /// <param name="orderHash">orderHash (required).</param>
        public V1TsSdkOrderbookPrepareListingPost200Response(List<Action> actions = default(List<Action>), OrderComponents orderComponents = default(OrderComponents), string orderHash = default(string))
        {
            // to ensure "actions" is required (not null)
            if (actions == null)
            {
                throw new ArgumentNullException("actions is a required property for V1TsSdkOrderbookPrepareListingPost200Response and cannot be null");
            }
            this.Actions = actions;
            // to ensure "orderComponents" is required (not null)
            if (orderComponents == null)
            {
                throw new ArgumentNullException("orderComponents is a required property for V1TsSdkOrderbookPrepareListingPost200Response and cannot be null");
            }
            this.OrderComponents = orderComponents;
            // to ensure "orderHash" is required (not null)
            if (orderHash == null)
            {
                throw new ArgumentNullException("orderHash is a required property for V1TsSdkOrderbookPrepareListingPost200Response and cannot be null");
            }
            this.OrderHash = orderHash;
        }

        /// <summary>
        /// Gets or Sets Actions
        /// </summary>
        [DataMember(Name = "actions", IsRequired = true, EmitDefaultValue = true)]
        public List<Action> Actions { get; set; }

        /// <summary>
        /// Gets or Sets OrderComponents
        /// </summary>
        [DataMember(Name = "orderComponents", IsRequired = true, EmitDefaultValue = true)]
        public OrderComponents OrderComponents { get; set; }

        /// <summary>
        /// Gets or Sets OrderHash
        /// </summary>
        [DataMember(Name = "orderHash", IsRequired = true, EmitDefaultValue = true)]
        public string OrderHash { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class V1TsSdkOrderbookPrepareListingPost200Response {\n");
            sb.Append("  Actions: ").Append(Actions).Append("\n");
            sb.Append("  OrderComponents: ").Append(OrderComponents).Append("\n");
            sb.Append("  OrderHash: ").Append(OrderHash).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}

/*
 * TS SDK API
 *
 * running ts sdk as an api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Immutable.Ts.Model
{
    /// <summary>
    ///     OrderStatusOneOf2
    /// </summary>
    [DataContract(Name = "OrderStatus_oneOf_2")]
    public class OrderStatusOneOf2
    {
        /// <summary>
        ///     A terminal order status indicating that an order cannot be fulfilled due to expiry.
        /// </summary>
        /// <value>A terminal order status indicating that an order cannot be fulfilled due to expiry.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum NameEnum
        {
            /// <summary>
            ///     Enum EXPIRED for value: EXPIRED
            /// </summary>
            [EnumMember(Value = "EXPIRED")] EXPIRED
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="OrderStatusOneOf2" /> class.
        /// </summary>
        /// <param name="name">A terminal order status indicating that an order cannot be fulfilled due to expiry..</param>
        public OrderStatusOneOf2(NameEnum? name = default)
        {
            Name = name;
        }


        /// <summary>
        ///     A terminal order status indicating that an order cannot be fulfilled due to expiry.
        /// </summary>
        /// <value>A terminal order status indicating that an order cannot be fulfilled due to expiry.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public NameEnum? Name { get; set; }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderStatusOneOf2 {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }
    }
}
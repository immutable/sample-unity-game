/*
 * TS SDK API
 *
 * running ts sdk as an api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Immutable.Ts.Client.OpenAPIDateConverter;

namespace Immutable.Ts.Model
{
    /// <summary>
    /// V1TsSdkV1OrderbookCancelOrdersPost200ResponseResult
    /// </summary>
    [DataContract(Name = "_v1_ts_sdk_v1_orderbook_cancelOrders_post_200_response_result")]
    public partial class V1TsSdkV1OrderbookCancelOrdersPost200ResponseResult
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1TsSdkV1OrderbookCancelOrdersPost200ResponseResult" /> class.
        /// </summary>
        /// <param name="failedCancellations">Orders which failed to be cancelled.</param>
        /// <param name="pendingCancellations">Orders which are marked for cancellation but the cancellation cannot be guaranteed.</param>
        /// <param name="successfulCancellations">Orders which were successfully cancelled.</param>
        public V1TsSdkV1OrderbookCancelOrdersPost200ResponseResult(List<V1TsSdkV1OrderbookCancelOrdersPost200ResponseResultFailedCancellationsInner> failedCancellations = default(List<V1TsSdkV1OrderbookCancelOrdersPost200ResponseResultFailedCancellationsInner>), List<string> pendingCancellations = default(List<string>), List<string> successfulCancellations = default(List<string>))
        {
            this.FailedCancellations = failedCancellations;
            this.PendingCancellations = pendingCancellations;
            this.SuccessfulCancellations = successfulCancellations;
        }

        /// <summary>
        /// Orders which failed to be cancelled
        /// </summary>
        /// <value>Orders which failed to be cancelled</value>
        [DataMember(Name = "failed_cancellations", EmitDefaultValue = false)]
        public List<V1TsSdkV1OrderbookCancelOrdersPost200ResponseResultFailedCancellationsInner> FailedCancellations { get; set; }

        /// <summary>
        /// Orders which are marked for cancellation but the cancellation cannot be guaranteed
        /// </summary>
        /// <value>Orders which are marked for cancellation but the cancellation cannot be guaranteed</value>
        [DataMember(Name = "pending_cancellations", EmitDefaultValue = false)]
        public List<string> PendingCancellations { get; set; }

        /// <summary>
        /// Orders which were successfully cancelled
        /// </summary>
        /// <value>Orders which were successfully cancelled</value>
        [DataMember(Name = "successful_cancellations", EmitDefaultValue = false)]
        public List<string> SuccessfulCancellations { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class V1TsSdkV1OrderbookCancelOrdersPost200ResponseResult {\n");
            sb.Append("  FailedCancellations: ").Append(FailedCancellations).Append("\n");
            sb.Append("  PendingCancellations: ").Append(PendingCancellations).Append("\n");
            sb.Append("  SuccessfulCancellations: ").Append(SuccessfulCancellations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}

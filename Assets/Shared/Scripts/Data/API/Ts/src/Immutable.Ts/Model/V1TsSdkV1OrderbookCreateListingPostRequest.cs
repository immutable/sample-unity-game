/*
 * TS SDK API
 *
 * running ts sdk as an api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@immutable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Immutable.Ts.Client.OpenAPIDateConverter;

namespace Immutable.Ts.Model
{
    /// <summary>
    /// V1TsSdkV1OrderbookCreateListingPostRequest
    /// </summary>
    [DataContract(Name = "_v1_ts_sdk_v1_orderbook_createListing_post_request")]
    public partial class V1TsSdkV1OrderbookCreateListingPostRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="V1TsSdkV1OrderbookCreateListingPostRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected V1TsSdkV1OrderbookCreateListingPostRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="V1TsSdkV1OrderbookCreateListingPostRequest" /> class.
        /// </summary>
        /// <param name="makerFees">makerFees (required).</param>
        /// <param name="orderComponents">orderComponents (required).</param>
        /// <param name="orderHash">orderHash (required).</param>
        /// <param name="orderSignature">orderSignature (required).</param>
        public V1TsSdkV1OrderbookCreateListingPostRequest(List<CreateListingReqBodyFeeValue> makerFees = default(List<CreateListingReqBodyFeeValue>), CreateListingReqBodyOrderComponents orderComponents = default(CreateListingReqBodyOrderComponents), string orderHash = default(string), string orderSignature = default(string))
        {
            // to ensure "makerFees" is required (not null)
            if (makerFees == null)
            {
                throw new ArgumentNullException("makerFees is a required property for V1TsSdkV1OrderbookCreateListingPostRequest and cannot be null");
            }
            this.MakerFees = makerFees;
            // to ensure "orderComponents" is required (not null)
            if (orderComponents == null)
            {
                throw new ArgumentNullException("orderComponents is a required property for V1TsSdkV1OrderbookCreateListingPostRequest and cannot be null");
            }
            this.OrderComponents = orderComponents;
            // to ensure "orderHash" is required (not null)
            if (orderHash == null)
            {
                throw new ArgumentNullException("orderHash is a required property for V1TsSdkV1OrderbookCreateListingPostRequest and cannot be null");
            }
            this.OrderHash = orderHash;
            // to ensure "orderSignature" is required (not null)
            if (orderSignature == null)
            {
                throw new ArgumentNullException("orderSignature is a required property for V1TsSdkV1OrderbookCreateListingPostRequest and cannot be null");
            }
            this.OrderSignature = orderSignature;
        }

        /// <summary>
        /// Gets or Sets MakerFees
        /// </summary>
        [DataMember(Name = "makerFees", IsRequired = true, EmitDefaultValue = true)]
        public List<CreateListingReqBodyFeeValue> MakerFees { get; set; }

        /// <summary>
        /// Gets or Sets OrderComponents
        /// </summary>
        [DataMember(Name = "orderComponents", IsRequired = true, EmitDefaultValue = true)]
        public CreateListingReqBodyOrderComponents OrderComponents { get; set; }

        /// <summary>
        /// Gets or Sets OrderHash
        /// </summary>
        [DataMember(Name = "orderHash", IsRequired = true, EmitDefaultValue = true)]
        public string OrderHash { get; set; }

        /// <summary>
        /// Gets or Sets OrderSignature
        /// </summary>
        [DataMember(Name = "orderSignature", IsRequired = true, EmitDefaultValue = true)]
        public string OrderSignature { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class V1TsSdkV1OrderbookCreateListingPostRequest {\n");
            sb.Append("  MakerFees: ").Append(MakerFees).Append("\n");
            sb.Append("  OrderComponents: ").Append(OrderComponents).Append("\n");
            sb.Append("  OrderHash: ").Append(OrderHash).Append("\n");
            sb.Append("  OrderSignature: ").Append(OrderSignature).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}

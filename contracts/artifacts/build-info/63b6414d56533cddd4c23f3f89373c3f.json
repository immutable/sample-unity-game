{"id":"63b6414d56533cddd4c23f3f89373c3f","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@imtbl/contracts/contracts/allowlist/IOperatorAllowlist.sol":{"content":"// Copyright Immutable Pty Ltd 2018 - 2023\n// SPDX-License-Identifier: Apache 2.0\npragma solidity 0.8.19;\n\n/**\n * @notice Required interface of an OperatorAllowlist compliant contract\n */\ninterface IOperatorAllowlist {\n    /** @notice Returns true if an address is Allowlisted false otherwise\n     *  @param target the address to be checked against the Allowlist\n     */\n    function isAllowlisted(address target) external view returns (bool);\n}\n"},"@imtbl/contracts/contracts/allowlist/IWalletProxy.sol":{"content":"// Copyright Immutable Pty Ltd 2018 - 2023\n// SPDX-License-Identifier: Apache 2.0\npragma solidity 0.8.19;\n\n// Interface to retrieve the implemention stored inside the Proxy contract\n/// Interface for Passport Wallet's proxy contract.\ninterface IWalletProxy {\n    // Returns the current implementation address used by the proxy contract\n    // solhint-disable-next-line func-name-mixedcase\n    function PROXY_getImplementation() external view returns (address);\n}\n"},"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol":{"content":"// Copyright Immutable Pty Ltd 2018 - 2024\n// SPDX-License-Identifier: Apache 2.0\npragma solidity 0.8.19;\n\nimport {UUPSUpgradeable} from \"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol\";\nimport {AccessControlEnumerableUpgradeable} from \"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol\";\n\n// Introspection\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n// Interfaces\nimport {IOperatorAllowlist} from \"./IOperatorAllowlist.sol\";\nimport {IWalletProxy} from \"./IWalletProxy.sol\";\n\n/*\n    OperatorAllowlist is an implementation of a Allowlist registry, storing addresses and bytecode\n    which are allowed to be approved operators and execute transfers of interfacing token contracts (e.g. ERC721/ERC1155).\n    The registry will be a deployed contract that tokens may interface with and point to.\n*/\n\ncontract OperatorAllowlistUpgradeable is\n    ERC165,\n    AccessControlEnumerableUpgradeable,\n    UUPSUpgradeable,\n    IOperatorAllowlist\n{\n    ///     =====       Events       =====\n\n    /// @notice Emitted when a target address is added or removed from the Allowlist\n    event AddressAllowlistChanged(address indexed target, bool added);\n\n    /// @notice Emitted when a target smart contract wallet is added or removed from the Allowlist\n    event WalletAllowlistChanged(bytes32 indexed targetBytes, address indexed targetAddress, bool added);\n    ///     =====   State Variables  =====\n\n    /// @notice Only REGISTRAR_ROLE can invoke white listing registration and removal\n    bytes32 public constant REGISTRAR_ROLE = bytes32(\"REGISTRAR_ROLE\");\n\n    /// @notice Only UPGRADE_ROLE can upgrade the contract\n    bytes32 public constant UPGRADE_ROLE = bytes32(\"UPGRADE_ROLE\");\n\n    /// @notice Mapping of Allowlisted addresses\n    mapping(address aContract => bool allowed) private addressAllowlist;\n\n    /// @notice Mapping of Allowlisted implementation addresses\n    mapping(address impl => bool allowed) private addressImplementationAllowlist;\n\n    /// @notice Mapping of Allowlisted bytecodes\n    mapping(bytes32 bytecodeHash => bool allowed) private bytecodeAllowlist;\n\n    ///     =====   Initializer  =====\n\n    /**\n     * @notice Grants `DEFAULT_ADMIN_ROLE` to the supplied `admin` address\n     * @param _roleAdmin the address to grant `DEFAULT_ADMIN_ROLE` to\n     * @param _upgradeAdmin the address to grant `UPGRADE_ROLE` to\n     */\n    function initialize(address _roleAdmin, address _upgradeAdmin, address _registerarAdmin) public initializer {\n        __UUPSUpgradeable_init();\n        __AccessControl_init();\n        _grantRole(DEFAULT_ADMIN_ROLE, _roleAdmin);\n        _grantRole(UPGRADE_ROLE, _upgradeAdmin);\n        _grantRole(REGISTRAR_ROLE, _registerarAdmin);\n    }\n\n    ///     =====  External functions  =====\n\n    /**\n     * @notice Adds a list of multiple addresses to Allowlist\n     * @param addressTargets the addresses to be added to the allowlist\n     */\n    function addAddressesToAllowlist(address[] calldata addressTargets) external onlyRole(REGISTRAR_ROLE) {\n        for (uint256 i; i < addressTargets.length; i++) {\n            addressAllowlist[addressTargets[i]] = true;\n            emit AddressAllowlistChanged(addressTargets[i], true);\n        }\n    }\n\n    /**\n     * @notice Removes a list target address from Allowlist\n     * @param addressTargets the addresses to be removed from the allowlist\n     */\n    function removeAddressesFromAllowlist(address[] calldata addressTargets) external onlyRole(REGISTRAR_ROLE) {\n        for (uint256 i; i < addressTargets.length; i++) {\n            // slither-disable-next-line costly-loop\n            delete addressAllowlist[addressTargets[i]];\n            emit AddressAllowlistChanged(addressTargets[i], false);\n        }\n    }\n\n    /**\n     * @notice Add a smart contract wallet to the Allowlist.\n     * This will allowlist the proxy and implementation contract pair.\n     * First, the bytecode of the proxy is added to the bytecode allowlist.\n     * Second, the implementation address stored in the proxy is stored in the\n     * implementation address allowlist.\n     * @param walletAddr the wallet address to be added to the allowlist\n     */\n    function addWalletToAllowlist(address walletAddr) external onlyRole(REGISTRAR_ROLE) {\n        // get bytecode of wallet\n        bytes32 codeHash;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codeHash := extcodehash(walletAddr)\n        }\n        bytecodeAllowlist[codeHash] = true;\n        // get address of wallet module\n        address impl = IWalletProxy(walletAddr).PROXY_getImplementation();\n        addressImplementationAllowlist[impl] = true;\n\n        emit WalletAllowlistChanged(codeHash, walletAddr, true);\n    }\n\n    /**\n     * @notice Remove  a smart contract wallet from the Allowlist\n     * This will remove the proxy bytecode hash and implementation contract address pair from the allowlist\n     * @param walletAddr the wallet address to be removed from the allowlist\n     */\n    function removeWalletFromAllowlist(address walletAddr) external onlyRole(REGISTRAR_ROLE) {\n        // get bytecode of wallet\n        bytes32 codeHash;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codeHash := extcodehash(walletAddr)\n        }\n        delete bytecodeAllowlist[codeHash];\n        // get address of wallet module\n        address impl = IWalletProxy(walletAddr).PROXY_getImplementation();\n        delete addressImplementationAllowlist[impl];\n\n        emit WalletAllowlistChanged(codeHash, walletAddr, false);\n    }\n\n    ///     =====   View functions  =====\n\n    /**\n     * @notice Returns true if an address is Allowlisted, false otherwise\n     * @param target the address that will be checked for presence in the allowlist\n     */\n    function isAllowlisted(address target) external view override returns (bool) {\n        if (addressAllowlist[target]) {\n            return true;\n        }\n\n        // Check if caller is a Allowlisted smart contract wallet\n        bytes32 codeHash;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codeHash := extcodehash(target)\n        }\n        if (bytecodeAllowlist[codeHash]) {\n            // If wallet proxy bytecode is approved, check addr of implementation contract\n            address impl = IWalletProxy(target).PROXY_getImplementation();\n\n            return addressImplementationAllowlist[impl];\n        }\n\n        return false;\n    }\n\n    /**\n     * @notice ERC-165 interface support\n     * @param interfaceId The interface identifier, which is a 4-byte selector.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(ERC165, AccessControlEnumerableUpgradeable) returns (bool) {\n        return interfaceId == type(IOperatorAllowlist).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    // Override the _authorizeUpgrade function\n    // solhint-disable-next-line no-empty-blocks\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADE_ROLE) {}\n\n    /// @notice storage gap for additional variables for upgrades\n    // slither-disable-start unused-state\n    // solhint-disable-next-line var-name-mixedcase\n    uint256[20] private __OperatorAllowlistUpgradeableGap;\n    // slither-disable-end unused-state\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/TestOperatorAllowList.sol":{"content":"// Copyright (c) Immutable Australia Pty Ltd 2018 - 2023\n// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol\";\n\ncontract TestOperatorAllowlist is OperatorAllowlistUpgradeable {\n\n}"},"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerableUpgradeable.sol\";\nimport \"./AccessControlUpgradeable.sol\";\nimport \"../utils/structs/EnumerableSetUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerableUpgradeable is Initializable, IAccessControlEnumerableUpgradeable, AccessControlUpgradeable {\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n\n    mapping(bytes32 => EnumerableSetUpgradeable.AddressSet) private _roleMembers;\n\n    function __AccessControlEnumerable_init() internal onlyInitializing {\n    }\n\n    function __AccessControlEnumerable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerableUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerableUpgradeable is IAccessControlUpgradeable {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport {Initializable} from \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@imtbl/contracts/contracts/allowlist/IOperatorAllowlist.sol":{"ast":{"absolutePath":"@imtbl/contracts/contracts/allowlist/IOperatorAllowlist.sol","exportedSymbols":{"IOperatorAllowlist":[11]},"id":12,"license":"Apache 2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"82:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IOperatorAllowlist","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"107:80:0","text":" @notice Required interface of an OperatorAllowlist compliant contract"},"fullyImplemented":false,"id":11,"linearizedBaseContracts":[11],"name":"IOperatorAllowlist","nameLocation":"198:18:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"223:147:0","text":"@notice Returns true if an address is Allowlisted false otherwise\n  @param target the address to be checked against the Allowlist"},"functionSelector":"05a3b809","id":10,"implemented":false,"kind":"function","modifiers":[],"name":"isAllowlisted","nameLocation":"384:13:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"target","nameLocation":"406:6:0","nodeType":"VariableDeclaration","scope":10,"src":"398:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"397:16:0"},"returnParameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10,"src":"437:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7,"name":"bool","nodeType":"ElementaryTypeName","src":"437:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"436:6:0"},"scope":11,"src":"375:68:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":12,"src":"188:257:0","usedErrors":[]}],"src":"82:364:0"},"id":0},"@imtbl/contracts/contracts/allowlist/IWalletProxy.sol":{"ast":{"absolutePath":"@imtbl/contracts/contracts/allowlist/IWalletProxy.sol","exportedSymbols":{"IWalletProxy":[20]},"id":21,"license":"Apache 2.0","nodeType":"SourceUnit","nodes":[{"id":13,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"82:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IWalletProxy","contractDependencies":[],"contractKind":"interface","documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"182:52:1","text":"Interface for Passport Wallet's proxy contract."},"fullyImplemented":false,"id":20,"linearizedBaseContracts":[20],"name":"IWalletProxy","nameLocation":"244:12:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"90611127","id":19,"implemented":false,"kind":"function","modifiers":[],"name":"PROXY_getImplementation","nameLocation":"402:23:1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"425:2:1"},"returnParameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":19,"src":"451:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"450:9:1"},"scope":20,"src":"393:67:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":21,"src":"234:228:1","usedErrors":[]}],"src":"82:381:1"},"id":1},"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol":{"ast":{"absolutePath":"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[540],"ERC165":[376],"IOperatorAllowlist":[11],"IWalletProxy":[20],"OperatorAllowlistUpgradeable":[352],"UUPSUpgradeable":[1647]},"id":353,"license":"Apache 2.0","nodeType":"SourceUnit","nodes":[{"id":22,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"82:23:2"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol","file":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol","id":24,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":353,"sourceUnit":1648,"src":"107:105:2","symbolAliases":[{"foreign":{"id":23,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"115:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol","file":"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol","id":26,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":353,"sourceUnit":541,"src":"213:138:2","symbolAliases":[{"foreign":{"id":25,"name":"AccessControlEnumerableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"221:34:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":28,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":353,"sourceUnit":377,"src":"370:78:2","symbolAliases":[{"foreign":{"id":27,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"378:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@imtbl/contracts/contracts/allowlist/IOperatorAllowlist.sol","file":"./IOperatorAllowlist.sol","id":30,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":353,"sourceUnit":12,"src":"464:60:2","symbolAliases":[{"foreign":{"id":29,"name":"IOperatorAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"472:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@imtbl/contracts/contracts/allowlist/IWalletProxy.sol","file":"./IWalletProxy.sol","id":32,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":353,"sourceUnit":21,"src":"525:48:2","symbolAliases":[{"foreign":{"id":31,"name":"IWalletProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"533:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":33,"name":"ERC165","nameLocations":["939:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":376,"src":"939:6:2"},"id":34,"nodeType":"InheritanceSpecifier","src":"939:6:2"},{"baseName":{"id":35,"name":"AccessControlEnumerableUpgradeable","nameLocations":["951:34:2"],"nodeType":"IdentifierPath","referencedDeclaration":540,"src":"951:34:2"},"id":36,"nodeType":"InheritanceSpecifier","src":"951:34:2"},{"baseName":{"id":37,"name":"UUPSUpgradeable","nameLocations":["991:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1647,"src":"991:15:2"},"id":38,"nodeType":"InheritanceSpecifier","src":"991:15:2"},{"baseName":{"id":39,"name":"IOperatorAllowlist","nameLocations":["1012:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":11,"src":"1012:18:2"},"id":40,"nodeType":"InheritanceSpecifier","src":"1012:18:2"}],"canonicalName":"OperatorAllowlistUpgradeable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":352,"linearizedBaseContracts":[352,11,1647,1331,996,1006,540,877,2412,2424,902,975,2028,1510,376,388],"name":"OperatorAllowlistUpgradeable","nameLocation":"903:28:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1081:80:2","text":"@notice Emitted when a target address is added or removed from the Allowlist"},"eventSelector":"218a1635b2755f3fe7bdb77932fcd6ffca69760533404fe817f7404315bf6df0","id":47,"name":"AddressAllowlistChanged","nameLocation":"1172:23:2","nodeType":"EventDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"1212:6:2","nodeType":"VariableDeclaration","scope":47,"src":"1196:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"1196:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"indexed":false,"mutability":"mutable","name":"added","nameLocation":"1225:5:2","nodeType":"VariableDeclaration","scope":47,"src":"1220:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"1220:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1195:36:2"},"src":"1166:66:2"},{"anonymous":false,"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"1238:94:2","text":"@notice Emitted when a target smart contract wallet is added or removed from the Allowlist"},"eventSelector":"52a9758e33d80a562e98b34d922581e414149b9c485e5929682a72acb451c315","id":56,"name":"WalletAllowlistChanged","nameLocation":"1343:22:2","nodeType":"EventDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"indexed":true,"mutability":"mutable","name":"targetBytes","nameLocation":"1382:11:2","nodeType":"VariableDeclaration","scope":56,"src":"1366:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1366:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":52,"indexed":true,"mutability":"mutable","name":"targetAddress","nameLocation":"1411:13:2","nodeType":"VariableDeclaration","scope":56,"src":"1395:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":54,"indexed":false,"mutability":"mutable","name":"added","nameLocation":"1431:5:2","nodeType":"VariableDeclaration","scope":56,"src":"1426:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":53,"name":"bool","nodeType":"ElementaryTypeName","src":"1426:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1365:72:2"},"src":"1337:101:2"},{"constant":true,"documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"1487:81:2","text":"@notice Only REGISTRAR_ROLE can invoke white listing registration and removal"},"functionSelector":"f68e9553","id":63,"mutability":"constant","name":"REGISTRAR_ROLE","nameLocation":"1597:14:2","nodeType":"VariableDeclaration","scope":352,"src":"1573:66:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":58,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1573:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5245474953545241525f524f4c45","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:16:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_edcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c309238","typeString":"literal_string \"REGISTRAR_ROLE\""},"value":"REGISTRAR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_edcc084d3dcd65a1f7f23c65c46722faca6953d28e43150a467cf43e5c309238","typeString":"literal_string \"REGISTRAR_ROLE\""}],"id":60,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1614:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":59,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1614:7:2","typeDescriptions":{}}},"id":62,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1614:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"1646:54:2","text":"@notice Only UPGRADE_ROLE can upgrade the contract"},"functionSelector":"b908afa8","id":70,"mutability":"constant","name":"UPGRADE_ROLE","nameLocation":"1729:12:2","nodeType":"VariableDeclaration","scope":352,"src":"1705:62:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1705:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"555047524144455f524f4c45","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1752:14:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_88aa719609f728b0c5e7fb8dd3608d5c25d497efbb3b9dd64e9251ebba101508","typeString":"literal_string \"UPGRADE_ROLE\""},"value":"UPGRADE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_88aa719609f728b0c5e7fb8dd3608d5c25d497efbb3b9dd64e9251ebba101508","typeString":"literal_string \"UPGRADE_ROLE\""}],"id":67,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1744:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1744:7:2","typeDescriptions":{}}},"id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1744:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"1774:44:2","text":"@notice Mapping of Allowlisted addresses"},"id":75,"mutability":"mutable","name":"addressAllowlist","nameLocation":"1874:16:2","nodeType":"VariableDeclaration","scope":352,"src":"1823:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":74,"keyName":"aContract","keyNameLocation":"1839:9:2","keyType":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"1831:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1823:42:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"allowed","valueNameLocation":"1857:7:2","valueType":{"id":73,"name":"bool","nodeType":"ElementaryTypeName","src":"1852:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"1897:59:2","text":"@notice Mapping of Allowlisted implementation addresses"},"id":80,"mutability":"mutable","name":"addressImplementationAllowlist","nameLocation":"2007:30:2","nodeType":"VariableDeclaration","scope":352,"src":"1961:76:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":79,"keyName":"impl","keyNameLocation":"1977:4:2","keyType":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1961:37:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"allowed","valueNameLocation":"1990:7:2","valueType":{"id":78,"name":"bool","nodeType":"ElementaryTypeName","src":"1985:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2044:44:2","text":"@notice Mapping of Allowlisted bytecodes"},"id":85,"mutability":"mutable","name":"bytecodeAllowlist","nameLocation":"2147:17:2","nodeType":"VariableDeclaration","scope":352,"src":"2093:71:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":84,"keyName":"bytecodeHash","keyNameLocation":"2109:12:2","keyType":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2101:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2093:45:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"allowed","valueNameLocation":"2130:7:2","valueType":{"id":83,"name":"bool","nodeType":"ElementaryTypeName","src":"2125:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":118,"nodeType":"Block","src":"2547:228:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":97,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2557:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2557:24:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":100,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2591:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2591:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":102,"nodeType":"ExpressionStatement","src":"2591:22:2"},{"expression":{"arguments":[{"id":104,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2634:18:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":105,"name":"_roleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2654:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":103,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[510],"referencedDeclaration":510,"src":"2623:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2623:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"2623:42:2"},{"expression":{"arguments":[{"id":109,"name":"UPGRADE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"2686:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":110,"name":"_upgradeAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2700:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":108,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[510],"referencedDeclaration":510,"src":"2675:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"ExpressionStatement","src":"2675:39:2"},{"expression":{"arguments":[{"id":114,"name":"REGISTRAR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"2735:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":115,"name":"_registerarAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"2751:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":113,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[510],"referencedDeclaration":510,"src":"2724:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":117,"nodeType":"ExpressionStatement","src":"2724:44:2"}]},"documentation":{"id":86,"nodeType":"StructuredDocumentation","src":"2211:223:2","text":" @notice Grants `DEFAULT_ADMIN_ROLE` to the supplied `admin` address\n @param _roleAdmin the address to grant `DEFAULT_ADMIN_ROLE` to\n @param _upgradeAdmin the address to grant `UPGRADE_ROLE` to"},"functionSelector":"c0c53b8b","id":119,"implemented":true,"kind":"function","modifiers":[{"id":95,"kind":"modifierInvocation","modifierName":{"id":94,"name":"initializer","nameLocations":["2535:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":1412,"src":"2535:11:2"},"nodeType":"ModifierInvocation","src":"2535:11:2"}],"name":"initialize","nameLocation":"2448:10:2","nodeType":"FunctionDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"_roleAdmin","nameLocation":"2467:10:2","nodeType":"VariableDeclaration","scope":119,"src":"2459:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"2459:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"_upgradeAdmin","nameLocation":"2487:13:2","nodeType":"VariableDeclaration","scope":119,"src":"2479:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"2479:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"_registerarAdmin","nameLocation":"2510:16:2","nodeType":"VariableDeclaration","scope":119,"src":"2502:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2458:69:2"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2547:0:2"},"scope":352,"src":"2439:336:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":156,"nodeType":"Block","src":"3079:198:2","statements":[{"body":{"id":154,"nodeType":"Block","src":"3137:134:2","statements":[{"expression":{"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":139,"name":"addressAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"3151:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":143,"indexExpression":{"baseExpression":{"id":140,"name":"addressTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3168:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":142,"indexExpression":{"id":141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"3183:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3168:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3151:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3189:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3151:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"3151:42:2"},{"eventCall":{"arguments":[{"baseExpression":{"id":148,"name":"addressTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3236:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":150,"indexExpression":{"id":149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"3251:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3236:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3255:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":147,"name":"AddressAllowlistChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"3212:23:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":153,"nodeType":"EmitStatement","src":"3207:53:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"3105:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":133,"name":"addressTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3109:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3124:6:2","memberName":"length","nodeType":"MemberAccess","src":"3109:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3105:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":155,"initializationExpression":{"assignments":[130],"declarations":[{"constant":false,"id":130,"mutability":"mutable","name":"i","nameLocation":"3102:1:2","nodeType":"VariableDeclaration","scope":155,"src":"3094:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3094:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":131,"nodeType":"VariableDeclarationStatement","src":"3094:9:2"},"loopExpression":{"expression":{"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3132:3:2","subExpression":{"id":136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"3132:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":138,"nodeType":"ExpressionStatement","src":"3132:3:2"},"nodeType":"ForStatement","src":"3089:182:2"}]},"documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"2827:145:2","text":" @notice Adds a list of multiple addresses to Allowlist\n @param addressTargets the addresses to be added to the allowlist"},"functionSelector":"7f17caa7","id":157,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":126,"name":"REGISTRAR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3063:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":127,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyRole","nameLocations":["3054:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":583,"src":"3054:8:2"},"nodeType":"ModifierInvocation","src":"3054:24:2"}],"name":"addAddressesToAllowlist","nameLocation":"2986:23:2","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"addressTargets","nameLocation":"3029:14:2","nodeType":"VariableDeclaration","scope":157,"src":"3010:33:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"3010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":122,"nodeType":"ArrayTypeName","src":"3010:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3009:35:2"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"3079:0:2"},"scope":352,"src":"2977:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":193,"nodeType":"Block","src":"3542:252:2","statements":[{"body":{"id":191,"nodeType":"Block","src":"3600:188:2","statements":[{"expression":{"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3667:42:2","subExpression":{"baseExpression":{"id":177,"name":"addressAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"3674:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":181,"indexExpression":{"baseExpression":{"id":178,"name":"addressTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"3691:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":180,"indexExpression":{"id":179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3706:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3691:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3674:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":183,"nodeType":"ExpressionStatement","src":"3667:42:2"},{"eventCall":{"arguments":[{"baseExpression":{"id":185,"name":"addressTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"3752:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":187,"indexExpression":{"id":186,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3767:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3752:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3771:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":184,"name":"AddressAllowlistChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"3728:23:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3728:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":190,"nodeType":"EmitStatement","src":"3723:54:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3568:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":171,"name":"addressTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"3572:14:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:2","memberName":"length","nodeType":"MemberAccess","src":"3572:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3568:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":192,"initializationExpression":{"assignments":[168],"declarations":[{"constant":false,"id":168,"mutability":"mutable","name":"i","nameLocation":"3565:1:2","nodeType":"VariableDeclaration","scope":192,"src":"3557:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3557:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":169,"nodeType":"VariableDeclarationStatement","src":"3557:9:2"},"loopExpression":{"expression":{"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3595:3:2","subExpression":{"id":174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"3595:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":176,"nodeType":"ExpressionStatement","src":"3595:3:2"},"nodeType":"ForStatement","src":"3552:236:2"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"3283:147:2","text":" @notice Removes a list target address from Allowlist\n @param addressTargets the addresses to be removed from the allowlist"},"functionSelector":"6caacbe7","id":194,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":164,"name":"REGISTRAR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3526:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":165,"kind":"modifierInvocation","modifierName":{"id":163,"name":"onlyRole","nameLocations":["3517:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":583,"src":"3517:8:2"},"nodeType":"ModifierInvocation","src":"3517:24:2"}],"name":"removeAddressesFromAllowlist","nameLocation":"3444:28:2","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"addressTargets","nameLocation":"3492:14:2","nodeType":"VariableDeclaration","scope":194,"src":"3473:33:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"3473:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":160,"nodeType":"ArrayTypeName","src":"3473:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3472:35:2"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"3542:0:2"},"scope":352,"src":"3435:359:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":233,"nodeType":"Block","src":"4301:478:2","statements":[{"assignments":[204],"declarations":[{"constant":false,"id":204,"mutability":"mutable","name":"codeHash","nameLocation":"4353:8:2","nodeType":"VariableDeclaration","scope":233,"src":"4345:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4345:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":205,"nodeType":"VariableDeclarationStatement","src":"4345:16:2"},{"AST":{"nodeType":"YulBlock","src":"4436:59:2","statements":[{"nodeType":"YulAssignment","src":"4450:35:2","value":{"arguments":[{"name":"walletAddr","nodeType":"YulIdentifier","src":"4474:10:2"}],"functionName":{"name":"extcodehash","nodeType":"YulIdentifier","src":"4462:11:2"},"nodeType":"YulFunctionCall","src":"4462:23:2"},"variableNames":[{"name":"codeHash","nodeType":"YulIdentifier","src":"4450:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":204,"isOffset":false,"isSlot":false,"src":"4450:8:2","valueSize":1},{"declaration":197,"isOffset":false,"isSlot":false,"src":"4474:10:2","valueSize":1}],"id":206,"nodeType":"InlineAssembly","src":"4427:68:2"},{"expression":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":207,"name":"bytecodeAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"4504:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":209,"indexExpression":{"id":208,"name":"codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"4522:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4504:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4534:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4504:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":212,"nodeType":"ExpressionStatement","src":"4504:34:2"},{"assignments":[214],"declarations":[{"constant":false,"id":214,"mutability":"mutable","name":"impl","nameLocation":"4596:4:2","nodeType":"VariableDeclaration","scope":233,"src":"4588:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"4588:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":220,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":216,"name":"walletAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"4616:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":215,"name":"IWalletProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"4603:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWalletProxy_$20_$","typeString":"type(contract IWalletProxy)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4603:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWalletProxy_$20","typeString":"contract IWalletProxy"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4628:23:2","memberName":"PROXY_getImplementation","nodeType":"MemberAccess","referencedDeclaration":19,"src":"4603:48:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4603:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4588:65:2"},{"expression":{"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":221,"name":"addressImplementationAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"4663:30:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":223,"indexExpression":{"id":222,"name":"impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"4694:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4663:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4702:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4663:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":226,"nodeType":"ExpressionStatement","src":"4663:43:2"},{"eventCall":{"arguments":[{"id":228,"name":"codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"4745:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"walletAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"4755:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4767:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":227,"name":"WalletAllowlistChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"4722:22:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$returns$__$","typeString":"function (bytes32,address,bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4722:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"EmitStatement","src":"4717:55:2"}]},"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"3800:412:2","text":" @notice Add a smart contract wallet to the Allowlist.\n This will allowlist the proxy and implementation contract pair.\n First, the bytecode of the proxy is added to the bytecode allowlist.\n Second, the implementation address stored in the proxy is stored in the\n implementation address allowlist.\n @param walletAddr the wallet address to be added to the allowlist"},"functionSelector":"0488d974","id":234,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":200,"name":"REGISTRAR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"4285:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":201,"kind":"modifierInvocation","modifierName":{"id":199,"name":"onlyRole","nameLocations":["4276:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":583,"src":"4276:8:2"},"nodeType":"ModifierInvocation","src":"4276:24:2"}],"name":"addWalletToAllowlist","nameLocation":"4226:20:2","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"walletAddr","nameLocation":"4255:10:2","nodeType":"VariableDeclaration","scope":234,"src":"4247:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4246:20:2"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"4301:0:2"},"scope":352,"src":"4217:562:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":271,"nodeType":"Block","src":"5141:479:2","statements":[{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"codeHash","nameLocation":"5193:8:2","nodeType":"VariableDeclaration","scope":271,"src":"5185:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5185:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":245,"nodeType":"VariableDeclarationStatement","src":"5185:16:2"},{"AST":{"nodeType":"YulBlock","src":"5276:59:2","statements":[{"nodeType":"YulAssignment","src":"5290:35:2","value":{"arguments":[{"name":"walletAddr","nodeType":"YulIdentifier","src":"5314:10:2"}],"functionName":{"name":"extcodehash","nodeType":"YulIdentifier","src":"5302:11:2"},"nodeType":"YulFunctionCall","src":"5302:23:2"},"variableNames":[{"name":"codeHash","nodeType":"YulIdentifier","src":"5290:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":244,"isOffset":false,"isSlot":false,"src":"5290:8:2","valueSize":1},{"declaration":237,"isOffset":false,"isSlot":false,"src":"5314:10:2","valueSize":1}],"id":246,"nodeType":"InlineAssembly","src":"5267:68:2"},{"expression":{"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5344:34:2","subExpression":{"baseExpression":{"id":247,"name":"bytecodeAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"5351:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":249,"indexExpression":{"id":248,"name":"codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"5369:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5351:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":251,"nodeType":"ExpressionStatement","src":"5344:34:2"},{"assignments":[253],"declarations":[{"constant":false,"id":253,"mutability":"mutable","name":"impl","nameLocation":"5436:4:2","nodeType":"VariableDeclaration","scope":271,"src":"5428:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"5428:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":259,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":255,"name":"walletAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"5456:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":254,"name":"IWalletProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"5443:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWalletProxy_$20_$","typeString":"type(contract IWalletProxy)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWalletProxy_$20","typeString":"contract IWalletProxy"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5468:23:2","memberName":"PROXY_getImplementation","nodeType":"MemberAccess","referencedDeclaration":19,"src":"5443:48:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5428:65:2"},{"expression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5503:43:2","subExpression":{"baseExpression":{"id":260,"name":"addressImplementationAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"5510:30:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":262,"indexExpression":{"id":261,"name":"impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"5541:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5510:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"5503:43:2"},{"eventCall":{"arguments":[{"id":266,"name":"codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"5585:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":267,"name":"walletAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"5595:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5607:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":265,"name":"WalletAllowlistChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"5562:22:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$returns$__$","typeString":"function (bytes32,address,bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5562:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"EmitStatement","src":"5557:56:2"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"4785:262:2","text":" @notice Remove  a smart contract wallet from the Allowlist\n This will remove the proxy bytecode hash and implementation contract address pair from the allowlist\n @param walletAddr the wallet address to be removed from the allowlist"},"functionSelector":"6aa70096","id":272,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":240,"name":"REGISTRAR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"5125:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":241,"kind":"modifierInvocation","modifierName":{"id":239,"name":"onlyRole","nameLocations":["5116:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":583,"src":"5116:8:2"},"nodeType":"ModifierInvocation","src":"5116:24:2"}],"name":"removeWalletFromAllowlist","nameLocation":"5061:25:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"walletAddr","nameLocation":"5095:10:2","nodeType":"VariableDeclaration","scope":272,"src":"5087:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"5087:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5086:20:2"},"returnParameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"5141:0:2"},"scope":352,"src":"5052:568:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[10],"body":{"id":311,"nodeType":"Block","src":"5920:604:2","statements":[{"condition":{"baseExpression":{"id":281,"name":"addressAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"5934:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":283,"indexExpression":{"id":282,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5951:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5934:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":287,"nodeType":"IfStatement","src":"5930:66:2","trueBody":{"id":286,"nodeType":"Block","src":"5960:36:2","statements":[{"expression":{"hexValue":"74727565","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5981:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":280,"id":285,"nodeType":"Return","src":"5974:11:2"}]}},{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"codeHash","nameLocation":"6080:8:2","nodeType":"VariableDeclaration","scope":311,"src":"6072:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6072:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":290,"nodeType":"VariableDeclarationStatement","src":"6072:16:2"},{"AST":{"nodeType":"YulBlock","src":"6163:55:2","statements":[{"nodeType":"YulAssignment","src":"6177:31:2","value":{"arguments":[{"name":"target","nodeType":"YulIdentifier","src":"6201:6:2"}],"functionName":{"name":"extcodehash","nodeType":"YulIdentifier","src":"6189:11:2"},"nodeType":"YulFunctionCall","src":"6189:19:2"},"variableNames":[{"name":"codeHash","nodeType":"YulIdentifier","src":"6177:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":289,"isOffset":false,"isSlot":false,"src":"6177:8:2","valueSize":1},{"declaration":275,"isOffset":false,"isSlot":false,"src":"6201:6:2","valueSize":1}],"id":291,"nodeType":"InlineAssembly","src":"6154:64:2"},{"condition":{"baseExpression":{"id":292,"name":"bytecodeAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"6231:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":294,"indexExpression":{"id":293,"name":"codeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"6249:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6231:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":308,"nodeType":"IfStatement","src":"6227:268:2","trueBody":{"id":307,"nodeType":"Block","src":"6260:235:2","statements":[{"assignments":[296],"declarations":[{"constant":false,"id":296,"mutability":"mutable","name":"impl","nameLocation":"6373:4:2","nodeType":"VariableDeclaration","scope":307,"src":"6365:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"6365:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":302,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":298,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"6393:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":297,"name":"IWalletProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"6380:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWalletProxy_$20_$","typeString":"type(contract IWalletProxy)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6380:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWalletProxy_$20","typeString":"contract IWalletProxy"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6401:23:2","memberName":"PROXY_getImplementation","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6380:44:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6380:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6365:61:2"},{"expression":{"baseExpression":{"id":303,"name":"addressImplementationAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6448:30:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":305,"indexExpression":{"id":304,"name":"impl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"6479:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6448:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":280,"id":306,"nodeType":"Return","src":"6441:43:2"}]}},{"expression":{"hexValue":"66616c7365","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6512:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":280,"id":310,"nodeType":"Return","src":"6505:12:2"}]},"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"5669:169:2","text":" @notice Returns true if an address is Allowlisted, false otherwise\n @param target the address that will be checked for presence in the allowlist"},"functionSelector":"05a3b809","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"isAllowlisted","nameLocation":"5852:13:2","nodeType":"FunctionDefinition","overrides":{"id":277,"nodeType":"OverrideSpecifier","overrides":[],"src":"5896:8:2"},"parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"target","nameLocation":"5874:6:2","nodeType":"VariableDeclaration","scope":312,"src":"5866:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"5866:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5865:16:2"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"5914:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":278,"name":"bool","nodeType":"ElementaryTypeName","src":"5914:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5913:6:2"},"scope":352,"src":"5843:681:2","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[375,451],"body":{"id":335,"nodeType":"Block","src":"6816:115:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":323,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6833:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":325,"name":"IOperatorAllowlist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6853:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOperatorAllowlist_$11_$","typeString":"type(contract IOperatorAllowlist)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IOperatorAllowlist_$11_$","typeString":"type(contract IOperatorAllowlist)"}],"id":324,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6848:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6848:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IOperatorAllowlist_$11","typeString":"type(contract IOperatorAllowlist)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6873:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"6848:36:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"6833:51:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":331,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6912:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":329,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6888:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_OperatorAllowlistUpgradeable_$352_$","typeString":"type(contract super OperatorAllowlistUpgradeable)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6894:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":451,"src":"6888:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6888:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6833:91:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":322,"id":334,"nodeType":"Return","src":"6826:98:2"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"6530:132:2","text":" @notice ERC-165 interface support\n @param interfaceId The interface identifier, which is a 4-byte selector."},"functionSelector":"01ffc9a7","id":336,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"6676:17:2","nodeType":"FunctionDefinition","overrides":{"id":319,"nodeType":"OverrideSpecifier","overrides":[{"id":317,"name":"ERC165","nameLocations":["6757:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":376,"src":"6757:6:2"},{"id":318,"name":"AccessControlEnumerableUpgradeable","nameLocations":["6765:34:2"],"nodeType":"IdentifierPath","referencedDeclaration":540,"src":"6765:34:2"}],"src":"6748:52:2"},"parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"interfaceId","nameLocation":"6710:11:2","nodeType":"VariableDeclaration","scope":336,"src":"6703:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":314,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6703:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6693:34:2"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"6810:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":320,"name":"bool","nodeType":"ElementaryTypeName","src":"6810:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6809:6:2"},"scope":352,"src":"6667:264:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1641],"body":{"id":345,"nodeType":"Block","src":"7128:2:2","statements":[]},"id":346,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":342,"name":"UPGRADE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"7114:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":343,"kind":"modifierInvocation","modifierName":{"id":341,"name":"onlyRole","nameLocations":["7105:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":583,"src":"7105:8:2"},"nodeType":"ModifierInvocation","src":"7105:22:2"}],"name":"_authorizeUpgrade","nameLocation":"7042:17:2","nodeType":"FunctionDefinition","overrides":{"id":340,"nodeType":"OverrideSpecifier","overrides":[],"src":"7096:8:2"},"parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"newImplementation","nameLocation":"7068:17:2","nodeType":"VariableDeclaration","scope":346,"src":"7060:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"7060:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7059:27:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"7128:0:2"},"scope":352,"src":"7033:97:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"7136:61:2","text":"@notice storage gap for additional variables for upgrades"},"id":351,"mutability":"mutable","name":"__OperatorAllowlistUpgradeableGap","nameLocation":"7316:33:2","nodeType":"VariableDeclaration","scope":352,"src":"7296:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage","typeString":"uint256[20]"},"typeName":{"baseType":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"7296:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":350,"length":{"hexValue":"3230","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7304:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"ArrayTypeName","src":"7296:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$20_storage_ptr","typeString":"uint256[20]"}},"visibility":"private"}],"scope":353,"src":"894:6498:2","usedErrors":[]}],"src":"82:7311:2"},"id":2},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[376],"IERC165":[388]},"id":377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":354,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":355,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":377,"sourceUnit":389,"src":"124:23:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":357,"name":"IERC165","nameLocations":["754:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"754:7:3"},"id":358,"nodeType":"InheritanceSpecifier","src":"754:7:3"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"149:576:3","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":376,"linearizedBaseContracts":[376,388],"name":"ERC165","nameLocation":"744:6:3","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[387],"body":{"id":374,"nodeType":"Block","src":"920:64:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":367,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"937:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":369,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"957:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$388_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$388_$","typeString":"type(contract IERC165)"}],"id":368,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$388","typeString":"type(contract IERC165)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":366,"id":373,"nodeType":"Return","src":"930:47:3"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"768:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":375,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:3","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:3"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:3","nodeType":"VariableDeclaration","scope":375,"src":"856:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":360,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"914:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":364,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:3"},"scope":376,"src":"829:155:3","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":377,"src":"726:260:3","usedErrors":[]}],"src":"99:888:3"},"id":3},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":378,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"125:279:4","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IERC165","nameLocation":"415:7:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"429:340:4","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:4","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:4","nodeType":"VariableDeclaration","scope":387,"src":"801:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":381,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:4"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"844:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":384,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:4"},"scope":388,"src":"774:76:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":389,"src":"405:447:4","usedErrors":[]}],"src":"100:753:4"},"id":4},"contracts/TestOperatorAllowList.sol":{"ast":{"absolutePath":"contracts/TestOperatorAllowList.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[540],"ERC165":[376],"IOperatorAllowlist":[11],"IWalletProxy":[20],"OperatorAllowlistUpgradeable":[352],"TestOperatorAllowlist":[394],"UUPSUpgradeable":[1647]},"id":395,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"89:23:5"},{"absolutePath":"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol","file":"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":395,"sourceUnit":353,"src":"114:79:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":392,"name":"OperatorAllowlistUpgradeable","nameLocations":["229:28:5"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"229:28:5"},"id":393,"nodeType":"InheritanceSpecifier","src":"229:28:5"}],"canonicalName":"TestOperatorAllowlist","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":394,"linearizedBaseContracts":[394,352,11,1647,1331,996,1006,540,877,2412,2424,902,975,2028,1510,376,388],"name":"TestOperatorAllowlist","nameLocation":"204:21:5","nodeType":"ContractDefinition","nodes":[],"scope":395,"src":"195:67:5","usedErrors":[]}],"src":"89:173:5"},"id":5},"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol","exportedSymbols":{"AccessControlEnumerableUpgradeable":[540],"AccessControlUpgradeable":[877],"ContextUpgradeable":[2028],"ERC165Upgradeable":[2412],"EnumerableSetUpgradeable":[4008],"IAccessControlEnumerableUpgradeable":[902],"IAccessControlUpgradeable":[975],"IERC165Upgradeable":[2424],"Initializable":[1510],"MathUpgradeable":[3290],"SignedMathUpgradeable":[3395],"StringsUpgradeable":[2367]},"id":541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":396,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:6"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol","file":"./IAccessControlEnumerableUpgradeable.sol","id":397,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":903,"src":"143:51:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol","file":"./AccessControlUpgradeable.sol","id":398,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":878,"src":"195:40:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol","file":"../utils/structs/EnumerableSetUpgradeable.sol","id":399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":4009,"src":"236:55:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":541,"sourceUnit":1511,"src":"292:63:6","symbolAliases":[{"foreign":{"id":400,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"300:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":403,"name":"Initializable","nameLocations":["508:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1510,"src":"508:13:6"},"id":404,"nodeType":"InheritanceSpecifier","src":"508:13:6"},{"baseName":{"id":405,"name":"IAccessControlEnumerableUpgradeable","nameLocations":["523:35:6"],"nodeType":"IdentifierPath","referencedDeclaration":902,"src":"523:35:6"},"id":406,"nodeType":"InheritanceSpecifier","src":"523:35:6"},{"baseName":{"id":407,"name":"AccessControlUpgradeable","nameLocations":["560:24:6"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"560:24:6"},"id":408,"nodeType":"InheritanceSpecifier","src":"560:24:6"}],"canonicalName":"AccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"357:94:6","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":540,"linearizedBaseContracts":[540,877,2412,2424,902,975,2028,1510],"name":"AccessControlEnumerableUpgradeable","nameLocation":"470:34:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":412,"libraryName":{"id":409,"name":"EnumerableSetUpgradeable","nameLocations":["597:24:6"],"nodeType":"IdentifierPath","referencedDeclaration":4008,"src":"597:24:6"},"nodeType":"UsingForDirective","src":"591:71:6","typeName":{"id":411,"nodeType":"UserDefinedTypeName","pathNode":{"id":410,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["626:24:6","651:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":3721,"src":"626:35:6"},"referencedDeclaration":3721,"src":"626:35:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"constant":false,"id":417,"mutability":"mutable","name":"_roleMembers","nameLocation":"732:12:6","nodeType":"VariableDeclaration","scope":540,"src":"668:76:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3721_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"typeName":{"id":416,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"676:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"668:55:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3721_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":415,"nodeType":"UserDefinedTypeName","pathNode":{"id":414,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["687:24:6","712:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":3721,"src":"687:35:6"},"referencedDeclaration":3721,"src":"687:35:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},"visibility":"private"},{"body":{"id":422,"nodeType":"Block","src":"819:7:6","statements":[]},"id":423,"implemented":true,"kind":"function","modifiers":[{"id":420,"kind":"modifierInvocation","modifierName":{"id":419,"name":"onlyInitializing","nameLocations":["802:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"802:16:6"},"nodeType":"ModifierInvocation","src":"802:16:6"}],"name":"__AccessControlEnumerable_init","nameLocation":"760:30:6","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"790:2:6"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"819:0:6"},"scope":540,"src":"751:75:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"910:7:6","statements":[]},"id":429,"implemented":true,"kind":"function","modifiers":[{"id":426,"kind":"modifierInvocation","modifierName":{"id":425,"name":"onlyInitializing","nameLocations":["893:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"893:16:6"},"nodeType":"ModifierInvocation","src":"893:16:6"}],"name":"__AccessControlEnumerable_init_unchained","nameLocation":"841:40:6","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"881:2:6"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"910:0:6"},"scope":540,"src":"832:85:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[617],"body":{"id":450,"nodeType":"Block","src":"1074:132:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":438,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1091:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":440,"name":"IAccessControlEnumerableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"1111:35:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$902_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerableUpgradeable_$902_$","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}],"id":439,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1106:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1106:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerableUpgradeable_$902","typeString":"type(contract IAccessControlEnumerableUpgradeable)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1148:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1106:53:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1091:68:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":446,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1187:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":444,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1163:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$540_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1169:17:6","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":617,"src":"1163:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1091:108:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":437,"id":449,"nodeType":"Return","src":"1084:115:6"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"922:56:6","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"992:17:6","nodeType":"FunctionDefinition","overrides":{"id":434,"nodeType":"OverrideSpecifier","overrides":[],"src":"1050:8:6"},"parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"interfaceId","nameLocation":"1017:11:6","nodeType":"VariableDeclaration","scope":451,"src":"1010:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":431,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1010:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1009:20:6"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"1068:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":435,"name":"bool","nodeType":"ElementaryTypeName","src":"1068:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1067:6:6"},"scope":540,"src":"983:223:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[893],"body":{"id":469,"nodeType":"Block","src":"1890:52:6","statements":[{"expression":{"arguments":[{"id":466,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"1929:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":462,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"1907:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3721_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":464,"indexExpression":{"id":463,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"1920:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1907:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1926:2:6","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"1907:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3721_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$3721_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":461,"id":468,"nodeType":"Return","src":"1900:35:6"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"1212:574:6","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":470,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1800:13:6","nodeType":"FunctionDefinition","overrides":{"id":458,"nodeType":"OverrideSpecifier","overrides":[],"src":"1863:8:6"},"parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"role","nameLocation":"1822:4:6","nodeType":"VariableDeclaration","scope":470,"src":"1814:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1814:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"index","nameLocation":"1836:5:6","nodeType":"VariableDeclaration","scope":470,"src":"1828:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1828:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1813:29:6"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":470,"src":"1881:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1880:9:6"},"scope":540,"src":"1791:151:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[901],"body":{"id":485,"nodeType":"Block","src":"2199:51:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":479,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2216:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3721_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":481,"indexExpression":{"id":480,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2229:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2216:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2235:6:6","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":3817,"src":"2216:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$3721_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$3721_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":478,"id":484,"nodeType":"Return","src":"2209:34:6"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"1948:157:6","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":486,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"2119:18:6","nodeType":"FunctionDefinition","overrides":{"id":475,"nodeType":"OverrideSpecifier","overrides":[],"src":"2172:8:6"},"parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"role","nameLocation":"2146:4:6","nodeType":"VariableDeclaration","scope":486,"src":"2138:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2138:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2137:14:6"},"returnParameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":486,"src":"2190:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2189:9:6"},"scope":540,"src":"2110:140:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[840],"body":{"id":509,"nodeType":"Block","src":"2415:89:6","statements":[{"expression":{"arguments":[{"id":498,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2442:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2448:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":495,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2425:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$540_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2431:10:6","memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":840,"src":"2425:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2425:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"2425:31:6"},{"expression":{"arguments":[{"id":506,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2489:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":502,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2466:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3721_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":504,"indexExpression":{"id":503,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2479:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2466:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2485:3:6","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3748,"src":"2466:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3721_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3721_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2466:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"nodeType":"ExpressionStatement","src":"2466:31:6"}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"2256:77:6","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"2347:10:6","nodeType":"FunctionDefinition","overrides":{"id":493,"nodeType":"OverrideSpecifier","overrides":[],"src":"2406:8:6"},"parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"role","nameLocation":"2366:4:6","nodeType":"VariableDeclaration","scope":510,"src":"2358:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2358:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"account","nameLocation":"2380:7:6","nodeType":"VariableDeclaration","scope":510,"src":"2372:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"2372:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2357:31:6"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[],"src":"2415:0:6"},"scope":540,"src":"2338:166:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[871],"body":{"id":533,"nodeType":"Block","src":"2671:93:6","statements":[{"expression":{"arguments":[{"id":522,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2699:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":523,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"2705:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":519,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2681:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerableUpgradeable_$540_$","typeString":"type(contract super AccessControlEnumerableUpgradeable)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2687:11:6","memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":871,"src":"2681:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2681:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"2681:32:6"},{"expression":{"arguments":[{"id":530,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"2749:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":526,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2723:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$3721_storage_$","typeString":"mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet storage ref)"}},"id":528,"indexExpression":{"id":527,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2736:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2723:18:6","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2742:6:6","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3775,"src":"2723:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$3721_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$3721_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":532,"nodeType":"ExpressionStatement","src":"2723:34:6"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"2510:78:6","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":534,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2602:11:6","nodeType":"FunctionDefinition","overrides":{"id":517,"nodeType":"OverrideSpecifier","overrides":[],"src":"2662:8:6"},"parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"role","nameLocation":"2622:4:6","nodeType":"VariableDeclaration","scope":534,"src":"2614:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2614:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"account","nameLocation":"2636:7:6","nodeType":"VariableDeclaration","scope":534,"src":"2628:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"2628:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2613:31:6"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"2671:0:6"},"scope":540,"src":"2593:171:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"2770:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":539,"mutability":"mutable","name":"__gap","nameLocation":"3049:5:6","nodeType":"VariableDeclaration","scope":540,"src":"3029:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"3029:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":538,"length":{"hexValue":"3439","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:2:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3029:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":541,"src":"452:2605:6","usedErrors":[]}],"src":"118:2940:6"},"id":6},"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[877],"ContextUpgradeable":[2028],"ERC165Upgradeable":[2412],"IAccessControlUpgradeable":[975],"IERC165Upgradeable":[2424],"Initializable":[1510],"MathUpgradeable":[3290],"SignedMathUpgradeable":[3395],"StringsUpgradeable":[2367]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":542,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:7"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":878,"sourceUnit":976,"src":"133:41:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":878,"sourceUnit":2029,"src":"175:41:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol","file":"../utils/StringsUpgradeable.sol","id":545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":878,"sourceUnit":2368,"src":"217:41:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":878,"sourceUnit":2413,"src":"259:54:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":878,"sourceUnit":1511,"src":"314:63:7","symbolAliases":[{"foreign":{"id":547,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"322:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":550,"name":"Initializable","nameLocations":["2086:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1510,"src":"2086:13:7"},"id":551,"nodeType":"InheritanceSpecifier","src":"2086:13:7"},{"baseName":{"id":552,"name":"ContextUpgradeable","nameLocations":["2101:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":2028,"src":"2101:18:7"},"id":553,"nodeType":"InheritanceSpecifier","src":"2101:18:7"},{"baseName":{"id":554,"name":"IAccessControlUpgradeable","nameLocations":["2121:25:7"],"nodeType":"IdentifierPath","referencedDeclaration":975,"src":"2121:25:7"},"id":555,"nodeType":"InheritanceSpecifier","src":"2121:25:7"},{"baseName":{"id":556,"name":"ERC165Upgradeable","nameLocations":["2148:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2412,"src":"2148:17:7"},"id":557,"nodeType":"InheritanceSpecifier","src":"2148:17:7"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"379:1660:7","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":877,"linearizedBaseContracts":[877,2412,2424,975,2028,1510],"name":"AccessControlUpgradeable","nameLocation":"2058:24:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":564,"members":[{"constant":false,"id":561,"mutability":"mutable","name":"members","nameLocation":"2223:7:7","nodeType":"VariableDeclaration","scope":564,"src":"2198:32:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":560,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":558,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2198:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":559,"name":"bool","nodeType":"ElementaryTypeName","src":"2217:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"adminRole","nameLocation":"2248:9:7","nodeType":"VariableDeclaration","scope":564,"src":"2240:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2179:8:7","nodeType":"StructDefinition","scope":877,"src":"2172:92:7","visibility":"public"},{"constant":false,"id":569,"mutability":"mutable","name":"_roles","nameLocation":"2307:6:7","nodeType":"VariableDeclaration","scope":877,"src":"2270:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$564_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":568,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2278:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2270:28:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$564_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":567,"nodeType":"UserDefinedTypeName","pathNode":{"id":566,"name":"RoleData","nameLocations":["2289:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":564,"src":"2289:8:7"},"referencedDeclaration":564,"src":"2289:8:7","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$564_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":572,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2344:18:7","nodeType":"VariableDeclaration","scope":877,"src":"2320:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2320:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2365:4:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":582,"nodeType":"Block","src":"2788:44:7","statements":[{"expression":{"arguments":[{"id":578,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2809:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":577,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[649,688],"referencedDeclaration":649,"src":"2798:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"ExpressionStatement","src":"2798:16:7"},{"id":581,"nodeType":"PlaceholderStatement","src":"2824:1:7"}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"2376:375:7","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":583,"name":"onlyRole","nameLocation":"2765:8:7","nodeType":"ModifierDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"role","nameLocation":"2782:4:7","nodeType":"VariableDeclaration","scope":583,"src":"2774:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2774:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2773:14:7"},"src":"2756:76:7","virtual":false,"visibility":"internal"},{"body":{"id":588,"nodeType":"Block","src":"2896:7:7","statements":[]},"id":589,"implemented":true,"kind":"function","modifiers":[{"id":586,"kind":"modifierInvocation","modifierName":{"id":585,"name":"onlyInitializing","nameLocations":["2879:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"2879:16:7"},"nodeType":"ModifierInvocation","src":"2879:16:7"}],"name":"__AccessControl_init","nameLocation":"2847:20:7","nodeType":"FunctionDefinition","parameters":{"id":584,"nodeType":"ParameterList","parameters":[],"src":"2867:2:7"},"returnParameters":{"id":587,"nodeType":"ParameterList","parameters":[],"src":"2896:0:7"},"scope":877,"src":"2838:65:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"2977:7:7","statements":[]},"id":595,"implemented":true,"kind":"function","modifiers":[{"id":592,"kind":"modifierInvocation","modifierName":{"id":591,"name":"onlyInitializing","nameLocations":["2960:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"2960:16:7"},"nodeType":"ModifierInvocation","src":"2960:16:7"}],"name":"__AccessControl_init_unchained","nameLocation":"2918:30:7","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[],"src":"2948:2:7"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"2977:0:7"},"scope":877,"src":"2909:75:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2406],"body":{"id":616,"nodeType":"Block","src":"3141:122:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3158:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":606,"name":"IAccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"3178:25:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$975_$","typeString":"type(contract IAccessControlUpgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlUpgradeable_$975_$","typeString":"type(contract IAccessControlUpgradeable)"}],"id":605,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3173:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3173:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$975","typeString":"type(contract IAccessControlUpgradeable)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3205:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"3173:43:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3158:58:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":612,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3244:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":610,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3220:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$877_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3226:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"3220:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3220:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3158:98:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":603,"id":615,"nodeType":"Return","src":"3151:105:7"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"2989:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3059:17:7","nodeType":"FunctionDefinition","overrides":{"id":600,"nodeType":"OverrideSpecifier","overrides":[],"src":"3117:8:7"},"parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"interfaceId","nameLocation":"3084:11:7","nodeType":"VariableDeclaration","scope":617,"src":"3077:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":597,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3077:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3076:20:7"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"3135:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":601,"name":"bool","nodeType":"ElementaryTypeName","src":"3135:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3134:6:7"},"scope":877,"src":"3050:213:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[942],"body":{"id":635,"nodeType":"Block","src":"3442:53:7","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":628,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3459:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$564_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":630,"indexExpression":{"id":629,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"3466:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3459:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$564_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3472:7:7","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":561,"src":"3459:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":633,"indexExpression":{"id":632,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"3480:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3459:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":627,"id":634,"nodeType":"Return","src":"3452:36:7"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"3269:76:7","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":636,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3359:7:7","nodeType":"FunctionDefinition","overrides":{"id":624,"nodeType":"OverrideSpecifier","overrides":[],"src":"3418:8:7"},"parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"role","nameLocation":"3375:4:7","nodeType":"VariableDeclaration","scope":636,"src":"3367:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3367:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"account","nameLocation":"3389:7:7","nodeType":"VariableDeclaration","scope":636,"src":"3381:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3366:31:7"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":636,"src":"3436:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":625,"name":"bool","nodeType":"ElementaryTypeName","src":"3436:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3435:6:7"},"scope":877,"src":"3350:145:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":648,"nodeType":"Block","src":"3845:47:7","statements":[{"expression":{"arguments":[{"id":643,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3866:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":644,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"3872:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3872:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":642,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[649,688],"referencedDeclaration":688,"src":"3855:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3855:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"3855:30:7"}]},"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"3501:283:7","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":649,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3798:10:7","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"role","nameLocation":"3817:4:7","nodeType":"VariableDeclaration","scope":649,"src":"3809:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3809:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3808:14:7"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"3845:0:7"},"scope":877,"src":"3789:103:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":687,"nodeType":"Block","src":"4246:428:7","statements":[{"condition":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4260:23:7","subExpression":{"arguments":[{"id":658,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4269:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":659,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4275:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":657,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4261:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4261:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"4256:412:7","trueBody":{"id":685,"nodeType":"Block","src":"4285:383:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4393:25:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":670,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4475:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":668,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4444:18:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$2367_$","typeString":"type(library StringsUpgradeable)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4463:11:7","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2341,"src":"4444:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4444:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4509:19:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":677,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4593:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4585:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"4585:7:7","typeDescriptions":{}}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4600:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":673,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4554:18:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$2367_$","typeString":"type(library StringsUpgradeable)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4573:11:7","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2321,"src":"4554:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4554:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":665,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4351:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4355:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"4351:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:274:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4323:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":663,"name":"string","nodeType":"ElementaryTypeName","src":"4323:6:7","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4323:320:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":662,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4299:6:7","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4299:358:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"ExpressionStatement","src":"4299:358:7"}]}}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"3898:270:7","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":688,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4182:10:7","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"role","nameLocation":"4201:4:7","nodeType":"VariableDeclaration","scope":688,"src":"4193:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"account","nameLocation":"4215:7:7","nodeType":"VariableDeclaration","scope":688,"src":"4207:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"4207:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4192:31:7"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"4246:0:7"},"scope":877,"src":"4173:501:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[950],"body":{"id":702,"nodeType":"Block","src":"4938:46:7","statements":[{"expression":{"expression":{"baseExpression":{"id":697,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"4955:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$564_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":699,"indexExpression":{"id":698,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4962:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4955:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$564_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4968:9:7","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":563,"src":"4955:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":696,"id":701,"nodeType":"Return","src":"4948:29:7"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"4680:170:7","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":703,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4864:12:7","nodeType":"FunctionDefinition","overrides":{"id":693,"nodeType":"OverrideSpecifier","overrides":[],"src":"4911:8:7"},"parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"role","nameLocation":"4885:4:7","nodeType":"VariableDeclaration","scope":703,"src":"4877:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4877:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4876:14:7"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":703,"src":"4929:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4929:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4928:9:7"},"scope":877,"src":"4855:129:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[958],"body":{"id":722,"nodeType":"Block","src":"5383:42:7","statements":[{"expression":{"arguments":[{"id":718,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5404:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":719,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5410:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":717,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5393:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5393:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":721,"nodeType":"ExpressionStatement","src":"5393:25:7"}]},"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"4990:285:7","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":723,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":713,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5376:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":712,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5363:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5363:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":715,"kind":"modifierInvocation","modifierName":{"id":711,"name":"onlyRole","nameLocations":["5354:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":583,"src":"5354:8:7"},"nodeType":"ModifierInvocation","src":"5354:28:7"}],"name":"grantRole","nameLocation":"5289:9:7","nodeType":"FunctionDefinition","overrides":{"id":710,"nodeType":"OverrideSpecifier","overrides":[],"src":"5345:8:7"},"parameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"role","nameLocation":"5307:4:7","nodeType":"VariableDeclaration","scope":723,"src":"5299:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5299:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"account","nameLocation":"5321:7:7","nodeType":"VariableDeclaration","scope":723,"src":"5313:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"5313:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5298:31:7"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"5383:0:7"},"scope":877,"src":"5280:145:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[966],"body":{"id":742,"nodeType":"Block","src":"5809:43:7","statements":[{"expression":{"arguments":[{"id":738,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"5831:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":739,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"5837:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":737,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"5819:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5819:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"ExpressionStatement","src":"5819:26:7"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"5431:269:7","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":743,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":733,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"5802:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":732,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5789:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":735,"kind":"modifierInvocation","modifierName":{"id":731,"name":"onlyRole","nameLocations":["5780:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":583,"src":"5780:8:7"},"nodeType":"ModifierInvocation","src":"5780:28:7"}],"name":"revokeRole","nameLocation":"5714:10:7","nodeType":"FunctionDefinition","overrides":{"id":730,"nodeType":"OverrideSpecifier","overrides":[],"src":"5771:8:7"},"parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"role","nameLocation":"5733:4:7","nodeType":"VariableDeclaration","scope":743,"src":"5725:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5725:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"account","nameLocation":"5747:7:7","nodeType":"VariableDeclaration","scope":743,"src":"5739:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"5739:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5724:31:7"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"5809:0:7"},"scope":877,"src":"5705:147:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[974],"body":{"id":765,"nodeType":"Block","src":"6466:137:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":753,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"6484:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":754,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"6495:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6495:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6484:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6509:49:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:83:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"6476:83:7"},{"expression":{"arguments":[{"id":761,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6582:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":762,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"6588:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6570:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6570:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"ExpressionStatement","src":"6570:26:7"}]},"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"5858:526:7","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":766,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6398:12:7","nodeType":"FunctionDefinition","overrides":{"id":750,"nodeType":"OverrideSpecifier","overrides":[],"src":"6457:8:7"},"parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"role","nameLocation":"6419:4:7","nodeType":"VariableDeclaration","scope":766,"src":"6411:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6411:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"account","nameLocation":"6433:7:7","nodeType":"VariableDeclaration","scope":766,"src":"6425:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"6425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6410:31:7"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"6466:0:7"},"scope":877,"src":"6389:214:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":779,"nodeType":"Block","src":"7356:42:7","statements":[{"expression":{"arguments":[{"id":775,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7377:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":776,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7383:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":774,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7366:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7366:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"7366:25:7"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"6609:674:7","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":780,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"7297:10:7","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"role","nameLocation":"7316:4:7","nodeType":"VariableDeclaration","scope":780,"src":"7308:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7308:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"account","nameLocation":"7330:7:7","nodeType":"VariableDeclaration","scope":780,"src":"7322:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"7322:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7307:31:7"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"7356:0:7"},"scope":877,"src":"7288:110:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"7596:174:7","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7614:17:7","nodeType":"VariableDeclaration","scope":807,"src":"7606:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7606:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":793,"initialValue":{"arguments":[{"id":791,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7647:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":790,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"7634:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7606:46:7"},{"expression":{"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":794,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"7662:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$564_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":796,"indexExpression":{"id":795,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7669:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7662:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$564_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7675:9:7","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":563,"src":"7662:22:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":798,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7687:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7662:34:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":800,"nodeType":"ExpressionStatement","src":"7662:34:7"},{"eventCall":{"arguments":[{"id":802,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7728:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":803,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7734:17:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":804,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"7753:9:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":801,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"7711:16:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7711:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"EmitStatement","src":"7706:57:7"}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"7404:114:7","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7532:13:7","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"role","nameLocation":"7554:4:7","nodeType":"VariableDeclaration","scope":808,"src":"7546:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7546:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"adminRole","nameLocation":"7568:9:7","nodeType":"VariableDeclaration","scope":808,"src":"7560:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7560:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7545:33:7"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"7596:0:7"},"scope":877,"src":"7523:247:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":839,"nodeType":"Block","src":"8006:165:7","statements":[{"condition":{"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8020:23:7","subExpression":{"arguments":[{"id":817,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8029:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":818,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8035:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":816,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"8021:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"8016:149:7","trueBody":{"id":837,"nodeType":"Block","src":"8045:120:7","statements":[{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":821,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"8059:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$564_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":823,"indexExpression":{"id":822,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8066:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8059:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$564_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8072:7:7","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":561,"src":"8059:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":826,"indexExpression":{"id":825,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8080:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8059:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8091:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8059:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":829,"nodeType":"ExpressionStatement","src":"8059:36:7"},{"eventCall":{"arguments":[{"id":831,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"8126:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":832,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"8132:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":833,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"8141:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8141:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":830,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"8114:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8114:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"EmitStatement","src":"8109:45:7"}]}}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"7776:157:7","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":840,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7947:10:7","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"role","nameLocation":"7966:4:7","nodeType":"VariableDeclaration","scope":840,"src":"7958:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7958:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"account","nameLocation":"7980:7:7","nodeType":"VariableDeclaration","scope":840,"src":"7972:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"7972:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7957:31:7"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"8006:0:7"},"scope":877,"src":"7938:233:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"8411:165:7","statements":[{"condition":{"arguments":[{"id":849,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"8433:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":850,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"8439:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":848,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"8425:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8425:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":869,"nodeType":"IfStatement","src":"8421:149:7","trueBody":{"id":868,"nodeType":"Block","src":"8449:121:7","statements":[{"expression":{"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":852,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"8463:6:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$564_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":854,"indexExpression":{"id":853,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"8470:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8463:12:7","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$564_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8476:7:7","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":561,"src":"8463:20:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":857,"indexExpression":{"id":856,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"8484:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8463:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8495:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8463:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":860,"nodeType":"ExpressionStatement","src":"8463:37:7"},{"eventCall":{"arguments":[{"id":862,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"8531:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":863,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"8537:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":864,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"8546:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8546:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":861,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"8519:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8519:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"EmitStatement","src":"8514:45:7"}]}}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"8177:160:7","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8351:11:7","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"role","nameLocation":"8371:4:7","nodeType":"VariableDeclaration","scope":871,"src":"8363:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8363:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"account","nameLocation":"8385:7:7","nodeType":"VariableDeclaration","scope":871,"src":"8377:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"8377:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8362:31:7"},"returnParameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"8411:0:7"},"scope":877,"src":"8342:234:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"8582:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":876,"mutability":"mutable","name":"__gap","nameLocation":"8861:5:7","nodeType":"VariableDeclaration","scope":877,"src":"8841:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"8841:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":875,"length":{"hexValue":"3439","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"8841:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":878,"src":"2040:6829:7","usedErrors":[]}],"src":"108:8762:7"},"id":7},"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol","exportedSymbols":{"IAccessControlEnumerableUpgradeable":[902],"IAccessControlUpgradeable":[975]},"id":903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:8"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol","file":"./IAccessControlUpgradeable.sol","id":880,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":903,"sourceUnit":976,"src":"129:41:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":882,"name":"IAccessControlUpgradeable","nameLocations":["321:25:8"],"nodeType":"IdentifierPath","referencedDeclaration":975,"src":"321:25:8"},"id":883,"nodeType":"InheritanceSpecifier","src":"321:25:8"}],"canonicalName":"IAccessControlEnumerableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"172:99:8","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":902,"linearizedBaseContracts":[902,975],"name":"IAccessControlEnumerableUpgradeable","nameLocation":"282:35:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"353:574:8","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":893,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"941:13:8","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"role","nameLocation":"963:4:8","nodeType":"VariableDeclaration","scope":893,"src":"955:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"955:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"index","nameLocation":"977:5:8","nodeType":"VariableDeclaration","scope":893,"src":"969:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"954:29:8"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":893,"src":"1007:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1006:9:8"},"scope":902,"src":"932:84:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"1022:157:8","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":901,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1193:18:8","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"role","nameLocation":"1220:4:8","nodeType":"VariableDeclaration","scope":901,"src":"1212:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1212:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1211:14:8"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"1249:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1248:9:8"},"scope":902,"src":"1184:74:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":903,"src":"272:988:8","usedErrors":[]}],"src":"104:1157:8"},"id":8},"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol","exportedSymbols":{"IAccessControlUpgradeable":[975]},"id":976,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":904,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControlUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"119:89:9","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":975,"linearizedBaseContracts":[975],"name":"IAccessControlUpgradeable","nameLocation":"219:25:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"251:292:9","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":914,"name":"RoleAdminChanged","nameLocation":"554:16:9","nodeType":"EventDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"587:4:9","nodeType":"VariableDeclaration","scope":914,"src":"571:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"571:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":910,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"609:17:9","nodeType":"VariableDeclaration","scope":914,"src":"593:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":912,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"644:12:9","nodeType":"VariableDeclaration","scope":914,"src":"628:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"628:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"570:87:9"},"src":"548:110:9"},{"anonymous":false,"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"664:212:9","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":923,"name":"RoleGranted","nameLocation":"887:11:9","nodeType":"EventDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"915:4:9","nodeType":"VariableDeclaration","scope":923,"src":"899:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":919,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:9","nodeType":"VariableDeclaration","scope":923,"src":"921:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":921,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"962:6:9","nodeType":"VariableDeclaration","scope":923,"src":"946:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:71:9"},"src":"881:89:9"},{"anonymous":false,"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"976:275:9","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":932,"name":"RoleRevoked","nameLocation":"1262:11:9","nodeType":"EventDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1290:4:9","nodeType":"VariableDeclaration","scope":932,"src":"1274:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":928,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1312:7:9","nodeType":"VariableDeclaration","scope":932,"src":"1296:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":930,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1337:6:9","nodeType":"VariableDeclaration","scope":932,"src":"1321:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:71:9"},"src":"1256:89:9"},{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"1351:76:9","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":942,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1441:7:9","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"role","nameLocation":"1457:4:9","nodeType":"VariableDeclaration","scope":942,"src":"1449:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"account","nameLocation":"1471:7:9","nodeType":"VariableDeclaration","scope":942,"src":"1463:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1448:31:9"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":942,"src":"1503:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":939,"name":"bool","nodeType":"ElementaryTypeName","src":"1503:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1502:6:9"},"scope":975,"src":"1432:77:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"1515:184:9","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":950,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1713:12:9","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"role","nameLocation":"1734:4:9","nodeType":"VariableDeclaration","scope":950,"src":"1726:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1726:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1725:14:9"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":950,"src":"1763:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1763:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1762:9:9"},"scope":975,"src":"1704:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"1778:239:9","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":958,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2031:9:9","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"role","nameLocation":"2049:4:9","nodeType":"VariableDeclaration","scope":958,"src":"2041:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2041:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"account","nameLocation":"2063:7:9","nodeType":"VariableDeclaration","scope":958,"src":"2055:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"2055:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:31:9"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[],"src":"2080:0:9"},"scope":975,"src":"2022:59:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"2087:223:9","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2324:10:9","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"role","nameLocation":"2343:4:9","nodeType":"VariableDeclaration","scope":966,"src":"2335:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"account","nameLocation":"2357:7:9","nodeType":"VariableDeclaration","scope":966,"src":"2349:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:31:9"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[],"src":"2374:0:9"},"scope":975,"src":"2315:60:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"2381:480:9","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":974,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2875:12:9","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"role","nameLocation":"2896:4:9","nodeType":"VariableDeclaration","scope":974,"src":"2888:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2888:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"account","nameLocation":"2910:7:9","nodeType":"VariableDeclaration","scope":974,"src":"2902:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2887:31:9"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"2927:0:9"},"scope":975,"src":"2866:62:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":976,"src":"209:2721:9","usedErrors":[]}],"src":"94:2837:9"},"id":9},"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[996]},"id":997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":977,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"132:133:10","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":996,"linearizedBaseContracts":[996],"name":"IERC1967Upgradeable","nameLocation":"276:19:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"302:68:10","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":983,"name":"Upgraded","nameLocation":"381:8:10","nodeType":"EventDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:10","nodeType":"VariableDeclaration","scope":983,"src":"390:30:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:10"},"src":"375:47:10"},{"anonymous":false,"documentation":{"id":984,"nodeType":"StructuredDocumentation","src":"428:67:10","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":990,"name":"AdminChanged","nameLocation":"506:12:10","nodeType":"EventDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:10","nodeType":"VariableDeclaration","scope":990,"src":"519:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":988,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:10","nodeType":"VariableDeclaration","scope":990,"src":"542:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:10"},"src":"500:60:10"},{"anonymous":false,"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"566:59:10","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":995,"name":"BeaconUpgraded","nameLocation":"636:14:10","nodeType":"EventDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:10","nodeType":"VariableDeclaration","scope":995,"src":"651:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:10"},"src":"630:45:10"}],"scope":997,"src":"266:411:10","usedErrors":[]}],"src":"107:571:10"},"id":10},"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[1006]},"id":1007,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":998,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"138:203:11","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1006,"linearizedBaseContracts":[1006],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"387:438:11","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1005,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:11","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"852:2:11"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1005,"src":"878:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:11"},"scope":1006,"src":"830:57:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1007,"src":"342:547:11","usedErrors":[]}],"src":"113:777:11"},"id":11},"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1977],"ERC1967UpgradeUpgradeable":[1331],"IBeaconUpgradeable":[1341],"IERC1822ProxiableUpgradeable":[1006],"IERC1967Upgradeable":[996],"Initializable":[1510],"StorageSlotUpgradeable":[2138]},"id":1332,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1008,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:12"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":1009,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1332,"sourceUnit":1342,"src":"141:42:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":1010,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1332,"sourceUnit":997,"src":"184:50:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":1011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1332,"sourceUnit":1007,"src":"235:56:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":1012,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1332,"sourceUnit":1978,"src":"292:44:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":1013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1332,"sourceUnit":2139,"src":"337:48:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":1015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1332,"sourceUnit":1511,"src":"386:57:12","symbolAliases":[{"foreign":{"id":1014,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"394:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1017,"name":"Initializable","nameLocations":["677:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1510,"src":"677:13:12"},"id":1018,"nodeType":"InheritanceSpecifier","src":"677:13:12"},{"baseName":{"id":1019,"name":"IERC1967Upgradeable","nameLocations":["692:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":996,"src":"692:19:12"},"id":1020,"nodeType":"InheritanceSpecifier","src":"692:19:12"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"445:184:12","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":1331,"linearizedBaseContracts":[1331,996,1510],"name":"ERC1967UpgradeUpgradeable","nameLocation":"648:25:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1023,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"822:14:12","nodeType":"VariableDeclaration","scope":1331,"src":"797:108:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"797:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"839:66:12","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"912:214:12","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":1027,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1157:20:12","nodeType":"VariableDeclaration","scope":1331,"src":"1131:115:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1131:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1180:66:12","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":1032,"nodeType":"Block","src":"1312:7:12","statements":[]},"id":1033,"implemented":true,"kind":"function","modifiers":[{"id":1030,"kind":"modifierInvocation","modifierName":{"id":1029,"name":"onlyInitializing","nameLocations":["1295:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"1295:16:12"},"nodeType":"ModifierInvocation","src":"1295:16:12"}],"name":"__ERC1967Upgrade_init","nameLocation":"1262:21:12","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[],"src":"1283:2:12"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"1312:0:12"},"scope":1331,"src":"1253:66:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"1394:7:12","statements":[]},"id":1039,"implemented":true,"kind":"function","modifiers":[{"id":1036,"kind":"modifierInvocation","modifierName":{"id":1035,"name":"onlyInitializing","nameLocations":["1377:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"1377:16:12"},"nodeType":"ModifierInvocation","src":"1377:16:12"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"1334:31:12","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"1365:2:12"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"1394:0:12"},"scope":1331,"src":"1325:76:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"1540:89:12","statements":[{"expression":{"expression":{"arguments":[{"id":1047,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1595:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1045,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"1557:22:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2138_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1580:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2060,"src":"1557:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2034_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1557:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2034_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1617:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"1557:65:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1044,"id":1050,"nodeType":"Return","src":"1550:72:12"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"1406:67:12","text":" @dev Returns the current implementation address."},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1487:18:12","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"1505:2:12"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1052,"src":"1531:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"1531:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1530:9:12"},"scope":1331,"src":"1478:151:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"1783:218:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1061,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"1831:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1059,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"1801:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1977_$","typeString":"type(library AddressUpgradeable)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1820:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"1801:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1801:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1851:47:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":1058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1793:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1793:106:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1065,"nodeType":"ExpressionStatement","src":"1793:106:12"},{"expression":{"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1069,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"1947:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1066,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"1909:22:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2138_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1932:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2060,"src":"1909:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2034_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2034_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1969:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"1909:65:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1072,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"1977:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1909:85:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1074,"nodeType":"ExpressionStatement","src":"1909:85:12"}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"1635:80:12","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1729:18:12","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"newImplementation","nameLocation":"1756:17:12","nodeType":"VariableDeclaration","scope":1076,"src":"1748:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1747:27:12"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"1783:0:12"},"scope":1331,"src":"1720:281:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1090,"nodeType":"Block","src":"2163:96:12","statements":[{"expression":{"arguments":[{"id":1083,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2192:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1082,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"2173:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2173:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"2173:37:12"},{"eventCall":{"arguments":[{"id":1087,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2234:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1086,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"2225:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1089,"nodeType":"EmitStatement","src":"2220:32:12"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"2007:95:12","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2116:10:12","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"newImplementation","nameLocation":"2135:17:12","nodeType":"VariableDeclaration","scope":1091,"src":"2127:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"2127:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2126:27:12"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"2163:0:12"},"scope":1331,"src":"2107:152:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"2491:178:12","statements":[{"expression":{"arguments":[{"id":1102,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"2512:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1101,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"2501:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"ExpressionStatement","src":"2501:29:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1105,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2544:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2549:6:12","memberName":"length","nodeType":"MemberAccess","src":"2544:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2558:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2544:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1109,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2563:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2544:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1119,"nodeType":"IfStatement","src":"2540:123:12","trueBody":{"id":1118,"nodeType":"Block","src":"2574:89:12","statements":[{"expression":{"arguments":[{"id":1114,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"2628:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"2647:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1111,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2588:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1977_$","typeString":"type(library AddressUpgradeable)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2607:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1864,"src":"2588:39:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2588:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1117,"nodeType":"ExpressionStatement","src":"2588:64:12"}]}}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"2265:123:12","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2402:17:12","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"newImplementation","nameLocation":"2428:17:12","nodeType":"VariableDeclaration","scope":1121,"src":"2420:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"2420:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"data","nameLocation":"2460:4:12","nodeType":"VariableDeclaration","scope":1121,"src":"2447:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1095,"name":"bytes","nodeType":"ElementaryTypeName","src":"2447:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"forceCall","nameLocation":"2471:9:12","nodeType":"VariableDeclaration","scope":1121,"src":"2466:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1097,"name":"bool","nodeType":"ElementaryTypeName","src":"2466:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2419:62:12"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"2491:0:12"},"scope":1331,"src":"2393:276:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1173,"nodeType":"Block","src":"2943:842:12","statements":[{"condition":{"expression":{"arguments":[{"id":1133,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"3295:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1131,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3257:22:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2138_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3280:14:12","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":2071,"src":"3257:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2037_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2037_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":1135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3311:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2036,"src":"3257:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1171,"nodeType":"Block","src":"3386:393:12","statements":[{"clauses":[{"block":{"id":1156,"nodeType":"Block","src":"3491:115:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3517:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1151,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"3525:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3547:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":1149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3509:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3509:82:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"3509:82:12"}]},"errorName":"","id":1157,"nodeType":"TryCatchClause","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"slot","nameLocation":"3485:4:12","nodeType":"VariableDeclaration","scope":1157,"src":"3477:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3477:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3476:14:12"},"src":"3468:138:12"},{"block":{"id":1162,"nodeType":"Block","src":"3613:89:12","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3638:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":1158,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3631:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1161,"nodeType":"ExpressionStatement","src":"3631:56:12"}]},"errorName":"","id":1163,"nodeType":"TryCatchClause","src":"3607:95:12"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1142,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3433:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1141,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"3404:28:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$1006_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$1006","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3452:13:12","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1005,"src":"3404:61:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:63:12","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1164,"nodeType":"TryStatement","src":"3400:302:12"},{"expression":{"arguments":[{"id":1166,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3733:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1167,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3752:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1168,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3758:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1165,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"3715:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3715:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1170,"nodeType":"ExpressionStatement","src":"3715:53:12"}]},"id":1172,"nodeType":"IfStatement","src":"3253:526:12","trueBody":{"id":1140,"nodeType":"Block","src":"3318:62:12","statements":[{"expression":{"arguments":[{"id":1137,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3351:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1136,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"3332:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3332:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1139,"nodeType":"ExpressionStatement","src":"3332:37:12"}]}}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"2675:161:12","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2850:21:12","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"newImplementation","nameLocation":"2880:17:12","nodeType":"VariableDeclaration","scope":1174,"src":"2872:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"2872:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"data","nameLocation":"2912:4:12","nodeType":"VariableDeclaration","scope":1174,"src":"2899:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"2899:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"forceCall","nameLocation":"2923:9:12","nodeType":"VariableDeclaration","scope":1174,"src":"2918:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1127,"name":"bool","nodeType":"ElementaryTypeName","src":"2918:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2871:62:12"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"2943:0:12"},"scope":1331,"src":"2841:944:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"3791:189:12","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":1178,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"4011:11:12","nodeType":"VariableDeclaration","scope":1331,"src":"3985:106:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3985:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4025:66:12","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1190,"nodeType":"Block","src":"4206:80:12","statements":[{"expression":{"expression":{"arguments":[{"id":1186,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4261:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1184,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"4223:22:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2138_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4246:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2060,"src":"4223:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2034_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2034_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4274:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"4223:56:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1183,"id":1189,"nodeType":"Return","src":"4216:63:12"}]},"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"4098:50:12","text":" @dev Returns the current admin."},"id":1191,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4162:9:12","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"4171:2:12"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1191,"src":"4197:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"4197:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4196:9:12"},"scope":1331,"src":"4153:133:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1216,"nodeType":"Block","src":"4413:167:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4431:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4451:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4443:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"4443:7:12","typeDescriptions":{}}},"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4443:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4431:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4455:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":1197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4423:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4423:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1206,"nodeType":"ExpressionStatement","src":"4423:73:12"},{"expression":{"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1210,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4544:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1207,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"4506:22:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2138_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4529:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2060,"src":"4506:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2034_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4506:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2034_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4557:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"4506:56:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1213,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4565:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4506:67:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1215,"nodeType":"ExpressionStatement","src":"4506:67:12"}]},"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"4292:71:12","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4377:9:12","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"newAdmin","nameLocation":"4395:8:12","nodeType":"VariableDeclaration","scope":1217,"src":"4387:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"4387:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4386:18:12"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"4413:0:12"},"scope":1331,"src":"4368:212:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1233,"nodeType":"Block","src":"4740:86:12","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1224,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4768:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4768:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"4781:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1223,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"4755:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4755:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"EmitStatement","src":"4750:40:12"},{"expression":{"arguments":[{"id":1230,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"4810:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1229,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"4800:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4800:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"4800:19:12"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"4586:100:12","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4700:12:12","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"newAdmin","nameLocation":"4721:8:12","nodeType":"VariableDeclaration","scope":1234,"src":"4713:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"4713:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4712:18:12"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"4740:0:12"},"scope":1331,"src":"4691:135:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"4832:232:12","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":1238,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5095:12:12","nodeType":"VariableDeclaration","scope":1331,"src":"5069:107:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5069:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5110:66:12","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"5293:81:12","statements":[{"expression":{"expression":{"arguments":[{"id":1246,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"5348:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1244,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"5310:22:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2138_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5333:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2060,"src":"5310:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2034_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5310:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2034_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5362:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"5310:57:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1243,"id":1249,"nodeType":"Return","src":"5303:64:12"}]},"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"5183:51:12","text":" @dev Returns the current beacon."},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5248:10:12","nodeType":"FunctionDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[],"src":"5258:2:12"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1251,"src":"5284:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5283:9:12"},"scope":1331,"src":"5239:135:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1286,"nodeType":"Block","src":"5503:368:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1260,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"5551:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1258,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"5521:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1977_$","typeString":"type(library AddressUpgradeable)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5540:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"5521:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5521:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5563:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":1257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5513:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5513:90:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"5513:90:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1269,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"5683:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1268,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5664:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$1341_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5664:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$1341","typeString":"contract IBeaconUpgradeable"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5694:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1340,"src":"5664:44:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5664:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1266,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"5634:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1977_$","typeString":"type(library AddressUpgradeable)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5653:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"5634:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5634:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5725:50:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":1265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5613:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:172:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"ExpressionStatement","src":"5613:172:12"},{"expression":{"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1280,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"5833:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1277,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"5795:22:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$2138_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5818:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2060,"src":"5795:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2034_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5795:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2034_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":1282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5847:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"5795:57:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1283,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"5855:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5795:69:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1285,"nodeType":"ExpressionStatement","src":"5795:69:12"}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"5380:71:12","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1287,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5465:10:12","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"newBeacon","nameLocation":"5484:9:12","nodeType":"VariableDeclaration","scope":1287,"src":"5476:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"5476:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5475:19:12"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[],"src":"5503:0:12"},"scope":1331,"src":"5456:415:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1324,"nodeType":"Block","src":"6270:239:12","statements":[{"expression":{"arguments":[{"id":1298,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6291:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1297,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"6280:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6280:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1300,"nodeType":"ExpressionStatement","src":"6280:21:12"},{"eventCall":{"arguments":[{"id":1302,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6331:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1301,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"6316:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6316:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"EmitStatement","src":"6311:30:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1305,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6355:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:12","memberName":"length","nodeType":"MemberAccess","src":"6355:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6355:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1309,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6374:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6355:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1323,"nodeType":"IfStatement","src":"6351:152:12","trueBody":{"id":1322,"nodeType":"Block","src":"6385:118:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1315,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6458:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1314,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"6439:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$1341_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6439:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$1341","typeString":"contract IBeaconUpgradeable"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6469:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1340,"src":"6439:44:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6439:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1319,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6487:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1311,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"6399:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1977_$","typeString":"type(library AddressUpgradeable)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6418:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1864,"src":"6399:39:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6399:93:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1321,"nodeType":"ExpressionStatement","src":"6399:93:12"}]}}]},"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"5877:292:12","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6183:23:12","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"newBeacon","nameLocation":"6215:9:12","nodeType":"VariableDeclaration","scope":1325,"src":"6207:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"data","nameLocation":"6239:4:12","nodeType":"VariableDeclaration","scope":1325,"src":"6226:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1291,"name":"bytes","nodeType":"ElementaryTypeName","src":"6226:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"forceCall","nameLocation":"6250:9:12","nodeType":"VariableDeclaration","scope":1325,"src":"6245:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1293,"name":"bool","nodeType":"ElementaryTypeName","src":"6245:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6206:54:12"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"6270:0:12"},"scope":1331,"src":"6174:335:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"6515:254:12","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1330,"mutability":"mutable","name":"__gap","nameLocation":"6794:5:12","nodeType":"VariableDeclaration","scope":1331,"src":"6774:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"6774:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1329,"length":{"hexValue":"3530","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6782:2:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6774:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1332,"src":"630:6172:12","usedErrors":[]}],"src":"116:6687:12"},"id":12},"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[1341]},"id":1342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1333,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"118:79:13","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1341,"linearizedBaseContracts":[1341],"name":"IBeaconUpgradeable","nameLocation":"208:18:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"233:162:13","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1340,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:13","nodeType":"FunctionDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"423:2:13"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1340,"src":"449:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:13"},"scope":1341,"src":"400:58:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1342,"src":"198:262:13","usedErrors":[]}],"src":"93:368:13"},"id":13},"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1977],"Initializable":[1510]},"id":1511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1343,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:14"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":1344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1511,"sourceUnit":1978,"src":"138:44:14","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"184:2209:14","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":1510,"linearizedBaseContracts":[1510],"name":"Initializable","nameLocation":"2412:13:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"2432:109:14","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":1348,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:14","nodeType":"VariableDeclaration","scope":1510,"src":"2546:26:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1347,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"2579:91:14","text":" @dev Indicates that the contract is in the process of being initialized."},"id":1351,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:14","nodeType":"VariableDeclaration","scope":1510,"src":"2675:26:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1350,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"2708:90:14","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":1356,"name":"Initialized","nameLocation":"2809:11:14","nodeType":"EventDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:14","nodeType":"VariableDeclaration","scope":1356,"src":"2821:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1353,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:14"},"src":"2803:33:14"},{"body":{"id":1411,"nodeType":"Block","src":"3269:483:14","statements":[{"assignments":[1360],"declarations":[{"constant":false,"id":1360,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:14","nodeType":"VariableDeclaration","scope":1411,"src":"3279:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1359,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1363,"initialValue":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:14","subExpression":{"id":1361,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3302:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3347:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"3365:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:14","subExpression":{"arguments":[{"arguments":[{"id":1375,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$1510","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$1510","typeString":"contract Initializable"}],"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:14","typeDescriptions":{}}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1371,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3388:18:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1977_$","typeString":"type(library AddressUpgradeable)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:14","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"3388:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"3436:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1387,"nodeType":"ExpressionStatement","src":"3325:201:14"},{"expression":{"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1388,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"3536:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1391,"nodeType":"ExpressionStatement","src":"3536:16:14"},{"condition":{"id":1392,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3566:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1398,"nodeType":"IfStatement","src":"3562:65:14","trueBody":{"id":1397,"nodeType":"Block","src":"3582:45:14","statements":[{"expression":{"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1393,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3596:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1396,"nodeType":"ExpressionStatement","src":"3596:20:14"}]}},{"id":1399,"nodeType":"PlaceholderStatement","src":"3636:1:14"},{"condition":{"id":1400,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"3651:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1410,"nodeType":"IfStatement","src":"3647:99:14","trueBody":{"id":1409,"nodeType":"Block","src":"3667:79:14","statements":[{"expression":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1401,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"3681:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"nodeType":"ExpressionStatement","src":"3681:21:14"},{"eventCall":{"arguments":[{"hexValue":"31","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"3721:11:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1408,"nodeType":"EmitStatement","src":"3716:19:14"}]}}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"2842:399:14","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":1412,"name":"initializer","nameLocation":"3255:11:14","nodeType":"ModifierDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[],"src":"3266:2:14"},"src":"3246:506:14","virtual":false,"visibility":"internal"},{"body":{"id":1444,"nodeType":"Block","src":"4863:255:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:14","subExpression":{"id":1418,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"4882:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1420,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"4899:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1421,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4914:7:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"ExpressionStatement","src":"4873:99:14"},{"expression":{"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1427,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"4982:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1428,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4997:7:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1430,"nodeType":"ExpressionStatement","src":"4982:22:14"},{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1431,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"5014:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1434,"nodeType":"ExpressionStatement","src":"5014:20:14"},{"id":1435,"nodeType":"PlaceholderStatement","src":"5044:1:14"},{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"5055:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1439,"nodeType":"ExpressionStatement","src":"5055:21:14"},{"eventCall":{"arguments":[{"id":1441,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5103:7:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1440,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"5091:11:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1443,"nodeType":"EmitStatement","src":"5086:25:14"}]},"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"3758:1062:14","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":1445,"name":"reinitializer","nameLocation":"4834:13:14","nodeType":"ModifierDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"version","nameLocation":"4854:7:14","nodeType":"VariableDeclaration","scope":1445,"src":"4848:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1414,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:14"},"src":"4825:293:14","virtual":false,"visibility":"internal"},{"body":{"id":1454,"nodeType":"Block","src":"5356:97:14","statements":[{"expression":{"arguments":[{"id":1449,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"5374:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":1448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"ExpressionStatement","src":"5366:69:14"},{"id":1453,"nodeType":"PlaceholderStatement","src":"5445:1:14"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"5124:199:14","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":1455,"name":"onlyInitializing","nameLocation":"5337:16:14","nodeType":"ModifierDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"5353:2:14"},"src":"5328:125:14","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"5988:231:14","statements":[{"expression":{"arguments":[{"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:14","subExpression":{"id":1460,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"6007:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":1459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"ExpressionStatement","src":"5998:66:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1465,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6078:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1467,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1466,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:14","memberName":"max","nodeType":"MemberAccess","src":"6094:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1489,"nodeType":"IfStatement","src":"6074:139:14","trueBody":{"id":1488,"nodeType":"Block","src":"6111:102:14","statements":[{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1472,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6125:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1474,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1473,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:14","memberName":"max","nodeType":"MemberAccess","src":"6140:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1479,"nodeType":"ExpressionStatement","src":"6125:30:14"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1482,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1481,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:14","memberName":"max","nodeType":"MemberAccess","src":"6186:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1480,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"6174:11:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1487,"nodeType":"EmitStatement","src":"6169:33:14"}]}}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"5459:475:14","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:14","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"5968:2:14"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"5988:0:14"},"scope":1510,"src":"5939:280:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1499,"nodeType":"Block","src":"6393:36:14","statements":[{"expression":{"id":1497,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6410:12:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1496,"id":1498,"nodeType":"Return","src":"6403:19:14"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"6225:99:14","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":1500,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:14","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[],"src":"6360:2:14"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1500,"src":"6386:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1494,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:14"},"scope":1510,"src":"6329:100:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1508,"nodeType":"Block","src":"6601:37:14","statements":[{"expression":{"id":1506,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"6618:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1505,"id":1507,"nodeType":"Return","src":"6611:20:14"}]},"documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"6435:105:14","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:14","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"6569:2:14"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1509,"src":"6595:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1503,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:14"},"scope":1510,"src":"6545:93:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1511,"src":"2394:4246:14","usedErrors":[]}],"src":"113:6528:14"},"id":14},"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1977],"ERC1967UpgradeUpgradeable":[1331],"IBeaconUpgradeable":[1341],"IERC1822ProxiableUpgradeable":[1006],"IERC1967Upgradeable":[996],"Initializable":[1510],"StorageSlotUpgradeable":[2138],"UUPSUpgradeable":[1647]},"id":1648,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1512,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:15"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":1513,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1648,"sourceUnit":1007,"src":"140:56:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":1514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1648,"sourceUnit":1332,"src":"197:50:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":1516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1648,"sourceUnit":1511,"src":"248:50:15","symbolAliases":[{"foreign":{"id":1515,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"256:13:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1518,"name":"Initializable","nameLocations":["986:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":1510,"src":"986:13:15"},"id":1519,"nodeType":"InheritanceSpecifier","src":"986:13:15"},{"baseName":{"id":1520,"name":"IERC1822ProxiableUpgradeable","nameLocations":["1001:28:15"],"nodeType":"IdentifierPath","referencedDeclaration":1006,"src":"1001:28:15"},"id":1521,"nodeType":"InheritanceSpecifier","src":"1001:28:15"},{"baseName":{"id":1522,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1031:25:15"],"nodeType":"IdentifierPath","referencedDeclaration":1331,"src":"1031:25:15"},"id":1523,"nodeType":"InheritanceSpecifier","src":"1031:25:15"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"300:648:15","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":1647,"linearizedBaseContracts":[1647,1331,996,1006,1510],"name":"UUPSUpgradeable","nameLocation":"967:15:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"1063:87:15","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":1530,"mutability":"immutable","name":"__self","nameLocation":"1181:6:15","nodeType":"VariableDeclaration","scope":1647,"src":"1155:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":1528,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1198:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1647","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1647","typeString":"contract UUPSUpgradeable"}],"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1190:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"1190:7:15","typeDescriptions":{}}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1190:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":1552,"nodeType":"Block","src":"1729:205:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1536,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1755:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1647","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1647","typeString":"contract UUPSUpgradeable"}],"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1747:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:15","typeDescriptions":{}}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1747:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1538,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1764:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1747:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1772:46:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":1533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1739:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1739:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"ExpressionStatement","src":"1739:80:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1544,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"1837:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1546,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1861:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1837:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1869:46:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":1543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1829:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1550,"nodeType":"ExpressionStatement","src":"1829:87:15"},{"id":1551,"nodeType":"PlaceholderStatement","src":"1926:1:15"}]},"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"1210:493:15","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":1553,"name":"onlyProxy","nameLocation":"1717:9:15","nodeType":"ModifierDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[],"src":"1726:2:15"},"src":"1708:226:15","virtual":false,"visibility":"internal"},{"body":{"id":1567,"nodeType":"Block","src":"2164:120:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1559,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2190:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1647","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1647","typeString":"contract UUPSUpgradeable"}],"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2182:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"2182:7:15","typeDescriptions":{}}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2182:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1561,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2199:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2182:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2207:58:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":1556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2174:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"2174:92:15"},{"id":1566,"nodeType":"PlaceholderStatement","src":"2276:1:15"}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"1940:195:15","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":1568,"name":"notDelegated","nameLocation":"2149:12:15","nodeType":"ModifierDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[],"src":"2161:2:15"},"src":"2140:144:15","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"2350:7:15","statements":[]},"id":1574,"implemented":true,"kind":"function","modifiers":[{"id":1571,"kind":"modifierInvocation","modifierName":{"id":1570,"name":"onlyInitializing","nameLocations":["2333:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"2333:16:15"},"nodeType":"ModifierInvocation","src":"2333:16:15"}],"name":"__UUPSUpgradeable_init","nameLocation":"2299:22:15","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[],"src":"2321:2:15"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[],"src":"2350:0:15"},"scope":1647,"src":"2290:67:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1579,"nodeType":"Block","src":"2433:7:15","statements":[]},"id":1580,"implemented":true,"kind":"function","modifiers":[{"id":1577,"kind":"modifierInvocation","modifierName":{"id":1576,"name":"onlyInitializing","nameLocations":["2416:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"2416:16:15"},"nodeType":"ModifierInvocation","src":"2416:16:15"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"2372:32:15","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"2404:2:15"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[],"src":"2433:0:15"},"scope":1647,"src":"2363:77:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1005],"body":{"id":1591,"nodeType":"Block","src":"3114:44:15","statements":[{"expression":{"id":1589,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"3131:20:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1588,"id":1590,"nodeType":"Return","src":"3124:27:15"}]},"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"2445:577:15","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":1592,"implemented":true,"kind":"function","modifiers":[{"id":1585,"kind":"modifierInvocation","modifierName":{"id":1584,"name":"notDelegated","nameLocations":["3083:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1568,"src":"3083:12:15"},"nodeType":"ModifierInvocation","src":"3083:12:15"}],"name":"proxiableUUID","nameLocation":"3036:13:15","nodeType":"FunctionDefinition","overrides":{"id":1583,"nodeType":"OverrideSpecifier","overrides":[],"src":"3074:8:15"},"parameters":{"id":1582,"nodeType":"ParameterList","parameters":[],"src":"3049:2:15"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1592,"src":"3105:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3105:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3104:9:15"},"scope":1647,"src":"3027:131:15","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1613,"nodeType":"Block","src":"3479:124:15","statements":[{"expression":{"arguments":[{"id":1601,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"3507:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1600,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"3489:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1603,"nodeType":"ExpressionStatement","src":"3489:36:15"},{"expression":{"arguments":[{"id":1605,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"3557:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3586:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3576:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1606,"name":"bytes","nodeType":"ElementaryTypeName","src":"3580:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3576:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3590:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1604,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"3535:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3535:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1612,"nodeType":"ExpressionStatement","src":"3535:61:15"}]},"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"3164:239:15","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":1614,"implemented":true,"kind":"function","modifiers":[{"id":1598,"kind":"modifierInvocation","modifierName":{"id":1597,"name":"onlyProxy","nameLocations":["3469:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1553,"src":"3469:9:15"},"nodeType":"ModifierInvocation","src":"3469:9:15"}],"name":"upgradeTo","nameLocation":"3417:9:15","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"newImplementation","nameLocation":"3435:17:15","nodeType":"VariableDeclaration","scope":1614,"src":"3427:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:27:15"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[],"src":"3479:0:15"},"scope":1647,"src":"3408:195:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1634,"nodeType":"Block","src":"4027:115:15","statements":[{"expression":{"arguments":[{"id":1625,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4055:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1624,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"4037:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"ExpressionStatement","src":"4037:36:15"},{"expression":{"arguments":[{"id":1629,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4105:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1630,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"4124:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4130:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1628,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"4083:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"ExpressionStatement","src":"4083:52:15"}]},"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"3609:308:15","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":1635,"implemented":true,"kind":"function","modifiers":[{"id":1622,"kind":"modifierInvocation","modifierName":{"id":1621,"name":"onlyProxy","nameLocations":["4017:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":1553,"src":"4017:9:15"},"nodeType":"ModifierInvocation","src":"4017:9:15"}],"name":"upgradeToAndCall","nameLocation":"3931:16:15","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"newImplementation","nameLocation":"3956:17:15","nodeType":"VariableDeclaration","scope":1635,"src":"3948:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"3948:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"data","nameLocation":"3988:4:15","nodeType":"VariableDeclaration","scope":1635,"src":"3975:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1618,"name":"bytes","nodeType":"ElementaryTypeName","src":"3975:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3947:46:15"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[],"src":"4027:0:15"},"scope":1647,"src":"3922:220:15","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"4148:397:15","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":1641,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4559:17:15","nodeType":"FunctionDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"newImplementation","nameLocation":"4585:17:15","nodeType":"VariableDeclaration","scope":1641,"src":"4577:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"4577:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4576:27:15"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[],"src":"4620:0:15"},"scope":1647,"src":"4550:71:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"4627:254:15","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1646,"mutability":"mutable","name":"__gap","nameLocation":"4906:5:15","nodeType":"VariableDeclaration","scope":1647,"src":"4886:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"4886:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1645,"length":{"hexValue":"3530","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4894:2:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4886:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1648,"src":"949:3965:15","usedErrors":[]}],"src":"115:4800:15"},"id":15},"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1977]},"id":1978,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"126:67:16","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1977,"linearizedBaseContracts":[1977],"name":"AddressUpgradeable","nameLocation":"202:18:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":1664,"nodeType":"Block","src":"1489:254:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1658,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"1713:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:16","memberName":"code","nodeType":"MemberAccess","src":"1713:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:16","memberName":"length","nodeType":"MemberAccess","src":"1713:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1657,"id":1663,"nodeType":"Return","src":"1706:30:16"}]},"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"227:1191:16","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:16","nodeType":"FunctionDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"account","nameLocation":"1451:7:16","nodeType":"VariableDeclaration","scope":1665,"src":"1443:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:16"},"returnParameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1665,"src":"1483:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1655,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:16"},"scope":1977,"src":"1423:320:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1698,"nodeType":"Block","src":"2729:241:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1676,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1977","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1977","typeString":"library AddressUpgradeable"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:16","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:16","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1679,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2772:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"ExpressionStatement","src":"2739:73:16"},{"assignments":[1685,null],"declarations":[{"constant":false,"id":1685,"mutability":"mutable","name":"success","nameLocation":"2829:7:16","nodeType":"VariableDeclaration","scope":1698,"src":"2824:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1684,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1692,"initialValue":{"arguments":[{"hexValue":"","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1686,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2842:9:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:16","memberName":"call","nodeType":"MemberAccess","src":"2842:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2864:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:16"},{"expression":{"arguments":[{"id":1694,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"2893:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"2885:78:16"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"1749:904:16","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1699,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:16","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:16","nodeType":"VariableDeclaration","scope":1699,"src":"2677:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"amount","nameLocation":"2712:6:16","nodeType":"VariableDeclaration","scope":1699,"src":"2704:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:16"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[],"src":"2729:0:16"},"scope":1977,"src":"2658:312:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1716,"nodeType":"Block","src":"3801:96:16","statements":[{"expression":{"arguments":[{"id":1710,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"3840:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1711,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"3848:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1709,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1757,1801],"referencedDeclaration":1801,"src":"3818:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1708,"id":1715,"nodeType":"Return","src":"3811:79:16"}]},"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"2976:731:16","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1717,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:16","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"target","nameLocation":"3742:6:16","nodeType":"VariableDeclaration","scope":1717,"src":"3734:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"data","nameLocation":"3763:4:16","nodeType":"VariableDeclaration","scope":1717,"src":"3750:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1703,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:16"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1717,"src":"3787:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1706,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:16"},"scope":1977,"src":"3712:185:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1736,"nodeType":"Block","src":"4266:76:16","statements":[{"expression":{"arguments":[{"id":1730,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"4305:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"4313:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1733,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"4322:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1729,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1757,1801],"referencedDeclaration":1801,"src":"4283:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1728,"id":1735,"nodeType":"Return","src":"4276:59:16"}]},"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"3903:211:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1737,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:16","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"target","nameLocation":"4158:6:16","nodeType":"VariableDeclaration","scope":1737,"src":"4150:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"data","nameLocation":"4187:4:16","nodeType":"VariableDeclaration","scope":1737,"src":"4174:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1721,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:16","nodeType":"VariableDeclaration","scope":1737,"src":"4201:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1723,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:16"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1737,"src":"4252:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1726,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:16"},"scope":1977,"src":"4119:223:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1756,"nodeType":"Block","src":"4817:111:16","statements":[{"expression":{"arguments":[{"id":1750,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"4856:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4864:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4870:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1749,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1757,1801],"referencedDeclaration":1801,"src":"4834:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1748,"id":1755,"nodeType":"Return","src":"4827:94:16"}]},"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"4348:351:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:16","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"target","nameLocation":"4743:6:16","nodeType":"VariableDeclaration","scope":1757,"src":"4735:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"data","nameLocation":"4764:4:16","nodeType":"VariableDeclaration","scope":1757,"src":"4751:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1741,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"value","nameLocation":"4778:5:16","nodeType":"VariableDeclaration","scope":1757,"src":"4770:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:16"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1757,"src":"4803:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1746,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:16"},"scope":1977,"src":"4704:224:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1800,"nodeType":"Block","src":"5355:267:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1774,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1977","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1977","typeString":"library AddressUpgradeable"}],"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:16","typeDescriptions":{}}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:16","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"5398:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1781,"nodeType":"ExpressionStatement","src":"5365:81:16"},{"assignments":[1783,1785],"declarations":[{"constant":false,"id":1783,"mutability":"mutable","name":"success","nameLocation":"5462:7:16","nodeType":"VariableDeclaration","scope":1800,"src":"5457:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1782,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:16","nodeType":"VariableDeclaration","scope":1800,"src":"5471:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1784,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1792,"initialValue":{"arguments":[{"id":1790,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5524:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1786,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5498:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:16","memberName":"call","nodeType":"MemberAccess","src":"5498:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"5517:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:16"},{"expression":{"arguments":[{"id":1794,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5573:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1795,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5581:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1796,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"5590:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1797,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"5602:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1793,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"5546:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1770,"id":1799,"nodeType":"Return","src":"5539:76:16"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"4934:237:16","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:16","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"target","nameLocation":"5224:6:16","nodeType":"VariableDeclaration","scope":1801,"src":"5216:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"data","nameLocation":"5253:4:16","nodeType":"VariableDeclaration","scope":1801,"src":"5240:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1761,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"value","nameLocation":"5275:5:16","nodeType":"VariableDeclaration","scope":1801,"src":"5267:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:16","nodeType":"VariableDeclaration","scope":1801,"src":"5290:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1765,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:16"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1801,"src":"5341:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1768,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:16"},"scope":1977,"src":"5176:446:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"5899:97:16","statements":[{"expression":{"arguments":[{"id":1812,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"5935:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1813,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"5943:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1811,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1818,1847],"referencedDeclaration":1847,"src":"5916:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1810,"id":1816,"nodeType":"Return","src":"5909:80:16"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"5628:166:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:16","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"target","nameLocation":"5835:6:16","nodeType":"VariableDeclaration","scope":1818,"src":"5827:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"data","nameLocation":"5856:4:16","nodeType":"VariableDeclaration","scope":1818,"src":"5843:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1805,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:16"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"5885:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1808,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:16"},"scope":1977,"src":"5799:197:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1846,"nodeType":"Block","src":"6338:168:16","statements":[{"assignments":[1831,1833],"declarations":[{"constant":false,"id":1831,"mutability":"mutable","name":"success","nameLocation":"6354:7:16","nodeType":"VariableDeclaration","scope":1846,"src":"6349:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1830,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:16","nodeType":"VariableDeclaration","scope":1846,"src":"6363:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1832,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1838,"initialValue":{"arguments":[{"id":1836,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6408:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1834,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6390:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:16","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:16","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:16"},{"expression":{"arguments":[{"id":1840,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6457:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1841,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6465:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1842,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"6474:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1843,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"6486:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1839,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6430:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1829,"id":1845,"nodeType":"Return","src":"6423:76:16"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"6002:173:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1847,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:16","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"target","nameLocation":"6225:6:16","nodeType":"VariableDeclaration","scope":1847,"src":"6217:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"data","nameLocation":"6254:4:16","nodeType":"VariableDeclaration","scope":1847,"src":"6241:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1822,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:16","nodeType":"VariableDeclaration","scope":1847,"src":"6268:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1824,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:16"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1847,"src":"6324:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1827,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:16"},"scope":1977,"src":"6180:326:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1863,"nodeType":"Block","src":"6782:101:16","statements":[{"expression":{"arguments":[{"id":1858,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6820:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1859,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"6828:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1857,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1864,1893],"referencedDeclaration":1893,"src":"6799:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1856,"id":1862,"nodeType":"Return","src":"6792:84:16"}]},"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"6512:168:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1864,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:16","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"target","nameLocation":"6723:6:16","nodeType":"VariableDeclaration","scope":1864,"src":"6715:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"data","nameLocation":"6744:4:16","nodeType":"VariableDeclaration","scope":1864,"src":"6731:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1851,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:16"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1864,"src":"6768:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1854,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:16"},"scope":1977,"src":"6685:198:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"7224:170:16","statements":[{"assignments":[1877,1879],"declarations":[{"constant":false,"id":1877,"mutability":"mutable","name":"success","nameLocation":"7240:7:16","nodeType":"VariableDeclaration","scope":1892,"src":"7235:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1876,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:16","nodeType":"VariableDeclaration","scope":1892,"src":"7249:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1878,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1884,"initialValue":{"arguments":[{"id":1882,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"7296:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1880,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"7276:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:16","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:16","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:16"},{"expression":{"arguments":[{"id":1886,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"7345:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1887,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"7353:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1888,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"7362:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1889,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"7374:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1885,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"7318:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1875,"id":1891,"nodeType":"Return","src":"7311:76:16"}]},"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"6889:175:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:16","nodeType":"FunctionDefinition","parameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"target","nameLocation":"7116:6:16","nodeType":"VariableDeclaration","scope":1893,"src":"7108:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1869,"mutability":"mutable","name":"data","nameLocation":"7145:4:16","nodeType":"VariableDeclaration","scope":1893,"src":"7132:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1868,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1871,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:16","nodeType":"VariableDeclaration","scope":1893,"src":"7159:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1870,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:16"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1893,"src":"7210:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1873,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:16"},"scope":1977,"src":"7069:325:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"7876:434:16","statements":[{"condition":{"id":1907,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"7890:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1929,"nodeType":"Block","src":"8246:58:16","statements":[{"expression":{"arguments":[{"id":1925,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"8268:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1926,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"8280:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1924,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8260:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"ExpressionStatement","src":"8260:33:16"}]},"id":1930,"nodeType":"IfStatement","src":"7886:418:16","trueBody":{"id":1923,"nodeType":"Block","src":"7899:341:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1908,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"7917:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:16","memberName":"length","nodeType":"MemberAccess","src":"7917:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1920,"nodeType":"IfStatement","src":"7913:286:16","trueBody":{"id":1919,"nodeType":"Block","src":"7941:258:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":1914,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"8143:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1913,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"8132:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"ExpressionStatement","src":"8124:60:16"}]}},{"expression":{"id":1921,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"8219:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1906,"id":1922,"nodeType":"Return","src":"8212:17:16"}]}}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"7400:277:16","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:16","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"target","nameLocation":"7735:6:16","nodeType":"VariableDeclaration","scope":1932,"src":"7727:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"success","nameLocation":"7756:7:16","nodeType":"VariableDeclaration","scope":1932,"src":"7751:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1897,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:16","nodeType":"VariableDeclaration","scope":1932,"src":"7773:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1899,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:16","nodeType":"VariableDeclaration","scope":1932,"src":"7806:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1901,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:16"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1932,"src":"7862:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1904,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:16"},"scope":1977,"src":"7682:628:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1955,"nodeType":"Block","src":"8691:135:16","statements":[{"condition":{"id":1944,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"8705:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1953,"nodeType":"Block","src":"8762:58:16","statements":[{"expression":{"arguments":[{"id":1949,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"8784:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1950,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"8796:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1948,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8776:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"8776:33:16"}]},"id":1954,"nodeType":"IfStatement","src":"8701:119:16","trueBody":{"id":1947,"nodeType":"Block","src":"8714:42:16","statements":[{"expression":{"id":1945,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"8735:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1943,"id":1946,"nodeType":"Return","src":"8728:17:16"}]}}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"8316:210:16","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1956,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:16","nodeType":"FunctionDefinition","parameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"success","nameLocation":"8571:7:16","nodeType":"VariableDeclaration","scope":1956,"src":"8566:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1934,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:16","nodeType":"VariableDeclaration","scope":1956,"src":"8588:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:16","nodeType":"VariableDeclaration","scope":1956,"src":"8621:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1938,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:16"},"returnParameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1956,"src":"8677:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1941,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:16"},"scope":1977,"src":"8531:295:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1975,"nodeType":"Block","src":"8915:457:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1963,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8991:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:16","memberName":"length","nodeType":"MemberAccess","src":"8991:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1973,"nodeType":"Block","src":"9321:45:16","statements":[{"expression":{"arguments":[{"id":1970,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"9342:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1969,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1972,"nodeType":"ExpressionStatement","src":"9335:20:16"}]},"id":1974,"nodeType":"IfStatement","src":"8987:379:16","trueBody":{"id":1968,"nodeType":"Block","src":"9014:301:16","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:16","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:16"},"nodeType":"YulFunctionCall","src":"9213:17:16"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:16","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:16"},"nodeType":"YulFunctionCall","src":"9254:19:16"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:16"},"nodeType":"YulFunctionCall","src":"9247:44:16"},"nodeType":"YulExpressionStatement","src":"9247:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1958,"isOffset":false,"isSlot":false,"src":"9219:10:16","valueSize":1},{"declaration":1958,"isOffset":false,"isSlot":false,"src":"9262:10:16","valueSize":1}],"id":1967,"nodeType":"InlineAssembly","src":"9163:142:16"}]}}]},"id":1976,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:16","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:16","nodeType":"VariableDeclaration","scope":1976,"src":"8849:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1957,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:16","nodeType":"VariableDeclaration","scope":1976,"src":"8874:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1959,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:16"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[],"src":"8915:0:16"},"scope":1977,"src":"8832:540:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1978,"src":"194:9180:16","usedErrors":[]}],"src":"101:9274:16"},"id":16},"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2028],"Initializable":[1510]},"id":2029,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1979,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:17"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1981,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2029,"sourceUnit":1511,"src":"125:63:17","symbolAliases":[{"foreign":{"id":1980,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"133:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1983,"name":"Initializable","nameLocations":["727:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":1510,"src":"727:13:17"},"id":1984,"nodeType":"InheritanceSpecifier","src":"727:13:17"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"190:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2028,"linearizedBaseContracts":[2028,1510],"name":"ContextUpgradeable","nameLocation":"705:18:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":1989,"nodeType":"Block","src":"799:7:17","statements":[]},"id":1990,"implemented":true,"kind":"function","modifiers":[{"id":1987,"kind":"modifierInvocation","modifierName":{"id":1986,"name":"onlyInitializing","nameLocations":["782:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"782:16:17"},"nodeType":"ModifierInvocation","src":"782:16:17"}],"name":"__Context_init","nameLocation":"756:14:17","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[],"src":"770:2:17"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[],"src":"799:0:17"},"scope":2028,"src":"747:59:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1995,"nodeType":"Block","src":"874:7:17","statements":[]},"id":1996,"implemented":true,"kind":"function","modifiers":[{"id":1993,"kind":"modifierInvocation","modifierName":{"id":1992,"name":"onlyInitializing","nameLocations":["857:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"857:16:17"},"nodeType":"ModifierInvocation","src":"857:16:17"}],"name":"__Context_init_unchained","nameLocation":"821:24:17","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[],"src":"845:2:17"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"874:0:17"},"scope":2028,"src":"812:69:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2004,"nodeType":"Block","src":"948:34:17","statements":[{"expression":{"expression":{"id":2001,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:17","memberName":"sender","nodeType":"MemberAccess","src":"965:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2000,"id":2003,"nodeType":"Return","src":"958:17:17"}]},"id":2005,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:17","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[],"src":"905:2:17"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2005,"src":"939:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1998,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:17"},"scope":2028,"src":"886:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2013,"nodeType":"Block","src":"1055:32:17","statements":[{"expression":{"expression":{"id":2010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:17","memberName":"data","nodeType":"MemberAccess","src":"1072:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2009,"id":2012,"nodeType":"Return","src":"1065:15:17"}]},"id":2014,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:17","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[],"src":"1005:2:17"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2014,"src":"1039:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2007,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:17"},"scope":2028,"src":"988:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2021,"nodeType":"Block","src":"1165:25:17","statements":[{"expression":{"hexValue":"30","id":2019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2018,"id":2020,"nodeType":"Return","src":"1175:8:17"}]},"id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:17","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[],"src":"1122:2:17"},"returnParameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2022,"src":"1156:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:17"},"scope":2028,"src":"1093:97:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"1196:254:17","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2027,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:17","nodeType":"VariableDeclaration","scope":2028,"src":"1455:25:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2026,"length":{"hexValue":"3530","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2029,"src":"687:796:17","usedErrors":[]}],"src":"101:1383:17"},"id":17},"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[2138]},"id":2139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2030,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"218:1201:18","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2138,"linearizedBaseContracts":[2138],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":2034,"members":[{"constant":false,"id":2033,"mutability":"mutable","name":"value","nameLocation":"1494:5:18","nodeType":"VariableDeclaration","scope":2034,"src":"1486:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:18","nodeType":"StructDefinition","scope":2138,"src":"1457:49:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":2037,"members":[{"constant":false,"id":2036,"mutability":"mutable","name":"value","nameLocation":"1546:5:18","nodeType":"VariableDeclaration","scope":2037,"src":"1541:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2035,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:18","nodeType":"StructDefinition","scope":2138,"src":"1512:46:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":2040,"members":[{"constant":false,"id":2039,"mutability":"mutable","name":"value","nameLocation":"1601:5:18","nodeType":"VariableDeclaration","scope":2040,"src":"1593:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:18","nodeType":"StructDefinition","scope":2138,"src":"1564:49:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":2043,"members":[{"constant":false,"id":2042,"mutability":"mutable","name":"value","nameLocation":"1656:5:18","nodeType":"VariableDeclaration","scope":2043,"src":"1648:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:18","nodeType":"StructDefinition","scope":2138,"src":"1619:49:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":2046,"members":[{"constant":false,"id":2045,"mutability":"mutable","name":"value","nameLocation":"1709:5:18","nodeType":"VariableDeclaration","scope":2046,"src":"1702:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2044,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:18","nodeType":"StructDefinition","scope":2138,"src":"1674:47:18","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":2049,"members":[{"constant":false,"id":2048,"mutability":"mutable","name":"value","nameLocation":"1760:5:18","nodeType":"VariableDeclaration","scope":2049,"src":"1754:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2047,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:18","nodeType":"StructDefinition","scope":2138,"src":"1727:45:18","visibility":"public"},{"body":{"id":2059,"nodeType":"Block","src":"1954:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2016:38:18","statements":[{"nodeType":"YulAssignment","src":"2030:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2040:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2030:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2056,"isOffset":false,"isSlot":true,"src":"2030:6:18","suffix":"slot","valueSize":1},{"declaration":2052,"isOffset":false,"isSlot":false,"src":"2040:4:18","valueSize":1}],"id":2058,"nodeType":"InlineAssembly","src":"2007:47:18"}]},"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"1778:87:18","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2060,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:18","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"slot","nameLocation":"1902:4:18","nodeType":"VariableDeclaration","scope":2060,"src":"1894:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:18"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"r","nameLocation":"1951:1:18","nodeType":"VariableDeclaration","scope":2060,"src":"1931:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2034_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":2055,"nodeType":"UserDefinedTypeName","pathNode":{"id":2054,"name":"AddressSlot","nameLocations":["1931:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"1931:11:18"},"referencedDeclaration":2034,"src":"1931:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2034_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:18"},"scope":2138,"src":"1870:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"2242:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2304:38:18","statements":[{"nodeType":"YulAssignment","src":"2318:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2328:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2318:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2067,"isOffset":false,"isSlot":true,"src":"2318:6:18","suffix":"slot","valueSize":1},{"declaration":2063,"isOffset":false,"isSlot":false,"src":"2328:4:18","valueSize":1}],"id":2069,"nodeType":"InlineAssembly","src":"2295:47:18"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"2066:87:18","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:18","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"slot","nameLocation":"2190:4:18","nodeType":"VariableDeclaration","scope":2071,"src":"2182:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:18"},"returnParameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"r","nameLocation":"2239:1:18","nodeType":"VariableDeclaration","scope":2071,"src":"2219:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2037_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":2066,"nodeType":"UserDefinedTypeName","pathNode":{"id":2065,"name":"BooleanSlot","nameLocations":["2219:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2037,"src":"2219:11:18"},"referencedDeclaration":2037,"src":"2219:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2037_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:18"},"scope":2138,"src":"2158:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2081,"nodeType":"Block","src":"2530:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2592:38:18","statements":[{"nodeType":"YulAssignment","src":"2606:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2616:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2606:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2078,"isOffset":false,"isSlot":true,"src":"2606:6:18","suffix":"slot","valueSize":1},{"declaration":2074,"isOffset":false,"isSlot":false,"src":"2616:4:18","valueSize":1}],"id":2080,"nodeType":"InlineAssembly","src":"2583:47:18"}]},"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"2354:87:18","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:18","nodeType":"FunctionDefinition","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"slot","nameLocation":"2478:4:18","nodeType":"VariableDeclaration","scope":2082,"src":"2470:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:18"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"r","nameLocation":"2527:1:18","nodeType":"VariableDeclaration","scope":2082,"src":"2507:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2040_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":2077,"nodeType":"UserDefinedTypeName","pathNode":{"id":2076,"name":"Bytes32Slot","nameLocations":["2507:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2040,"src":"2507:11:18"},"referencedDeclaration":2040,"src":"2507:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2040_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:18"},"scope":2138,"src":"2446:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"2818:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2880:38:18","statements":[{"nodeType":"YulAssignment","src":"2894:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2904:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2894:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2089,"isOffset":false,"isSlot":true,"src":"2894:6:18","suffix":"slot","valueSize":1},{"declaration":2085,"isOffset":false,"isSlot":false,"src":"2904:4:18","valueSize":1}],"id":2091,"nodeType":"InlineAssembly","src":"2871:47:18"}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"2642:87:18","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:18","nodeType":"FunctionDefinition","parameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"slot","nameLocation":"2766:4:18","nodeType":"VariableDeclaration","scope":2093,"src":"2758:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:18"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"r","nameLocation":"2815:1:18","nodeType":"VariableDeclaration","scope":2093,"src":"2795:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2043_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":2088,"nodeType":"UserDefinedTypeName","pathNode":{"id":2087,"name":"Uint256Slot","nameLocations":["2795:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2043,"src":"2795:11:18"},"referencedDeclaration":2043,"src":"2795:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2043_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:18"},"scope":2138,"src":"2734:190:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2103,"nodeType":"Block","src":"3103:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3165:38:18","statements":[{"nodeType":"YulAssignment","src":"3179:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3189:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3179:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2100,"isOffset":false,"isSlot":true,"src":"3179:6:18","suffix":"slot","valueSize":1},{"declaration":2096,"isOffset":false,"isSlot":false,"src":"3189:4:18","valueSize":1}],"id":2102,"nodeType":"InlineAssembly","src":"3156:47:18"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"2930:86:18","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:18","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"slot","nameLocation":"3052:4:18","nodeType":"VariableDeclaration","scope":2104,"src":"3044:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:18"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"r","nameLocation":"3100:1:18","nodeType":"VariableDeclaration","scope":2104,"src":"3081:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2046_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":2099,"nodeType":"UserDefinedTypeName","pathNode":{"id":2098,"name":"StringSlot","nameLocations":["3081:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2046,"src":"3081:10:18"},"referencedDeclaration":2046,"src":"3081:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2046_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:18"},"scope":2138,"src":"3021:188:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2114,"nodeType":"Block","src":"3411:112:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3473:44:18","statements":[{"nodeType":"YulAssignment","src":"3487:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3497:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3487:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2111,"isOffset":false,"isSlot":true,"src":"3487:6:18","suffix":"slot","valueSize":1},{"declaration":2107,"isOffset":false,"isSlot":true,"src":"3497:10:18","suffix":"slot","valueSize":1}],"id":2113,"nodeType":"InlineAssembly","src":"3464:53:18"}]},"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"3215:101:18","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2115,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:18","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"store","nameLocation":"3359:5:18","nodeType":"VariableDeclaration","scope":2115,"src":"3344:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2106,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:18"},"returnParameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"r","nameLocation":"3408:1:18","nodeType":"VariableDeclaration","scope":2115,"src":"3389:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2046_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":2110,"nodeType":"UserDefinedTypeName","pathNode":{"id":2109,"name":"StringSlot","nameLocations":["3389:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2046,"src":"3389:10:18"},"referencedDeclaration":2046,"src":"3389:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2046_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:18"},"scope":2138,"src":"3321:202:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2125,"nodeType":"Block","src":"3699:106:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3761:38:18","statements":[{"nodeType":"YulAssignment","src":"3775:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3785:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3775:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2122,"isOffset":false,"isSlot":true,"src":"3775:6:18","suffix":"slot","valueSize":1},{"declaration":2118,"isOffset":false,"isSlot":false,"src":"3785:4:18","valueSize":1}],"id":2124,"nodeType":"InlineAssembly","src":"3752:47:18"}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"3529:85:18","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:18","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"slot","nameLocation":"3649:4:18","nodeType":"VariableDeclaration","scope":2126,"src":"3641:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:18"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"r","nameLocation":"3696:1:18","nodeType":"VariableDeclaration","scope":2126,"src":"3678:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2049_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":2121,"nodeType":"UserDefinedTypeName","pathNode":{"id":2120,"name":"BytesSlot","nameLocations":["3678:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2049,"src":"3678:9:18"},"referencedDeclaration":2049,"src":"3678:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2049_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:18"},"scope":2138,"src":"3619:186:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2136,"nodeType":"Block","src":"4002:112:18","statements":[{"AST":{"nodeType":"YulBlock","src":"4064:44:18","statements":[{"nodeType":"YulAssignment","src":"4078:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4088:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4078:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2133,"isOffset":false,"isSlot":true,"src":"4078:6:18","suffix":"slot","valueSize":1},{"declaration":2129,"isOffset":false,"isSlot":true,"src":"4088:10:18","suffix":"slot","valueSize":1}],"id":2135,"nodeType":"InlineAssembly","src":"4055:53:18"}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"3811:99:18","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2137,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:18","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"store","nameLocation":"3951:5:18","nodeType":"VariableDeclaration","scope":2137,"src":"3937:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2128,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:18"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"r","nameLocation":"3999:1:18","nodeType":"VariableDeclaration","scope":2137,"src":"3981:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2049_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":2132,"nodeType":"UserDefinedTypeName","pathNode":{"id":2131,"name":"BytesSlot","nameLocations":["3981:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2049,"src":"3981:9:18"},"referencedDeclaration":2049,"src":"3981:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2049_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:18"},"scope":2138,"src":"3915:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2139,"src":"1420:2696:18","usedErrors":[]}],"src":"193:3924:18"},"id":18},"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[3290],"SignedMathUpgradeable":[3395],"StringsUpgradeable":[2367]},"id":2368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2140,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:19"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":2141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2368,"sourceUnit":3291,"src":"126:36:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol","file":"./math/SignedMathUpgradeable.sol","id":2142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2368,"sourceUnit":3396,"src":"163:42:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"207:34:19","text":" @dev String operations."},"fullyImplemented":true,"id":2367,"linearizedBaseContracts":[2367],"name":"StringsUpgradeable","nameLocation":"250:18:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2146,"mutability":"constant","name":"_SYMBOLS","nameLocation":"300:8:19","nodeType":"VariableDeclaration","scope":2367,"src":"275:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2144,"name":"bytes16","nodeType":"ElementaryTypeName","src":"275:7:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2149,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"358:15:19","nodeType":"VariableDeclaration","scope":2367,"src":"335:43:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2147,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2196,"nodeType":"Block","src":"551:636:19","statements":[{"id":2195,"nodeType":"UncheckedBlock","src":"561:620:19","statements":[{"assignments":[2158],"declarations":[{"constant":false,"id":2158,"mutability":"mutable","name":"length","nameLocation":"593:6:19","nodeType":"VariableDeclaration","scope":2195,"src":"585:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2165,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"624:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2159,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"602:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$3290_$","typeString":"type(library MathUpgradeable)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"618:5:19","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"602:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"602:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"585:49:19"},{"assignments":[2167],"declarations":[{"constant":false,"id":2167,"mutability":"mutable","name":"buffer","nameLocation":"662:6:19","nodeType":"VariableDeclaration","scope":2195,"src":"648:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2166,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2172,"initialValue":{"arguments":[{"id":2170,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"682:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"671:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"648:41:19"},{"assignments":[2174],"declarations":[{"constant":false,"id":2174,"mutability":"mutable","name":"ptr","nameLocation":"711:3:19","nodeType":"VariableDeclaration","scope":2195,"src":"703:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2175,"nodeType":"VariableDeclarationStatement","src":"703:11:19"},{"AST":{"nodeType":"YulBlock","src":"784:67:19","statements":[{"nodeType":"YulAssignment","src":"802:35:19","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"813:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"825:2:19","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"829:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"821:3:19"},"nodeType":"YulFunctionCall","src":"821:15:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:19"},"nodeType":"YulFunctionCall","src":"809:28:19"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"802:3:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2167,"isOffset":false,"isSlot":false,"src":"813:6:19","valueSize":1},{"declaration":2158,"isOffset":false,"isSlot":false,"src":"829:6:19","valueSize":1},{"declaration":2174,"isOffset":false,"isSlot":false,"src":"802:3:19","valueSize":1}],"id":2176,"nodeType":"InlineAssembly","src":"775:76:19"},{"body":{"id":2191,"nodeType":"Block","src":"877:267:19","statements":[{"expression":{"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"895:5:19","subExpression":{"id":2178,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"895:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2180,"nodeType":"ExpressionStatement","src":"895:5:19"},{"AST":{"nodeType":"YulBlock","src":"978:84:19","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1008:3:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1022:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1018:3:19"},"nodeType":"YulFunctionCall","src":"1018:14:19"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"1034:8:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1013:4:19"},"nodeType":"YulFunctionCall","src":"1013:30:19"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1000:7:19"},"nodeType":"YulFunctionCall","src":"1000:44:19"},"nodeType":"YulExpressionStatement","src":"1000:44:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2146,"isOffset":false,"isSlot":false,"src":"1034:8:19","valueSize":1},{"declaration":2174,"isOffset":false,"isSlot":false,"src":"1008:3:19","valueSize":1},{"declaration":2152,"isOffset":false,"isSlot":false,"src":"1022:5:19","valueSize":1}],"id":2181,"nodeType":"InlineAssembly","src":"969:93:19"},{"expression":{"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"1079:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1079:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2185,"nodeType":"ExpressionStatement","src":"1079:11:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"1112:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1112:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2190,"nodeType":"IfStatement","src":"1108:21:19","trueBody":{"id":2189,"nodeType":"Break","src":"1124:5:19"}}]},"condition":{"hexValue":"74727565","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"871:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2192,"nodeType":"WhileStatement","src":"864:280:19"},{"expression":{"id":2193,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"1164:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2156,"id":2194,"nodeType":"Return","src":"1157:13:19"}]}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"385:90:19","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2197,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"489:8:19","nodeType":"FunctionDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"value","nameLocation":"506:5:19","nodeType":"VariableDeclaration","scope":2197,"src":"498:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:15:19"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2197,"src":"536:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2154,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"535:15:19"},"scope":2367,"src":"480:707:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2224,"nodeType":"Block","src":"1357:114:19","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"1398:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1398:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1398:20:19","trueExpression":{"hexValue":"2d","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"1455:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2216,"name":"SignedMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"1429:21:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMathUpgradeable_$3395_$","typeString":"type(library SignedMathUpgradeable)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:3:19","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3394,"src":"1429:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2215,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2197,2225],"referencedDeclaration":2197,"src":"1420:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1420:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1381:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"1381:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:82:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1374:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2205,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:19","typeDescriptions":{}}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:90:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2204,"id":2223,"nodeType":"Return","src":"1367:97:19"}]},"documentation":{"id":2198,"nodeType":"StructuredDocumentation","src":"1193:89:19","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2225,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1296:8:19","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"value","nameLocation":"1312:5:19","nodeType":"VariableDeclaration","scope":2225,"src":"1305:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2199,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:14:19"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2225,"src":"1342:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2202,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:15:19"},"scope":2367,"src":"1287:184:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2244,"nodeType":"Block","src":"1650:111:19","statements":[{"id":2243,"nodeType":"UncheckedBlock","src":"1660:95:19","statements":[{"expression":{"arguments":[{"id":2234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1703:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"1733:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2235,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"1710:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$3290_$","typeString":"type(library MathUpgradeable)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:19","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3250,"src":"1710:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1710:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2233,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2245,2321,2341],"referencedDeclaration":2321,"src":"1691:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2232,"id":2242,"nodeType":"Return","src":"1684:60:19"}]}]},"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"1477:94:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2245,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1585:11:19","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"value","nameLocation":"1605:5:19","nodeType":"VariableDeclaration","scope":2245,"src":"1597:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:15:19"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2245,"src":"1635:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2230,"name":"string","nodeType":"ElementaryTypeName","src":"1635:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1634:15:19"},"scope":2367,"src":"1576:185:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2320,"nodeType":"Block","src":"1974:347:19","statements":[{"assignments":[2256],"declarations":[{"constant":false,"id":2256,"mutability":"mutable","name":"buffer","nameLocation":"1997:6:19","nodeType":"VariableDeclaration","scope":2320,"src":"1984:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2255,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2265,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2260,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"2020:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2016:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2006:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2257,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1984:47:19"},{"expression":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2266,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"2041:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2268,"indexExpression":{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2041:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2053:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2041:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2271,"nodeType":"ExpressionStatement","src":"2041:15:19"},{"expression":{"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2272,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"2066:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2274,"indexExpression":{"hexValue":"31","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2066:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2277,"nodeType":"ExpressionStatement","src":"2066:15:19"},{"body":{"id":2306,"nodeType":"Block","src":"2136:83:19","statements":[{"expression":{"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2292,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"2150:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2294,"indexExpression":{"id":2293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2157:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2150:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2295,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2162:8:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2299,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"2171:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2171:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:21:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2150:33:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2301,"nodeType":"ExpressionStatement","src":"2150:33:19"},{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"2197:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2197:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"2197:11:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2124:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2124:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2307,"initializationExpression":{"assignments":[2279],"declarations":[{"constant":false,"id":2279,"mutability":"mutable","name":"i","nameLocation":"2104:1:19","nodeType":"VariableDeclaration","scope":2307,"src":"2096:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2285,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2281,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"2112:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2096:26:19"},"loopExpression":{"expression":{"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2131:3:19","subExpression":{"id":2289,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2133:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2291,"nodeType":"ExpressionStatement","src":"2131:3:19"},"nodeType":"ForStatement","src":"2091:128:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"2236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2314,"nodeType":"ExpressionStatement","src":"2228:55:19"},{"expression":{"arguments":[{"id":2317,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"2307:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2300:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2315,"name":"string","nodeType":"ElementaryTypeName","src":"2300:6:19","typeDescriptions":{}}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2254,"id":2319,"nodeType":"Return","src":"2293:21:19"}]},"documentation":{"id":2246,"nodeType":"StructuredDocumentation","src":"1767:112:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2321,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1893:11:19","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"value","nameLocation":"1913:5:19","nodeType":"VariableDeclaration","scope":2321,"src":"1905:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"length","nameLocation":"1928:6:19","nodeType":"VariableDeclaration","scope":2321,"src":"1920:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:31:19"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2321,"src":"1959:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2252,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:15:19"},"scope":2367,"src":"1884:437:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"2546:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2334,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"2591:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2583:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2332,"name":"uint160","nodeType":"ElementaryTypeName","src":"2583:7:19","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2575:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:19","typeDescriptions":{}}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2337,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2599:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2329,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2245,2321,2341],"referencedDeclaration":2321,"src":"2563:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2328,"id":2339,"nodeType":"Return","src":"2556:59:19"}]},"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"2327:141:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2482:11:19","nodeType":"FunctionDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"addr","nameLocation":"2502:4:19","nodeType":"VariableDeclaration","scope":2341,"src":"2494:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:14:19"},"returnParameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"2531:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2326,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2530:15:19"},"scope":2367,"src":"2473:149:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2365,"nodeType":"Block","src":"2777:66:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"2810:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2352,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:19","typeDescriptions":{}}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2351,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2794:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2360,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"2833:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2358,"name":"bytes","nodeType":"ElementaryTypeName","src":"2827:5:19","typeDescriptions":{}}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2357,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2817:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2794:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2350,"id":2364,"nodeType":"Return","src":"2787:49:19"}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"2628:66:19","text":" @dev Returns true if the two strings are equal."},"id":2366,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2708:5:19","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"a","nameLocation":"2728:1:19","nodeType":"VariableDeclaration","scope":2366,"src":"2714:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2343,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"b","nameLocation":"2745:1:19","nodeType":"VariableDeclaration","scope":2366,"src":"2731:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2345,"name":"string","nodeType":"ElementaryTypeName","src":"2731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:34:19"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2366,"src":"2771:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2348,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:19"},"scope":2367,"src":"2699:144:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2368,"src":"242:2603:19","usedErrors":[]}],"src":"101:2745:19"},"id":19},"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2412],"IERC165Upgradeable":[2424],"Initializable":[1510]},"id":2413,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2369,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:20"},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","id":2370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2413,"sourceUnit":2425,"src":"124:34:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2413,"sourceUnit":1511,"src":"159:66:20","symbolAliases":[{"foreign":{"id":2371,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"167:13:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2374,"name":"Initializable","nameLocations":["843:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1510,"src":"843:13:20"},"id":2375,"nodeType":"InheritanceSpecifier","src":"843:13:20"},{"baseName":{"id":2376,"name":"IERC165Upgradeable","nameLocations":["858:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"858:18:20"},"id":2377,"nodeType":"InheritanceSpecifier","src":"858:18:20"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"227:576:20","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2412,"linearizedBaseContracts":[2412,2424,1510],"name":"ERC165Upgradeable","nameLocation":"822:17:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":2382,"nodeType":"Block","src":"934:7:20","statements":[]},"id":2383,"implemented":true,"kind":"function","modifiers":[{"id":2380,"kind":"modifierInvocation","modifierName":{"id":2379,"name":"onlyInitializing","nameLocations":["917:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"917:16:20"},"nodeType":"ModifierInvocation","src":"917:16:20"}],"name":"__ERC165_init","nameLocation":"892:13:20","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[],"src":"905:2:20"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"934:0:20"},"scope":2412,"src":"883:58:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2388,"nodeType":"Block","src":"1008:7:20","statements":[]},"id":2389,"implemented":true,"kind":"function","modifiers":[{"id":2386,"kind":"modifierInvocation","modifierName":{"id":2385,"name":"onlyInitializing","nameLocations":["991:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1455,"src":"991:16:20"},"nodeType":"ModifierInvocation","src":"991:16:20"}],"name":"__ERC165_init_unchained","nameLocation":"956:23:20","nodeType":"FunctionDefinition","parameters":{"id":2384,"nodeType":"ParameterList","parameters":[],"src":"979:2:20"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[],"src":"1008:0:20"},"scope":2412,"src":"947:68:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2423],"body":{"id":2405,"nodeType":"Block","src":"1172:75:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2398,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"1189:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2400,"name":"IERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"1209:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$2424_$","typeString":"type(contract IERC165Upgradeable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165Upgradeable_$2424_$","typeString":"type(contract IERC165Upgradeable)"}],"id":2399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1204:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1204:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165Upgradeable_$2424","typeString":"type(contract IERC165Upgradeable)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1229:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"1204:36:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1189:51:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2397,"id":2404,"nodeType":"Return","src":"1182:58:20"}]},"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"1020:56:20","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1090:17:20","nodeType":"FunctionDefinition","overrides":{"id":2394,"nodeType":"OverrideSpecifier","overrides":[],"src":"1148:8:20"},"parameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"interfaceId","nameLocation":"1115:11:20","nodeType":"VariableDeclaration","scope":2406,"src":"1108:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2391,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1108:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1107:20:20"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"1166:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2395,"name":"bool","nodeType":"ElementaryTypeName","src":"1166:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1165:6:20"},"scope":2412,"src":"1081:166:20","stateMutability":"view","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"1253:254:20","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2411,"mutability":"mutable","name":"__gap","nameLocation":"1532:5:20","nodeType":"VariableDeclaration","scope":2412,"src":"1512:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1512:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2410,"length":{"hexValue":"3530","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1512:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":2413,"src":"804:736:20","usedErrors":[]}],"src":"99:1442:20"},"id":20},"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[2424]},"id":2425,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2414,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"125:279:21","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2424,"linearizedBaseContracts":[2424],"name":"IERC165Upgradeable","nameLocation":"415:18:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"440:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2423,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:21","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:21","nodeType":"VariableDeclaration","scope":2423,"src":"812:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2417,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:21"},"returnParameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2423,"src":"855:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2420,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:21"},"scope":2424,"src":"785:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2425,"src":"405:458:21","usedErrors":[]}],"src":"100:764:21"},"id":21},"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[3290]},"id":3291,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2426,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"128:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3290,"linearizedBaseContracts":[3290],"name":"MathUpgradeable","nameLocation":"210:15:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":2431,"members":[{"id":2428,"name":"Down","nameLocation":"256:4:22","nodeType":"EnumValue","src":"256:4:22"},{"id":2429,"name":"Up","nameLocation":"298:2:22","nodeType":"EnumValue","src":"298:2:22"},{"id":2430,"name":"Zero","nameLocation":"329:4:22","nodeType":"EnumValue","src":"329:4:22"}],"name":"Rounding","nameLocation":"237:8:22","nodeType":"EnumDefinition","src":"232:122:22"},{"body":{"id":2448,"nodeType":"Block","src":"491:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"508:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"512:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"520:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:22","trueExpression":{"id":2444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"516:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2440,"id":2447,"nodeType":"Return","src":"501:20:22"}]},"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"360:59:22","text":" @dev Returns the largest of two numbers."},"id":2449,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:22","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"a","nameLocation":"445:1:22","nodeType":"VariableDeclaration","scope":2449,"src":"437:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"b","nameLocation":"456:1:22","nodeType":"VariableDeclaration","scope":2449,"src":"448:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:22"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2449,"src":"482:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:22"},"scope":3290,"src":"424:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"666:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"683:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2460,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"687:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2463,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"695:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:22","trueExpression":{"id":2462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"691:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2458,"id":2465,"nodeType":"Return","src":"676:20:22"}]},"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"534:60:22","text":" @dev Returns the smallest of two numbers."},"id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:22","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"a","nameLocation":"620:1:22","nodeType":"VariableDeclaration","scope":2467,"src":"612:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"b","nameLocation":"631:1:22","nodeType":"VariableDeclaration","scope":2467,"src":"623:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:22"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"657:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:22"},"scope":3290,"src":"599:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2489,"nodeType":"Block","src":"887:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"942:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2478,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"946:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"952:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2482,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"956:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2476,"id":2488,"nodeType":"Return","src":"934:28:22"}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"709:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:22","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"a","nameLocation":"841:1:22","nodeType":"VariableDeclaration","scope":2490,"src":"833:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"b","nameLocation":"852:1:22","nodeType":"VariableDeclaration","scope":2490,"src":"844:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:22"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"878:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:22"},"scope":3290,"src":"816:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2514,"nodeType":"Block","src":"1239:123:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1327:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"1341:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2508,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"1350:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:22","trueExpression":{"hexValue":"30","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2499,"id":2513,"nodeType":"Return","src":"1320:35:22"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"975:188:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2515,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:22","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"a","nameLocation":"1193:1:22","nodeType":"VariableDeclaration","scope":2515,"src":"1185:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"b","nameLocation":"1204:1:22","nodeType":"VariableDeclaration","scope":2515,"src":"1196:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:22"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2515,"src":"1230:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:22"},"scope":3290,"src":"1168:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2637,"nodeType":"Block","src":"1776:4115:22","statements":[{"id":2636,"nodeType":"UncheckedBlock","src":"1786:4099:22","statements":[{"assignments":[2528],"declarations":[{"constant":false,"id":2528,"mutability":"mutable","name":"prod0","nameLocation":"2115:5:22","nodeType":"VariableDeclaration","scope":2636,"src":"2107:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2529,"nodeType":"VariableDeclarationStatement","src":"2107:13:22"},{"assignments":[2531],"declarations":[{"constant":false,"id":2531,"mutability":"mutable","name":"prod1","nameLocation":"2187:5:22","nodeType":"VariableDeclaration","scope":2636,"src":"2179:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2532,"nodeType":"VariableDeclarationStatement","src":"2179:13:22"},{"AST":{"nodeType":"YulBlock","src":"2259:157:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2277:30:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2294:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2297:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2304:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2300:3:22"},"nodeType":"YulFunctionCall","src":"2300:6:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2287:6:22"},"nodeType":"YulFunctionCall","src":"2287:20:22"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2281:2:22","type":""}]},{"nodeType":"YulAssignment","src":"2324:18:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2337:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2340:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2333:3:22"},"nodeType":"YulFunctionCall","src":"2333:9:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2324:5:22"}]},{"nodeType":"YulAssignment","src":"2359:43:22","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2376:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2380:5:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2372:3:22"},"nodeType":"YulFunctionCall","src":"2372:14:22"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2391:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2395:5:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2388:2:22"},"nodeType":"YulFunctionCall","src":"2388:13:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2368:3:22"},"nodeType":"YulFunctionCall","src":"2368:34:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2359:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2528,"isOffset":false,"isSlot":false,"src":"2324:5:22","valueSize":1},{"declaration":2528,"isOffset":false,"isSlot":false,"src":"2380:5:22","valueSize":1},{"declaration":2528,"isOffset":false,"isSlot":false,"src":"2395:5:22","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"2359:5:22","valueSize":1},{"declaration":2518,"isOffset":false,"isSlot":false,"src":"2294:1:22","valueSize":1},{"declaration":2518,"isOffset":false,"isSlot":false,"src":"2337:1:22","valueSize":1},{"declaration":2520,"isOffset":false,"isSlot":false,"src":"2297:1:22","valueSize":1},{"declaration":2520,"isOffset":false,"isSlot":false,"src":"2340:1:22","valueSize":1}],"id":2533,"nodeType":"InlineAssembly","src":"2250:166:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"2497:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2542,"nodeType":"IfStatement","src":"2493:368:22","trueBody":{"id":2541,"nodeType":"Block","src":"2509:352:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2537,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2827:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2538,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2835:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2526,"id":2540,"nodeType":"Return","src":"2820:26:22"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2971:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2545,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"2985:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2971:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:23:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2963:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2549,"nodeType":"ExpressionStatement","src":"2963:53:22"},{"assignments":[2551],"declarations":[{"constant":false,"id":2551,"mutability":"mutable","name":"remainder","nameLocation":"3280:9:22","nodeType":"VariableDeclaration","scope":2636,"src":"3272:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2552,"nodeType":"VariableDeclarationStatement","src":"3272:17:22"},{"AST":{"nodeType":"YulBlock","src":"3312:291:22","statements":[{"nodeType":"YulAssignment","src":"3381:38:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3401:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"3404:1:22"},{"name":"denominator","nodeType":"YulIdentifier","src":"3407:11:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3394:6:22"},"nodeType":"YulFunctionCall","src":"3394:25:22"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3381:9:22"}]},{"nodeType":"YulAssignment","src":"3501:41:22","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3514:5:22"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3524:9:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"3535:5:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3521:2:22"},"nodeType":"YulFunctionCall","src":"3521:20:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3510:3:22"},"nodeType":"YulFunctionCall","src":"3510:32:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3501:5:22"}]},{"nodeType":"YulAssignment","src":"3559:30:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3572:5:22"},{"name":"remainder","nodeType":"YulIdentifier","src":"3579:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3568:3:22"},"nodeType":"YulFunctionCall","src":"3568:21:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3559:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2522,"isOffset":false,"isSlot":false,"src":"3407:11:22","valueSize":1},{"declaration":2528,"isOffset":false,"isSlot":false,"src":"3535:5:22","valueSize":1},{"declaration":2528,"isOffset":false,"isSlot":false,"src":"3559:5:22","valueSize":1},{"declaration":2528,"isOffset":false,"isSlot":false,"src":"3572:5:22","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"3501:5:22","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":false,"src":"3514:5:22","valueSize":1},{"declaration":2551,"isOffset":false,"isSlot":false,"src":"3381:9:22","valueSize":1},{"declaration":2551,"isOffset":false,"isSlot":false,"src":"3524:9:22","valueSize":1},{"declaration":2551,"isOffset":false,"isSlot":false,"src":"3579:9:22","valueSize":1},{"declaration":2518,"isOffset":false,"isSlot":false,"src":"3401:1:22","valueSize":1},{"declaration":2520,"isOffset":false,"isSlot":false,"src":"3404:1:22","valueSize":1}],"id":2553,"nodeType":"InlineAssembly","src":"3303:300:22"},{"assignments":[2555],"declarations":[{"constant":false,"id":2555,"mutability":"mutable","name":"twos","nameLocation":"3918:4:22","nodeType":"VariableDeclaration","scope":2636,"src":"3910:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3910:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2563,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"3925:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3940:12:22","subExpression":{"id":2557,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"3941:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3940:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3939:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3910:47:22"},{"AST":{"nodeType":"YulBlock","src":"3980:362:22","statements":[{"nodeType":"YulAssignment","src":"4045:37:22","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4064:11:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4077:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4060:3:22"},"nodeType":"YulFunctionCall","src":"4060:22:22"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4045:11:22"}]},{"nodeType":"YulAssignment","src":"4149:25:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4162:5:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4169:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4158:3:22"},"nodeType":"YulFunctionCall","src":"4158:16:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4149:5:22"}]},{"nodeType":"YulAssignment","src":"4289:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4309:1:22","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4312:4:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4305:3:22"},"nodeType":"YulFunctionCall","src":"4305:12:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4319:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4301:3:22"},"nodeType":"YulFunctionCall","src":"4301:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4326:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:22"},"nodeType":"YulFunctionCall","src":"4297:31:22"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4289:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2522,"isOffset":false,"isSlot":false,"src":"4045:11:22","valueSize":1},{"declaration":2522,"isOffset":false,"isSlot":false,"src":"4064:11:22","valueSize":1},{"declaration":2528,"isOffset":false,"isSlot":false,"src":"4149:5:22","valueSize":1},{"declaration":2528,"isOffset":false,"isSlot":false,"src":"4162:5:22","valueSize":1},{"declaration":2555,"isOffset":false,"isSlot":false,"src":"4077:4:22","valueSize":1},{"declaration":2555,"isOffset":false,"isSlot":false,"src":"4169:4:22","valueSize":1},{"declaration":2555,"isOffset":false,"isSlot":false,"src":"4289:4:22","valueSize":1},{"declaration":2555,"isOffset":false,"isSlot":false,"src":"4312:4:22","valueSize":1},{"declaration":2555,"isOffset":false,"isSlot":false,"src":"4319:4:22","valueSize":1}],"id":2564,"nodeType":"InlineAssembly","src":"3971:371:22"},{"expression":{"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2565,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4408:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2566,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"4417:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2567,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"4425:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4417:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2570,"nodeType":"ExpressionStatement","src":"4408:21:22"},{"assignments":[2572],"declarations":[{"constant":false,"id":2572,"mutability":"mutable","name":"inverse","nameLocation":"4755:7:22","nodeType":"VariableDeclaration","scope":2636,"src":"4747:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2579,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2574,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"4770:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4766:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4765:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4765:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4747:39:22"},{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2580,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5003:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2582,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"5018:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2583,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5032:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"5003:36:22"},{"expression":{"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2588,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5072:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"5087:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2591,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5101:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2595,"nodeType":"ExpressionStatement","src":"5072:36:22"},{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2596,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5142:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"5157:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2599,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5171:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2603,"nodeType":"ExpressionStatement","src":"5142:36:22"},{"expression":{"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2604,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5212:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"5227:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2607,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5241:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2611,"nodeType":"ExpressionStatement","src":"5212:36:22"},{"expression":{"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2612,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5282:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"5297:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2615,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5311:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5293:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2619,"nodeType":"ExpressionStatement","src":"5282:36:22"},{"expression":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2620,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5353:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"5368:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2623,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5382:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5368:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5364:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2627,"nodeType":"ExpressionStatement","src":"5353:36:22"},{"expression":{"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5823:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2629,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5832:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2630,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5840:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2633,"nodeType":"ExpressionStatement","src":"5823:24:22"},{"expression":{"id":2634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5868:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2526,"id":2635,"nodeType":"Return","src":"5861:13:22"}]}]},"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"1368:305:22","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2638,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:22","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"x","nameLocation":"1702:1:22","nodeType":"VariableDeclaration","scope":2638,"src":"1694:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"y","nameLocation":"1713:1:22","nodeType":"VariableDeclaration","scope":2638,"src":"1705:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"denominator","nameLocation":"1724:11:22","nodeType":"VariableDeclaration","scope":2638,"src":"1716:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:43:22"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"result","nameLocation":"1768:6:22","nodeType":"VariableDeclaration","scope":2638,"src":"1760:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:16:22"},"scope":3290,"src":"1678:4213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2681,"nodeType":"Block","src":"6133:189:22","statements":[{"assignments":[2654],"declarations":[{"constant":false,"id":2654,"mutability":"mutable","name":"result","nameLocation":"6151:6:22","nodeType":"VariableDeclaration","scope":2681,"src":"6143:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2660,"initialValue":{"arguments":[{"id":2656,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"6167:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2657,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"6170:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2658,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"6173:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2655,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2638,2682],"referencedDeclaration":2638,"src":"6160:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6143:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"6199:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2662,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"6211:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2431_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6220:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2429,"src":"6211:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"src":"6199:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2666,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"6233:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2667,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"6236:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2668,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"6239:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2665,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6226:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6254:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6226:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6199:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2678,"nodeType":"IfStatement","src":"6195:98:22","trueBody":{"id":2677,"nodeType":"Block","src":"6257:36:22","statements":[{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2673,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"6271:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6281:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6271:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"nodeType":"ExpressionStatement","src":"6271:11:22"}]}},{"expression":{"id":2679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"6309:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2652,"id":2680,"nodeType":"Return","src":"6302:13:22"}]},"documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"5897:121:22","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6032:6:22","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"x","nameLocation":"6047:1:22","nodeType":"VariableDeclaration","scope":2682,"src":"6039:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"y","nameLocation":"6058:1:22","nodeType":"VariableDeclaration","scope":2682,"src":"6050:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"denominator","nameLocation":"6069:11:22","nodeType":"VariableDeclaration","scope":2682,"src":"6061:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"6061:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"rounding","nameLocation":"6091:8:22","nodeType":"VariableDeclaration","scope":2682,"src":"6082:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2647,"nodeType":"UserDefinedTypeName","pathNode":{"id":2646,"name":"Rounding","nameLocations":["6082:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":2431,"src":"6082:8:22"},"referencedDeclaration":2431,"src":"6082:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"6038:62:22"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2682,"src":"6124:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6124:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6123:9:22"},"scope":3290,"src":"6023:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2793,"nodeType":"Block","src":"6598:1585:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6612:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6617:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6612:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2696,"nodeType":"IfStatement","src":"6608:45:22","trueBody":{"id":2695,"nodeType":"Block","src":"6620:33:22","statements":[{"expression":{"hexValue":"30","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2689,"id":2694,"nodeType":"Return","src":"6634:8:22"}]}},{"assignments":[2698],"declarations":[{"constant":false,"id":2698,"mutability":"mutable","name":"result","nameLocation":"7340:6:22","nodeType":"VariableDeclaration","scope":2793,"src":"7332:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2707,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7349:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"7360:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2700,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2962,2998],"referencedDeclaration":2962,"src":"7355:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7355:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7354:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7349:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:36:22"},{"id":2792,"nodeType":"UncheckedBlock","src":"7769:408:22","statements":[{"expression":{"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7793:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7803:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2710,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"7812:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7816:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2718,"nodeType":"ExpressionStatement","src":"7793:35:22"},{"expression":{"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7842:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7852:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"7861:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7865:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2729,"nodeType":"ExpressionStatement","src":"7842:35:22"},{"expression":{"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7891:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7901:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2732,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"7910:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7914:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7901:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7900:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7925:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7900:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7891:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2740,"nodeType":"ExpressionStatement","src":"7891:35:22"},{"expression":{"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7940:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7950:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"7959:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7963:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7950:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7949:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7949:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2751,"nodeType":"ExpressionStatement","src":"7940:35:22"},{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7989:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"7999:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"8008:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2755,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8012:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8008:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7998:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7998:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7989:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2762,"nodeType":"ExpressionStatement","src":"7989:35:22"},{"expression":{"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8038:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8048:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"8057:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8061:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8047:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8072:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8047:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8038:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2773,"nodeType":"ExpressionStatement","src":"8038:35:22"},{"expression":{"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8087:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8097:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"8106:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8110:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8106:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8096:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8121:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8096:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8087:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2784,"nodeType":"ExpressionStatement","src":"8087:35:22"},{"expression":{"arguments":[{"id":2786,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8147:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"8155:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8159:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8155:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2785,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"8143:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2689,"id":2791,"nodeType":"Return","src":"8136:30:22"}]}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"6328:208:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2794,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6550:4:22","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"a","nameLocation":"6563:1:22","nodeType":"VariableDeclaration","scope":2794,"src":"6555:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:11:22"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2794,"src":"6589:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2687,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6588:9:22"},"scope":3290,"src":"6541:1642:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"8359:161:22","statements":[{"id":2828,"nodeType":"UncheckedBlock","src":"8369:145:22","statements":[{"assignments":[2806],"declarations":[{"constant":false,"id":2806,"mutability":"mutable","name":"result","nameLocation":"8401:6:22","nodeType":"VariableDeclaration","scope":2828,"src":"8393:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"8393:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2810,"initialValue":{"arguments":[{"id":2808,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"8415:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2807,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2794,2830],"referencedDeclaration":2794,"src":"8410:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8393:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2811,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"8438:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2812,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"8448:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2813,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"8460:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2431_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8469:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2429,"src":"8460:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"src":"8448:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"8475:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"8484:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2819,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"8493:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8448:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8501:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8448:54:22","trueExpression":{"hexValue":"31","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8497:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8447:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8438:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2804,"id":2827,"nodeType":"Return","src":"8431:72:22"}]}]},"documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"8189:89:22","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8292:4:22","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"a","nameLocation":"8305:1:22","nodeType":"VariableDeclaration","scope":2830,"src":"8297:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2796,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"rounding","nameLocation":"8317:8:22","nodeType":"VariableDeclaration","scope":2830,"src":"8308:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2799,"nodeType":"UserDefinedTypeName","pathNode":{"id":2798,"name":"Rounding","nameLocations":["8308:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":2431,"src":"8308:8:22"},"referencedDeclaration":2431,"src":"8308:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8296:30:22"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"8350:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8349:9:22"},"scope":3290,"src":"8283:237:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2961,"nodeType":"Block","src":"8705:922:22","statements":[{"assignments":[2839],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"result","nameLocation":"8723:6:22","nodeType":"VariableDeclaration","scope":2961,"src":"8715:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2841,"initialValue":{"hexValue":"30","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8715:18:22"},{"id":2958,"nodeType":"UncheckedBlock","src":"8743:855:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"8771:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8771:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8771:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2856,"nodeType":"IfStatement","src":"8767:99:22","trueBody":{"id":2855,"nodeType":"Block","src":"8789:77:22","statements":[{"expression":{"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"8807:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8807:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2850,"nodeType":"ExpressionStatement","src":"8807:13:22"},{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"8838:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8838:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2854,"nodeType":"ExpressionStatement","src":"8838:13:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"8883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8892:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8883:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8883:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2871,"nodeType":"IfStatement","src":"8879:96:22","trueBody":{"id":2870,"nodeType":"Block","src":"8900:75:22","statements":[{"expression":{"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"8918:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8918:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2865,"nodeType":"ExpressionStatement","src":"8918:12:22"},{"expression":{"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"8948:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8948:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2869,"nodeType":"ExpressionStatement","src":"8948:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"8992:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8992:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2886,"nodeType":"IfStatement","src":"8988:96:22","trueBody":{"id":2885,"nodeType":"Block","src":"9009:75:22","statements":[{"expression":{"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9027:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9027:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2880,"nodeType":"ExpressionStatement","src":"9027:12:22"},{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2881,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9057:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9057:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2884,"nodeType":"ExpressionStatement","src":"9057:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9101:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9101:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9101:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2901,"nodeType":"IfStatement","src":"9097:96:22","trueBody":{"id":2900,"nodeType":"Block","src":"9118:75:22","statements":[{"expression":{"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9136:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9146:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9136:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2895,"nodeType":"ExpressionStatement","src":"9136:12:22"},{"expression":{"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9166:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9166:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2899,"nodeType":"ExpressionStatement","src":"9166:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9210:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9210:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2916,"nodeType":"IfStatement","src":"9206:93:22","trueBody":{"id":2915,"nodeType":"Block","src":"9226:73:22","statements":[{"expression":{"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9244:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9254:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9244:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2910,"nodeType":"ExpressionStatement","src":"9244:11:22"},{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9273:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9283:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9273:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2914,"nodeType":"ExpressionStatement","src":"9273:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9316:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9325:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9316:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9316:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2931,"nodeType":"IfStatement","src":"9312:93:22","trueBody":{"id":2930,"nodeType":"Block","src":"9332:73:22","statements":[{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9350:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9350:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ExpressionStatement","src":"9350:11:22"},{"expression":{"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9379:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9389:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9379:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2929,"nodeType":"ExpressionStatement","src":"9379:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9422:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9422:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9422:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2946,"nodeType":"IfStatement","src":"9418:93:22","trueBody":{"id":2945,"nodeType":"Block","src":"9438:73:22","statements":[{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9456:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ExpressionStatement","src":"9456:11:22"},{"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9485:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9485:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2944,"nodeType":"ExpressionStatement","src":"9485:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9528:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9528:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2957,"nodeType":"IfStatement","src":"9524:64:22","trueBody":{"id":2956,"nodeType":"Block","src":"9544:44:22","statements":[{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9562:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9572:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9562:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"nodeType":"ExpressionStatement","src":"9562:11:22"}]}}]},{"expression":{"id":2959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"9614:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2837,"id":2960,"nodeType":"Return","src":"9607:13:22"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"8526:113:22","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8653:4:22","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"value","nameLocation":"8666:5:22","nodeType":"VariableDeclaration","scope":2962,"src":"8658:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8657:15:22"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"8696:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8695:9:22"},"scope":3290,"src":"8644:983:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2997,"nodeType":"Block","src":"9860:165:22","statements":[{"id":2996,"nodeType":"UncheckedBlock","src":"9870:149:22","statements":[{"assignments":[2974],"declarations":[{"constant":false,"id":2974,"mutability":"mutable","name":"result","nameLocation":"9902:6:22","nodeType":"VariableDeclaration","scope":2996,"src":"9894:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2978,"initialValue":{"arguments":[{"id":2976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"9916:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2975,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2962,2998],"referencedDeclaration":2962,"src":"9911:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9911:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9894:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"9943:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"9953:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2981,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"9965:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2431_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9974:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2429,"src":"9965:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"src":"9953:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9980:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"9985:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"9994:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9953:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9953:54:22","trueExpression":{"hexValue":"31","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9952:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9943:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2972,"id":2995,"nodeType":"Return","src":"9936:72:22"}]}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"9633:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2998,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9789:4:22","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"value","nameLocation":"9802:5:22","nodeType":"VariableDeclaration","scope":2998,"src":"9794:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"rounding","nameLocation":"9818:8:22","nodeType":"VariableDeclaration","scope":2998,"src":"9809:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":2967,"nodeType":"UserDefinedTypeName","pathNode":{"id":2966,"name":"Rounding","nameLocations":["9809:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":2431,"src":"9809:8:22"},"referencedDeclaration":2431,"src":"9809:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9793:34:22"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2998,"src":"9851:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:9:22"},"scope":3290,"src":"9780:245:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3126,"nodeType":"Block","src":"10212:854:22","statements":[{"assignments":[3007],"declarations":[{"constant":false,"id":3007,"mutability":"mutable","name":"result","nameLocation":"10230:6:22","nodeType":"VariableDeclaration","scope":3126,"src":"10222:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3009,"initialValue":{"hexValue":"30","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10222:18:22"},{"id":3123,"nodeType":"UncheckedBlock","src":"10250:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10278:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10287:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10278:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3026,"nodeType":"IfStatement","src":"10274:103:22","trueBody":{"id":3025,"nodeType":"Block","src":"10297:80:22","statements":[{"expression":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10315:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10324:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10315:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3020,"nodeType":"ExpressionStatement","src":"10315:17:22"},{"expression":{"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"10350:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10350:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3024,"nodeType":"ExpressionStatement","src":"10350:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10394:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10409:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10403:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10394:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3043,"nodeType":"IfStatement","src":"10390:103:22","trueBody":{"id":3042,"nodeType":"Block","src":"10413:80:22","statements":[{"expression":{"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10431:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10440:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10431:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3037,"nodeType":"ExpressionStatement","src":"10431:17:22"},{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"10466:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10466:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3041,"nodeType":"ExpressionStatement","src":"10466:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10510:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10519:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10510:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3060,"nodeType":"IfStatement","src":"10506:103:22","trueBody":{"id":3059,"nodeType":"Block","src":"10529:80:22","statements":[{"expression":{"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10547:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10556:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10556:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10547:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3054,"nodeType":"ExpressionStatement","src":"10547:17:22"},{"expression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"10582:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10592:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10582:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3058,"nodeType":"ExpressionStatement","src":"10582:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10626:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10635:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10626:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3077,"nodeType":"IfStatement","src":"10622:100:22","trueBody":{"id":3076,"nodeType":"Block","src":"10644:78:22","statements":[{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10662:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10671:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10677:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10671:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10662:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3071,"nodeType":"ExpressionStatement","src":"10662:16:22"},{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"10696:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10696:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"10696:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10739:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10754:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10748:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10739:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3094,"nodeType":"IfStatement","src":"10735:100:22","trueBody":{"id":3093,"nodeType":"Block","src":"10757:78:22","statements":[{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10775:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10784:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10775:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3088,"nodeType":"ExpressionStatement","src":"10775:16:22"},{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"10809:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10809:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"10809:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10861:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10861:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10852:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3111,"nodeType":"IfStatement","src":"10848:100:22","trueBody":{"id":3110,"nodeType":"Block","src":"10870:78:22","statements":[{"expression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10897:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10888:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3105,"nodeType":"ExpressionStatement","src":"10888:16:22"},{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"10922:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10932:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10922:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"nodeType":"ExpressionStatement","src":"10922:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10965:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10974:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10974:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10965:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"nodeType":"IfStatement","src":"10961:66:22","trueBody":{"id":3121,"nodeType":"Block","src":"10983:44:22","statements":[{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"11001:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11001:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3120,"nodeType":"ExpressionStatement","src":"11001:11:22"}]}}]},{"expression":{"id":3124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"11053:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3005,"id":3125,"nodeType":"Return","src":"11046:13:22"}]},"documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"10031:114:22","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3127,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10159:5:22","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"value","nameLocation":"10173:5:22","nodeType":"VariableDeclaration","scope":3127,"src":"10165:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10164:15:22"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"10203:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"10203:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10202:9:22"},"scope":3290,"src":"10150:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3162,"nodeType":"Block","src":"11301:167:22","statements":[{"id":3161,"nodeType":"UncheckedBlock","src":"11311:151:22","statements":[{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"result","nameLocation":"11343:6:22","nodeType":"VariableDeclaration","scope":3161,"src":"11335:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3143,"initialValue":{"arguments":[{"id":3141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"11358:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3140,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3127,3163],"referencedDeclaration":3127,"src":"11352:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11335:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"11385:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3145,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"11395:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3146,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"11407:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2431_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11416:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2429,"src":"11407:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"src":"11395:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3150,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"11428:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"11437:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11395:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11395:55:22","trueExpression":{"hexValue":"31","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11394:57:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11385:66:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3137,"id":3160,"nodeType":"Return","src":"11378:73:22"}]}]},"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"11072:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11229:5:22","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"value","nameLocation":"11243:5:22","nodeType":"VariableDeclaration","scope":3163,"src":"11235:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3129,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"rounding","nameLocation":"11259:8:22","nodeType":"VariableDeclaration","scope":3163,"src":"11250:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3132,"nodeType":"UserDefinedTypeName","pathNode":{"id":3131,"name":"Rounding","nameLocations":["11250:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":2431,"src":"11250:8:22"},"referencedDeclaration":2431,"src":"11250:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"11234:34:22"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3163,"src":"11292:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11291:9:22"},"scope":3290,"src":"11220:248:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3249,"nodeType":"Block","src":"11782:600:22","statements":[{"assignments":[3172],"declarations":[{"constant":false,"id":3172,"mutability":"mutable","name":"result","nameLocation":"11800:6:22","nodeType":"VariableDeclaration","scope":3249,"src":"11792:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3174,"initialValue":{"hexValue":"30","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11792:18:22"},{"id":3246,"nodeType":"UncheckedBlock","src":"11820:533:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"11848:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11848:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11863:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11848:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3189,"nodeType":"IfStatement","src":"11844:98:22","trueBody":{"id":3188,"nodeType":"Block","src":"11866:76:22","statements":[{"expression":{"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"11884:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11884:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3183,"nodeType":"ExpressionStatement","src":"11884:13:22"},{"expression":{"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"11915:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11915:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3187,"nodeType":"ExpressionStatement","src":"11915:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"11959:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11959:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11959:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3204,"nodeType":"IfStatement","src":"11955:95:22","trueBody":{"id":3203,"nodeType":"Block","src":"11976:74:22","statements":[{"expression":{"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"11994:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12004:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11994:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3198,"nodeType":"ExpressionStatement","src":"11994:12:22"},{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"12024:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12034:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12024:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3202,"nodeType":"ExpressionStatement","src":"12024:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"12067:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12067:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12081:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3219,"nodeType":"IfStatement","src":"12063:95:22","trueBody":{"id":3218,"nodeType":"Block","src":"12084:74:22","statements":[{"expression":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"12102:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12102:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3213,"nodeType":"ExpressionStatement","src":"12102:12:22"},{"expression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"12132:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12142:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12132:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3217,"nodeType":"ExpressionStatement","src":"12132:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"12175:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12175:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12175:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3234,"nodeType":"IfStatement","src":"12171:95:22","trueBody":{"id":3233,"nodeType":"Block","src":"12192:74:22","statements":[{"expression":{"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"12210:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12220:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12210:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3228,"nodeType":"ExpressionStatement","src":"12210:12:22"},{"expression":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"12240:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12250:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12240:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3232,"nodeType":"ExpressionStatement","src":"12240:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"12283:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12283:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3245,"nodeType":"IfStatement","src":"12279:64:22","trueBody":{"id":3244,"nodeType":"Block","src":"12299:44:22","statements":[{"expression":{"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"12317:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12327:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12317:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3243,"nodeType":"ExpressionStatement","src":"12317:11:22"}]}}]},{"expression":{"id":3247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3172,"src":"12369:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3170,"id":3248,"nodeType":"Return","src":"12362:13:22"}]},"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"11474:240:22","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3250,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11728:6:22","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"value","nameLocation":"11743:5:22","nodeType":"VariableDeclaration","scope":3250,"src":"11735:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"11735:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11734:15:22"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3250,"src":"11773:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11772:9:22"},"scope":3290,"src":"11719:663:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3288,"nodeType":"Block","src":"12619:174:22","statements":[{"id":3287,"nodeType":"UncheckedBlock","src":"12629:158:22","statements":[{"assignments":[3262],"declarations":[{"constant":false,"id":3262,"mutability":"mutable","name":"result","nameLocation":"12661:6:22","nodeType":"VariableDeclaration","scope":3287,"src":"12653:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"12653:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3266,"initialValue":{"arguments":[{"id":3264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"12677:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3263,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3250,3289],"referencedDeclaration":3250,"src":"12670:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12670:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12653:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"12704:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3268,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"12714:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3269,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"12726:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2431_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12735:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2429,"src":"12726:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"src":"12714:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"12747:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12747:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12746:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"12762:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12714:53:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12714:61:22","trueExpression":{"hexValue":"31","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12713:63:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12704:72:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3260,"id":3286,"nodeType":"Return","src":"12697:79:22"}]}]},"documentation":{"id":3251,"nodeType":"StructuredDocumentation","src":"12388:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3289,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12546:6:22","nodeType":"FunctionDefinition","parameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"value","nameLocation":"12561:5:22","nodeType":"VariableDeclaration","scope":3289,"src":"12553:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"rounding","nameLocation":"12577:8:22","nodeType":"VariableDeclaration","scope":3289,"src":"12568:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3255,"nodeType":"UserDefinedTypeName","pathNode":{"id":3254,"name":"Rounding","nameLocations":["12568:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":2431,"src":"12568:8:22"},"referencedDeclaration":2431,"src":"12568:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2431","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12552:34:22"},"returnParameters":{"id":3260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3289,"src":"12610:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12609:9:22"},"scope":3290,"src":"12537:256:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3291,"src":"202:12593:22","usedErrors":[]}],"src":"103:12693:22"},"id":22},"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol","exportedSymbols":{"SignedMathUpgradeable":[3395]},"id":3396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3292,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"134:80:23","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3395,"linearizedBaseContracts":[3395],"name":"SignedMathUpgradeable","nameLocation":"223:21:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":3310,"nodeType":"Block","src":"386:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"403:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3304,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"407:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"403:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3307,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"415:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"403:13:23","trueExpression":{"id":3306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"411:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3302,"id":3309,"nodeType":"Return","src":"396:20:23"}]},"documentation":{"id":3294,"nodeType":"StructuredDocumentation","src":"251:66:23","text":" @dev Returns the largest of two signed numbers."},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"331:3:23","nodeType":"FunctionDefinition","parameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"a","nameLocation":"342:1:23","nodeType":"VariableDeclaration","scope":3311,"src":"335:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3295,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"b","nameLocation":"352:1:23","nodeType":"VariableDeclaration","scope":3311,"src":"345:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3297,"name":"int256","nodeType":"ElementaryTypeName","src":"345:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"334:20:23"},"returnParameters":{"id":3302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"378:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3300,"name":"int256","nodeType":"ElementaryTypeName","src":"378:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"377:8:23"},"scope":3395,"src":"322:101:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3328,"nodeType":"Block","src":"565:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"582:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3322,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"586:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"582:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"594:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"582:13:23","trueExpression":{"id":3324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"590:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3320,"id":3327,"nodeType":"Return","src":"575:20:23"}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"429:67:23","text":" @dev Returns the smallest of two signed numbers."},"id":3329,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"510:3:23","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"a","nameLocation":"521:1:23","nodeType":"VariableDeclaration","scope":3329,"src":"514:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3313,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"b","nameLocation":"531:1:23","nodeType":"VariableDeclaration","scope":3329,"src":"524:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3315,"name":"int256","nodeType":"ElementaryTypeName","src":"524:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"513:20:23"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3329,"src":"557:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3318,"name":"int256","nodeType":"ElementaryTypeName","src":"557:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"556:8:23"},"scope":3395,"src":"501:101:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"807:162:23","statements":[{"assignments":[3340],"declarations":[{"constant":false,"id":3340,"mutability":"mutable","name":"x","nameLocation":"876:1:23","nodeType":"VariableDeclaration","scope":3372,"src":"869:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3339,"name":"int256","nodeType":"ElementaryTypeName","src":"869:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3353,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"881:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3342,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"885:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"892:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3346,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"896:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"892:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"891:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"890:14:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"880:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"869:35:23"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"921:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3359,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"941:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"933:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:23","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"933:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"933:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3355,"name":"int256","nodeType":"ElementaryTypeName","src":"926:6:23","typeDescriptions":{}}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"955:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3365,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"959:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"955:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"954:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"926:35:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"925:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"921:41:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3338,"id":3371,"nodeType":"Return","src":"914:48:23"}]},"documentation":{"id":3330,"nodeType":"StructuredDocumentation","src":"608:126:23","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"748:7:23","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"a","nameLocation":"763:1:23","nodeType":"VariableDeclaration","scope":3373,"src":"756:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3331,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"b","nameLocation":"773:1:23","nodeType":"VariableDeclaration","scope":3373,"src":"766:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3333,"name":"int256","nodeType":"ElementaryTypeName","src":"766:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:20:23"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3373,"src":"799:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3336,"name":"int256","nodeType":"ElementaryTypeName","src":"799:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"798:8:23"},"scope":3395,"src":"739:230:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3393,"nodeType":"Block","src":"1113:158:23","statements":[{"id":3392,"nodeType":"UncheckedBlock","src":"1123:142:23","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"1238:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1238:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1251:2:23","subExpression":{"id":3387,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"1252:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1238:15:23","trueExpression":{"id":3386,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"1247:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1230:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:23","typeDescriptions":{}}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3380,"id":3391,"nodeType":"Return","src":"1223:31:23"}]}]},"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"975:78:23","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1067:3:23","nodeType":"FunctionDefinition","parameters":{"id":3377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"n","nameLocation":"1078:1:23","nodeType":"VariableDeclaration","scope":3394,"src":"1071:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3375,"name":"int256","nodeType":"ElementaryTypeName","src":"1071:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1070:10:23"},"returnParameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3394,"src":"1104:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:9:23"},"scope":3395,"src":"1058:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3396,"src":"215:1058:23","usedErrors":[]}],"src":"109:1165:23"},"id":23},"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[4008]},"id":4009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3397,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"230:1098:24","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":4008,"linearizedBaseContracts":[4008],"name":"EnumerableSetUpgradeable","nameLocation":"1337:24:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":3406,"members":[{"constant":false,"id":3401,"mutability":"mutable","name":"_values","nameLocation":"1872:7:24","nodeType":"VariableDeclaration","scope":3406,"src":"1862:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1862:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3400,"nodeType":"ArrayTypeName","src":"1862:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"_indexes","nameLocation":"2040:8:24","nodeType":"VariableDeclaration","scope":3406,"src":"2012:36:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3404,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2020:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2012:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1815:3:24","nodeType":"StructDefinition","scope":4008,"src":"1808:247:24","visibility":"public"},{"body":{"id":3447,"nodeType":"Block","src":"2294:335:24","statements":[{"condition":{"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2308:22:24","subExpression":{"arguments":[{"id":3418,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"2319:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":3419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"2324:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3417,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"2309:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3445,"nodeType":"Block","src":"2586:37:24","statements":[{"expression":{"hexValue":"66616c7365","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2607:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3416,"id":3444,"nodeType":"Return","src":"2600:12:24"}]},"id":3446,"nodeType":"IfStatement","src":"2304:319:24","trueBody":{"id":3442,"nodeType":"Block","src":"2332:248:24","statements":[{"expression":{"arguments":[{"id":3427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"2363:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3422,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"2346:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"2346:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:4:24","memberName":"push","nodeType":"MemberAccess","src":"2346:16:24","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3429,"nodeType":"ExpressionStatement","src":"2346:23:24"},{"expression":{"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3430,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"2504:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2508:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3405,"src":"2504:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3434,"indexExpression":{"id":3432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"2517:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2504:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3435,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"2526:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2530:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"2526:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2538:6:24","memberName":"length","nodeType":"MemberAccess","src":"2526:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2504:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3439,"nodeType":"ExpressionStatement","src":"2504:40:24"},{"expression":{"hexValue":"74727565","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2565:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3416,"id":3441,"nodeType":"Return","src":"2558:11:24"}]}}]},"documentation":{"id":3407,"nodeType":"StructuredDocumentation","src":"2061:159:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3448,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2234:4:24","nodeType":"FunctionDefinition","parameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"set","nameLocation":"2251:3:24","nodeType":"VariableDeclaration","scope":3448,"src":"2239:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3409,"nodeType":"UserDefinedTypeName","pathNode":{"id":3408,"name":"Set","nameLocations":["2239:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3406,"src":"2239:3:24"},"referencedDeclaration":3406,"src":"2239:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":3412,"mutability":"mutable","name":"value","nameLocation":"2264:5:24","nodeType":"VariableDeclaration","scope":3448,"src":"2256:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2256:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2238:32:24"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3448,"src":"2288:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3414,"name":"bool","nodeType":"ElementaryTypeName","src":"2288:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2287:6:24"},"scope":4008,"src":"2225:404:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3531,"nodeType":"Block","src":"2869:1316:24","statements":[{"assignments":[3460],"declarations":[{"constant":false,"id":3460,"mutability":"mutable","name":"valueIndex","nameLocation":"2987:10:24","nodeType":"VariableDeclaration","scope":3531,"src":"2979:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3459,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3465,"initialValue":{"baseExpression":{"expression":{"id":3461,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3000:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3004:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3405,"src":"3000:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3464,"indexExpression":{"id":3463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"3013:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2979:40:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"3034:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3048:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3034:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3529,"nodeType":"Block","src":"4142:37:24","statements":[{"expression":{"hexValue":"66616c7365","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4163:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3458,"id":3528,"nodeType":"Return","src":"4156:12:24"}]},"id":3530,"nodeType":"IfStatement","src":"3030:1149:24","trueBody":{"id":3526,"nodeType":"Block","src":"3051:1085:24","statements":[{"assignments":[3470],"declarations":[{"constant":false,"id":3470,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3411:13:24","nodeType":"VariableDeclaration","scope":3526,"src":"3403:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"3403:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3474,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3471,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"3427:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3427:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3403:38:24"},{"assignments":[3476],"declarations":[{"constant":false,"id":3476,"mutability":"mutable","name":"lastIndex","nameLocation":"3463:9:24","nodeType":"VariableDeclaration","scope":3526,"src":"3455:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3482,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3477,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3475:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3479:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"3475:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3487:6:24","memberName":"length","nodeType":"MemberAccess","src":"3475:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3496:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3475:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3455:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"3516:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3484,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"3529:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3516:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3510,"nodeType":"IfStatement","src":"3512:398:24","trueBody":{"id":3509,"nodeType":"Block","src":"3544:366:24","statements":[{"assignments":[3487],"declarations":[{"constant":false,"id":3487,"mutability":"mutable","name":"lastValue","nameLocation":"3570:9:24","nodeType":"VariableDeclaration","scope":3509,"src":"3562:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3562:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3492,"initialValue":{"baseExpression":{"expression":{"id":3488,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3582:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3586:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"3582:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3491,"indexExpression":{"id":3490,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"3594:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3582:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3562:42:24"},{"expression":{"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3493,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3704:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3708:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"3704:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3497,"indexExpression":{"id":3495,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"3716:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:26:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3498,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"3733:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3704:38:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3500,"nodeType":"ExpressionStatement","src":"3704:38:24"},{"expression":{"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3501,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3816:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3820:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3405,"src":"3816:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3505,"indexExpression":{"id":3503,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"3829:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3816:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3506,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"3842:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3816:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3508,"nodeType":"ExpressionStatement","src":"3816:36:24"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3511,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"3988:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3992:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"3988:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4000:3:24","memberName":"pop","nodeType":"MemberAccess","src":"3988:15:24","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3517,"nodeType":"ExpressionStatement","src":"3988:17:24"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4073:26:24","subExpression":{"baseExpression":{"expression":{"id":3518,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"4080:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4084:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3405,"src":"4080:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3521,"indexExpression":{"id":3520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"4093:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3523,"nodeType":"ExpressionStatement","src":"4073:26:24"},{"expression":{"hexValue":"74727565","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3458,"id":3525,"nodeType":"Return","src":"4114:11:24"}]}}]},"documentation":{"id":3449,"nodeType":"StructuredDocumentation","src":"2635:157:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3532,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2806:7:24","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"set","nameLocation":"2826:3:24","nodeType":"VariableDeclaration","scope":3532,"src":"2814:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3451,"nodeType":"UserDefinedTypeName","pathNode":{"id":3450,"name":"Set","nameLocations":["2814:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3406,"src":"2814:3:24"},"referencedDeclaration":3406,"src":"2814:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"value","nameLocation":"2839:5:24","nodeType":"VariableDeclaration","scope":3532,"src":"2831:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2831:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2813:32:24"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3532,"src":"2863:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3456,"name":"bool","nodeType":"ElementaryTypeName","src":"2863:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2862:6:24"},"scope":4008,"src":"2797:1388:24","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3550,"nodeType":"Block","src":"4345:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3543,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"4362:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4366:8:24","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3405,"src":"4362:12:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3546,"indexExpression":{"id":3545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"4375:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4362:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3542,"id":3549,"nodeType":"Return","src":"4355:31:24"}]},"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"4191:70:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3551,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4275:9:24","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"set","nameLocation":"4297:3:24","nodeType":"VariableDeclaration","scope":3551,"src":"4285:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3535,"nodeType":"UserDefinedTypeName","pathNode":{"id":3534,"name":"Set","nameLocations":["4285:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3406,"src":"4285:3:24"},"referencedDeclaration":3406,"src":"4285:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":3538,"mutability":"mutable","name":"value","nameLocation":"4310:5:24","nodeType":"VariableDeclaration","scope":3551,"src":"4302:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4284:32:24"},"returnParameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3551,"src":"4339:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3540,"name":"bool","nodeType":"ElementaryTypeName","src":"4339:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4338:6:24"},"scope":4008,"src":"4266:127:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3564,"nodeType":"Block","src":"4539:42:24","statements":[{"expression":{"expression":{"expression":{"id":3560,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"4556:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"4556:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:24","memberName":"length","nodeType":"MemberAccess","src":"4556:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3559,"id":3563,"nodeType":"Return","src":"4549:25:24"}]},"documentation":{"id":3552,"nodeType":"StructuredDocumentation","src":"4399:70:24","text":" @dev Returns the number of values on the set. O(1)."},"id":3565,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:24","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"set","nameLocation":"4503:3:24","nodeType":"VariableDeclaration","scope":3565,"src":"4491:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3554,"nodeType":"UserDefinedTypeName","pathNode":{"id":3553,"name":"Set","nameLocations":["4491:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3406,"src":"4491:3:24"},"referencedDeclaration":3406,"src":"4491:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4490:17:24"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3565,"src":"4530:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:24"},"scope":4008,"src":"4474:107:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3581,"nodeType":"Block","src":"4999:42:24","statements":[{"expression":{"baseExpression":{"expression":{"id":3576,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"5016:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"5016:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3579,"indexExpression":{"id":3578,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"5028:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3575,"id":3580,"nodeType":"Return","src":"5009:25:24"}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"4587:331:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3582,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:24","nodeType":"FunctionDefinition","parameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"set","nameLocation":"4948:3:24","nodeType":"VariableDeclaration","scope":3582,"src":"4936:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3568,"nodeType":"UserDefinedTypeName","pathNode":{"id":3567,"name":"Set","nameLocations":["4936:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3406,"src":"4936:3:24"},"referencedDeclaration":3406,"src":"4936:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"index","nameLocation":"4961:5:24","nodeType":"VariableDeclaration","scope":3582,"src":"4953:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:24"},"returnParameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3582,"src":"4990:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:24"},"scope":4008,"src":"4923:118:24","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3595,"nodeType":"Block","src":"5655:35:24","statements":[{"expression":{"expression":{"id":3592,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"5672:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":3593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:24","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"5672:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3591,"id":3594,"nodeType":"Return","src":"5665:18:24"}]},"documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"5047:529:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3596,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:24","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"set","nameLocation":"5610:3:24","nodeType":"VariableDeclaration","scope":3596,"src":"5598:15:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3585,"nodeType":"UserDefinedTypeName","pathNode":{"id":3584,"name":"Set","nameLocations":["5598:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3406,"src":"5598:3:24"},"referencedDeclaration":3406,"src":"5598:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5597:17:24"},"returnParameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3596,"src":"5637:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3589,"nodeType":"ArrayTypeName","src":"5637:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:24"},"scope":4008,"src":"5581:109:24","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":3600,"members":[{"constant":false,"id":3599,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:24","nodeType":"VariableDeclaration","scope":3600,"src":"5743:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3598,"nodeType":"UserDefinedTypeName","pathNode":{"id":3597,"name":"Set","nameLocations":["5743:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3406,"src":"5743:3:24"},"referencedDeclaration":3406,"src":"5743:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:24","nodeType":"StructDefinition","scope":4008,"src":"5715:45:24","visibility":"public"},{"body":{"id":3617,"nodeType":"Block","src":"6006:47:24","statements":[{"expression":{"arguments":[{"expression":{"id":3612,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"6028:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"6028:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"6040:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3611,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"6023:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3610,"id":3616,"nodeType":"Return","src":"6016:30:24"}]},"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"5766:159:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3618,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:24","nodeType":"FunctionDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"set","nameLocation":"5962:3:24","nodeType":"VariableDeclaration","scope":3618,"src":"5943:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3603,"nodeType":"UserDefinedTypeName","pathNode":{"id":3602,"name":"Bytes32Set","nameLocations":["5943:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3600,"src":"5943:10:24"},"referencedDeclaration":3600,"src":"5943:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"value","nameLocation":"5975:5:24","nodeType":"VariableDeclaration","scope":3618,"src":"5967:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:24"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3618,"src":"6000:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3608,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:24"},"scope":4008,"src":"5930:123:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3635,"nodeType":"Block","src":"6300:50:24","statements":[{"expression":{"arguments":[{"expression":{"id":3630,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"6325:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"6325:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"6337:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3629,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"6317:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3628,"id":3634,"nodeType":"Return","src":"6310:33:24"}]},"documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"6059:157:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3636,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:24","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"set","nameLocation":"6256:3:24","nodeType":"VariableDeclaration","scope":3636,"src":"6237:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3621,"nodeType":"UserDefinedTypeName","pathNode":{"id":3620,"name":"Bytes32Set","nameLocations":["6237:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3600,"src":"6237:10:24"},"referencedDeclaration":3600,"src":"6237:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"value","nameLocation":"6269:5:24","nodeType":"VariableDeclaration","scope":3636,"src":"6261:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:24"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3636,"src":"6294:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3626,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:24"},"scope":4008,"src":"6221:129:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3653,"nodeType":"Block","src":"6517:52:24","statements":[{"expression":{"arguments":[{"expression":{"id":3648,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"6544:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"6544:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"6556:5:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3647,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"6534:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3646,"id":3652,"nodeType":"Return","src":"6527:35:24"}]},"documentation":{"id":3637,"nodeType":"StructuredDocumentation","src":"6356:70:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:24","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"set","nameLocation":"6468:3:24","nodeType":"VariableDeclaration","scope":3654,"src":"6449:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3639,"nodeType":"UserDefinedTypeName","pathNode":{"id":3638,"name":"Bytes32Set","nameLocations":["6449:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3600,"src":"6449:10:24"},"referencedDeclaration":3600,"src":"6449:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"value","nameLocation":"6481:5:24","nodeType":"VariableDeclaration","scope":3654,"src":"6473:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3641,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:24"},"returnParameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3654,"src":"6511:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3644,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:24"},"scope":4008,"src":"6431:138:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3668,"nodeType":"Block","src":"6722:43:24","statements":[{"expression":{"arguments":[{"expression":{"id":3664,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"6747:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"6747:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3663,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"6739:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3662,"id":3667,"nodeType":"Return","src":"6732:26:24"}]},"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"6575:70:24","text":" @dev Returns the number of values in the set. O(1)."},"id":3669,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:24","nodeType":"FunctionDefinition","parameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"set","nameLocation":"6685:3:24","nodeType":"VariableDeclaration","scope":3669,"src":"6666:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3657,"nodeType":"UserDefinedTypeName","pathNode":{"id":3656,"name":"Bytes32Set","nameLocations":["6666:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3600,"src":"6666:10:24"},"referencedDeclaration":3600,"src":"6666:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:24"},"returnParameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3669,"src":"6713:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:24"},"scope":4008,"src":"6650:115:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3686,"nodeType":"Block","src":"7190:46:24","statements":[{"expression":{"arguments":[{"expression":{"id":3681,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"7211:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"7211:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3683,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"7223:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3680,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"7207:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3679,"id":3685,"nodeType":"Return","src":"7200:29:24"}]},"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"6771:331:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3687,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:24","nodeType":"FunctionDefinition","parameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"set","nameLocation":"7138:3:24","nodeType":"VariableDeclaration","scope":3687,"src":"7119:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3672,"nodeType":"UserDefinedTypeName","pathNode":{"id":3671,"name":"Bytes32Set","nameLocations":["7119:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3600,"src":"7119:10:24"},"referencedDeclaration":3600,"src":"7119:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"index","nameLocation":"7151:5:24","nodeType":"VariableDeclaration","scope":3687,"src":"7143:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:24"},"returnParameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3687,"src":"7181:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:24"},"scope":4008,"src":"7107:129:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3716,"nodeType":"Block","src":"7857:219:24","statements":[{"assignments":[3701],"declarations":[{"constant":false,"id":3701,"mutability":"mutable","name":"store","nameLocation":"7884:5:24","nodeType":"VariableDeclaration","scope":3716,"src":"7867:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3700,"nodeType":"ArrayTypeName","src":"7867:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3706,"initialValue":{"arguments":[{"expression":{"id":3703,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"7900:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":3704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3599,"src":"7900:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3702,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"7892:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:24"},{"assignments":[3711],"declarations":[{"constant":false,"id":3711,"mutability":"mutable","name":"result","nameLocation":"7938:6:24","nodeType":"VariableDeclaration","scope":3716,"src":"7921:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3710,"nodeType":"ArrayTypeName","src":"7921:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3712,"nodeType":"VariableDeclarationStatement","src":"7921:23:24"},{"AST":{"nodeType":"YulBlock","src":"8007:39:24","statements":[{"nodeType":"YulAssignment","src":"8021:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"8031:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8021:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3711,"isOffset":false,"isSlot":false,"src":"8021:6:24","valueSize":1},{"declaration":3701,"isOffset":false,"isSlot":false,"src":"8031:5:24","valueSize":1}],"id":3713,"nodeType":"InlineAssembly","src":"7998:48:24"},{"expression":{"id":3714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"8063:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3696,"id":3715,"nodeType":"Return","src":"8056:13:24"}]},"documentation":{"id":3688,"nodeType":"StructuredDocumentation","src":"7242:529:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:24","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"set","nameLocation":"7811:3:24","nodeType":"VariableDeclaration","scope":3717,"src":"7792:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":3690,"nodeType":"UserDefinedTypeName","pathNode":{"id":3689,"name":"Bytes32Set","nameLocations":["7792:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3600,"src":"7792:10:24"},"referencedDeclaration":3600,"src":"7792:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3600_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:24"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3717,"src":"7839:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3694,"nodeType":"ArrayTypeName","src":"7839:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:24"},"scope":4008,"src":"7776:300:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":3721,"members":[{"constant":false,"id":3720,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:24","nodeType":"VariableDeclaration","scope":3721,"src":"8129:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3719,"nodeType":"UserDefinedTypeName","pathNode":{"id":3718,"name":"Set","nameLocations":["8129:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3406,"src":"8129:3:24"},"referencedDeclaration":3406,"src":"8129:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:24","nodeType":"StructDefinition","scope":4008,"src":"8101:45:24","visibility":"public"},{"body":{"id":3747,"nodeType":"Block","src":"8392:74:24","statements":[{"expression":{"arguments":[{"expression":{"id":3733,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"8414:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3720,"src":"8414:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"8450:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3739,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:24","typeDescriptions":{}}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:24","typeDescriptions":{}}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:24","typeDescriptions":{}}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3732,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"8409:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3731,"id":3746,"nodeType":"Return","src":"8402:57:24"}]},"documentation":{"id":3722,"nodeType":"StructuredDocumentation","src":"8152:159:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3748,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:24","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"set","nameLocation":"8348:3:24","nodeType":"VariableDeclaration","scope":3748,"src":"8329:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3724,"nodeType":"UserDefinedTypeName","pathNode":{"id":3723,"name":"AddressSet","nameLocations":["8329:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3721,"src":"8329:10:24"},"referencedDeclaration":3721,"src":"8329:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"value","nameLocation":"8361:5:24","nodeType":"VariableDeclaration","scope":3748,"src":"8353:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3726,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:24"},"returnParameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3748,"src":"8386:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3729,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:24"},"scope":4008,"src":"8316:150:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3774,"nodeType":"Block","src":"8713:77:24","statements":[{"expression":{"arguments":[{"expression":{"id":3760,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"8738:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3720,"src":"8738:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"8774:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3766,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:24","typeDescriptions":{}}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:24","typeDescriptions":{}}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:24","typeDescriptions":{}}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3759,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"8730:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3758,"id":3773,"nodeType":"Return","src":"8723:60:24"}]},"documentation":{"id":3749,"nodeType":"StructuredDocumentation","src":"8472:157:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3775,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:24","nodeType":"FunctionDefinition","parameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"set","nameLocation":"8669:3:24","nodeType":"VariableDeclaration","scope":3775,"src":"8650:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3751,"nodeType":"UserDefinedTypeName","pathNode":{"id":3750,"name":"AddressSet","nameLocations":["8650:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3721,"src":"8650:10:24"},"referencedDeclaration":3721,"src":"8650:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3754,"mutability":"mutable","name":"value","nameLocation":"8682:5:24","nodeType":"VariableDeclaration","scope":3775,"src":"8674:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3753,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:24"},"returnParameters":{"id":3758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3775,"src":"8707:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3756,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:24"},"scope":4008,"src":"8634:156:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"8957:79:24","statements":[{"expression":{"arguments":[{"expression":{"id":3787,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"8984:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3720,"src":"8984:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"9020:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3793,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:24","typeDescriptions":{}}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:24","typeDescriptions":{}}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:24","typeDescriptions":{}}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3786,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"8974:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3785,"id":3800,"nodeType":"Return","src":"8967:62:24"}]},"documentation":{"id":3776,"nodeType":"StructuredDocumentation","src":"8796:70:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:24","nodeType":"FunctionDefinition","parameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"set","nameLocation":"8908:3:24","nodeType":"VariableDeclaration","scope":3802,"src":"8889:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3778,"nodeType":"UserDefinedTypeName","pathNode":{"id":3777,"name":"AddressSet","nameLocations":["8889:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3721,"src":"8889:10:24"},"referencedDeclaration":3721,"src":"8889:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3781,"mutability":"mutable","name":"value","nameLocation":"8921:5:24","nodeType":"VariableDeclaration","scope":3802,"src":"8913:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3780,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:24"},"returnParameters":{"id":3785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3802,"src":"8951:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3783,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:24"},"scope":4008,"src":"8871:165:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3816,"nodeType":"Block","src":"9189:43:24","statements":[{"expression":{"arguments":[{"expression":{"id":3812,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"9214:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3720,"src":"9214:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3811,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"9206:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3810,"id":3815,"nodeType":"Return","src":"9199:26:24"}]},"documentation":{"id":3803,"nodeType":"StructuredDocumentation","src":"9042:70:24","text":" @dev Returns the number of values in the set. O(1)."},"id":3817,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:24","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"set","nameLocation":"9152:3:24","nodeType":"VariableDeclaration","scope":3817,"src":"9133:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3805,"nodeType":"UserDefinedTypeName","pathNode":{"id":3804,"name":"AddressSet","nameLocations":["9133:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3721,"src":"9133:10:24"},"referencedDeclaration":3721,"src":"9133:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9132:24:24"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3817,"src":"9180:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:24"},"scope":4008,"src":"9117:115:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3843,"nodeType":"Block","src":"9657:73:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3835,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"9702:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3720,"src":"9702:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3837,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"9714:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3834,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"9698:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:24","typeDescriptions":{}}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3830,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:24","typeDescriptions":{}}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3828,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:24","typeDescriptions":{}}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3827,"id":3842,"nodeType":"Return","src":"9667:56:24"}]},"documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"9238:331:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3844,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:24","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"set","nameLocation":"9605:3:24","nodeType":"VariableDeclaration","scope":3844,"src":"9586:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3820,"nodeType":"UserDefinedTypeName","pathNode":{"id":3819,"name":"AddressSet","nameLocations":["9586:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3721,"src":"9586:10:24"},"referencedDeclaration":3721,"src":"9586:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"index","nameLocation":"9618:5:24","nodeType":"VariableDeclaration","scope":3844,"src":"9610:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:24"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"9648:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3825,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:24"},"scope":4008,"src":"9574:156:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3873,"nodeType":"Block","src":"10351:219:24","statements":[{"assignments":[3858],"declarations":[{"constant":false,"id":3858,"mutability":"mutable","name":"store","nameLocation":"10378:5:24","nodeType":"VariableDeclaration","scope":3873,"src":"10361:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3857,"nodeType":"ArrayTypeName","src":"10361:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3863,"initialValue":{"arguments":[{"expression":{"id":3860,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"10394:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":3861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3720,"src":"10394:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3859,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"10386:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:24"},{"assignments":[3868],"declarations":[{"constant":false,"id":3868,"mutability":"mutable","name":"result","nameLocation":"10432:6:24","nodeType":"VariableDeclaration","scope":3873,"src":"10415:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3866,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3867,"nodeType":"ArrayTypeName","src":"10415:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3869,"nodeType":"VariableDeclarationStatement","src":"10415:23:24"},{"AST":{"nodeType":"YulBlock","src":"10501:39:24","statements":[{"nodeType":"YulAssignment","src":"10515:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"10525:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10515:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3868,"isOffset":false,"isSlot":false,"src":"10515:6:24","valueSize":1},{"declaration":3858,"isOffset":false,"isSlot":false,"src":"10525:5:24","valueSize":1}],"id":3870,"nodeType":"InlineAssembly","src":"10492:48:24"},{"expression":{"id":3871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"10557:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3853,"id":3872,"nodeType":"Return","src":"10550:13:24"}]},"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"9736:529:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3874,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:24","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"set","nameLocation":"10305:3:24","nodeType":"VariableDeclaration","scope":3874,"src":"10286:22:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3847,"nodeType":"UserDefinedTypeName","pathNode":{"id":3846,"name":"AddressSet","nameLocations":["10286:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":3721,"src":"10286:10:24"},"referencedDeclaration":3721,"src":"10286:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$3721_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10285:24:24"},"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3874,"src":"10333:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3850,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3851,"nodeType":"ArrayTypeName","src":"10333:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:24"},"scope":4008,"src":"10270:300:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":3878,"members":[{"constant":false,"id":3877,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:24","nodeType":"VariableDeclaration","scope":3878,"src":"10617:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":3876,"nodeType":"UserDefinedTypeName","pathNode":{"id":3875,"name":"Set","nameLocations":["10617:3:24"],"nodeType":"IdentifierPath","referencedDeclaration":3406,"src":"10617:3:24"},"referencedDeclaration":3406,"src":"10617:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:24","nodeType":"StructDefinition","scope":4008,"src":"10592:42:24","visibility":"public"},{"body":{"id":3898,"nodeType":"Block","src":"10877:56:24","statements":[{"expression":{"arguments":[{"expression":{"id":3890,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"10899:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"10899:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":3894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"10919:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:24","typeDescriptions":{}}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3889,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"10894:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3888,"id":3897,"nodeType":"Return","src":"10887:39:24"}]},"documentation":{"id":3879,"nodeType":"StructuredDocumentation","src":"10640:159:24","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3899,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:24","nodeType":"FunctionDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"set","nameLocation":"10833:3:24","nodeType":"VariableDeclaration","scope":3899,"src":"10817:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3881,"nodeType":"UserDefinedTypeName","pathNode":{"id":3880,"name":"UintSet","nameLocations":["10817:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"10817:7:24"},"referencedDeclaration":3878,"src":"10817:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"value","nameLocation":"10846:5:24","nodeType":"VariableDeclaration","scope":3899,"src":"10838:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:24"},"returnParameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3899,"src":"10871:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3886,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:24"},"scope":4008,"src":"10804:129:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3919,"nodeType":"Block","src":"11177:59:24","statements":[{"expression":{"arguments":[{"expression":{"id":3911,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"11202:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"11202:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"11222:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:24","typeDescriptions":{}}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3910,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"11194:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3909,"id":3918,"nodeType":"Return","src":"11187:42:24"}]},"documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"10939:157:24","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3920,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:24","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"set","nameLocation":"11133:3:24","nodeType":"VariableDeclaration","scope":3920,"src":"11117:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3902,"nodeType":"UserDefinedTypeName","pathNode":{"id":3901,"name":"UintSet","nameLocations":["11117:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"11117:7:24"},"referencedDeclaration":3878,"src":"11117:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"value","nameLocation":"11146:5:24","nodeType":"VariableDeclaration","scope":3920,"src":"11138:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:24"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3920,"src":"11171:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3907,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:24"},"scope":4008,"src":"11101:135:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3940,"nodeType":"Block","src":"11400:61:24","statements":[{"expression":{"arguments":[{"expression":{"id":3932,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"11427:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"11427:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11447:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:24","typeDescriptions":{}}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3931,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"11417:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3930,"id":3939,"nodeType":"Return","src":"11410:44:24"}]},"documentation":{"id":3921,"nodeType":"StructuredDocumentation","src":"11242:70:24","text":" @dev Returns true if the value is in the set. O(1)."},"id":3941,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:24","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"set","nameLocation":"11351:3:24","nodeType":"VariableDeclaration","scope":3941,"src":"11335:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3923,"nodeType":"UserDefinedTypeName","pathNode":{"id":3922,"name":"UintSet","nameLocations":["11335:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"11335:7:24"},"referencedDeclaration":3878,"src":"11335:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"value","nameLocation":"11364:5:24","nodeType":"VariableDeclaration","scope":3941,"src":"11356:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:24"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3941,"src":"11394:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3928,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:24"},"scope":4008,"src":"11317:144:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3955,"nodeType":"Block","src":"11611:43:24","statements":[{"expression":{"arguments":[{"expression":{"id":3951,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"11636:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"11636:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3950,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"11628:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3949,"id":3954,"nodeType":"Return","src":"11621:26:24"}]},"documentation":{"id":3942,"nodeType":"StructuredDocumentation","src":"11467:70:24","text":" @dev Returns the number of values in the set. O(1)."},"id":3956,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:24","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"set","nameLocation":"11574:3:24","nodeType":"VariableDeclaration","scope":3956,"src":"11558:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3944,"nodeType":"UserDefinedTypeName","pathNode":{"id":3943,"name":"UintSet","nameLocations":["11558:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"11558:7:24"},"referencedDeclaration":3878,"src":"11558:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11557:21:24"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3956,"src":"11602:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:24"},"scope":4008,"src":"11542:112:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3976,"nodeType":"Block","src":"12076:55:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3970,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"12105:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"12105:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":3972,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"12117:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3969,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"12101:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:24","typeDescriptions":{}}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3966,"id":3975,"nodeType":"Return","src":"12086:38:24"}]},"documentation":{"id":3957,"nodeType":"StructuredDocumentation","src":"11660:331:24","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:24","nodeType":"FunctionDefinition","parameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"set","nameLocation":"12024:3:24","nodeType":"VariableDeclaration","scope":3977,"src":"12008:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3959,"nodeType":"UserDefinedTypeName","pathNode":{"id":3958,"name":"UintSet","nameLocations":["12008:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"12008:7:24"},"referencedDeclaration":3878,"src":"12008:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"index","nameLocation":"12037:5:24","nodeType":"VariableDeclaration","scope":3977,"src":"12029:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3961,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:24"},"returnParameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3977,"src":"12067:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:24"},"scope":4008,"src":"11996:135:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4006,"nodeType":"Block","src":"12749:219:24","statements":[{"assignments":[3991],"declarations":[{"constant":false,"id":3991,"mutability":"mutable","name":"store","nameLocation":"12776:5:24","nodeType":"VariableDeclaration","scope":4006,"src":"12759:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3990,"nodeType":"ArrayTypeName","src":"12759:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3996,"initialValue":{"arguments":[{"expression":{"id":3993,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"12792:3:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":3994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:24","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"12792:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3406_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":3992,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"12784:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3406_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:24"},{"assignments":[4001],"declarations":[{"constant":false,"id":4001,"mutability":"mutable","name":"result","nameLocation":"12830:6:24","nodeType":"VariableDeclaration","scope":4006,"src":"12813:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4000,"nodeType":"ArrayTypeName","src":"12813:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4002,"nodeType":"VariableDeclarationStatement","src":"12813:23:24"},{"AST":{"nodeType":"YulBlock","src":"12899:39:24","statements":[{"nodeType":"YulAssignment","src":"12913:15:24","value":{"name":"store","nodeType":"YulIdentifier","src":"12923:5:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12913:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4001,"isOffset":false,"isSlot":false,"src":"12913:6:24","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"12923:5:24","valueSize":1}],"id":4003,"nodeType":"InlineAssembly","src":"12890:48:24"},{"expression":{"id":4004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"12955:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3986,"id":4005,"nodeType":"Return","src":"12948:13:24"}]},"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"12137:529:24","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4007,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:24","nodeType":"FunctionDefinition","parameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"set","nameLocation":"12703:3:24","nodeType":"VariableDeclaration","scope":4007,"src":"12687:19:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":3980,"nodeType":"UserDefinedTypeName","pathNode":{"id":3979,"name":"UintSet","nameLocations":["12687:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":3878,"src":"12687:7:24"},"referencedDeclaration":3878,"src":"12687:7:24","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$3878_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12686:21:24"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4007,"src":"12731:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3984,"nodeType":"ArrayTypeName","src":"12731:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:24"},"scope":4008,"src":"12671:297:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4009,"src":"1329:11641:24","usedErrors":[]}],"src":"205:12766:24"},"id":24}},"contracts":{"@imtbl/contracts/contracts/allowlist/IOperatorAllowlist.sol":{"IOperatorAllowlist":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"isAllowlisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isAllowlisted(address)":"05a3b809"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isAllowlisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAllowlisted(address)\":{\"params\":{\"target\":\"the address to be checked against the Allowlist\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isAllowlisted(address)\":{\"notice\":\"Returns true if an address is Allowlisted false otherwise\"}},\"notice\":\"Required interface of an OperatorAllowlist compliant contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@imtbl/contracts/contracts/allowlist/IOperatorAllowlist.sol\":\"IOperatorAllowlist\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@imtbl/contracts/contracts/allowlist/IOperatorAllowlist.sol\":{\"keccak256\":\"0x78abc58b15098d7a8cf3792739b9e87b6a748d47d05fcfacfb25cb90424f0bb4\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://2f92934b4b67959325074c773784efd7ce3c78e99ffe14f6e541fa1fb65eb27b\",\"dweb:/ipfs/QmYySNnZ53Ju9pxbtQtFdtWPCx3bgL4N79yB3WxeaMP6pk\"]}},\"version\":1}"}},"@imtbl/contracts/contracts/allowlist/IWalletProxy.sol":{"IWalletProxy":{"abi":[{"inputs":[],"name":"PROXY_getImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"PROXY_getImplementation()":"90611127"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PROXY_getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for Passport Wallet's proxy contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@imtbl/contracts/contracts/allowlist/IWalletProxy.sol\":\"IWalletProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@imtbl/contracts/contracts/allowlist/IWalletProxy.sol\":{\"keccak256\":\"0x8a6d31443be2a55f0886dffb538202d71c66fee01a93ec72da6d1961c9d3327a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://18f6ad3a0fa9a4a6799bb5638c134de16777b86193dff27bd0a9f7a8419f4119\",\"dweb:/ipfs/QmXv4r4xw1uoMy3JLLXvMKvXupuqt12F4MVDaEmRAQDWVG\"]}},\"version\":1}"}},"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol":{"OperatorAllowlistUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bool","name":"added","type":"bool"}],"name":"AddressAllowlistChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"targetBytes","type":"bytes32"},{"indexed":true,"internalType":"address","name":"targetAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"added","type":"bool"}],"name":"WalletAllowlistChanged","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REGISTRAR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"addressTargets","type":"address[]"}],"name":"addAddressesToAllowlist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddr","type":"address"}],"name":"addWalletToAllowlist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_roleAdmin","type":"address"},{"internalType":"address","name":"_upgradeAdmin","type":"address"},{"internalType":"address","name":"_registerarAdmin","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"isAllowlisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"addressTargets","type":"address[]"}],"name":"removeAddressesFromAllowlist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddr","type":"address"}],"name":"removeWalletFromAllowlist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523060805234801561001457600080fd5b50608051611c6f61004c60003960008181610696015281816106d601528181610775015281816107b501526108440152611c6f6000f3fe60806040526004361061011f5760003560e01c80636caacbe7116100a0578063b908afa811610064578063b908afa81461032e578063c0c53b8b14610351578063ca15c87314610371578063d547741f14610391578063f68e9553146103b157600080fd5b80636caacbe7146102815780637f17caa7146102a15780639010d07c146102c157806391d14854146102f9578063a217fddf1461031957600080fd5b806336568abe116100e757806336568abe146101f95780633659cfe6146102195780634f1ef2861461023957806352d1902d1461024c5780636aa700961461026157600080fd5b806301ffc9a7146101245780630488d9741461015957806305a3b8091461017b578063248a9ca31461019b5780632f2ff15d146101d9575b600080fd5b34801561013057600080fd5b5061014461013f36600461172c565b6103d6565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061017961017436600461176b565b610401565b005b34801561018757600080fd5b5061014461019636600461176b565b61050a565b3480156101a757600080fd5b506101cb6101b6366004611788565b60009081526065602052604090206001015490565b604051908152602001610150565b3480156101e557600080fd5b506101796101f43660046117a1565b6105df565b34801561020557600080fd5b506101796102143660046117a1565b610609565b34801561022557600080fd5b5061017961023436600461176b565b61068c565b6101796102473660046117e7565b61076b565b34801561025857600080fd5b506101cb610837565b34801561026d57600080fd5b5061017961027c36600461176b565b6108ea565b34801561028d57600080fd5b5061017961029c3660046118ab565b6109de565b3480156102ad57600080fd5b506101796102bc3660046118ab565b610ad5565b3480156102cd57600080fd5b506102e16102dc366004611920565b610bcf565b6040516001600160a01b039091168152602001610150565b34801561030557600080fd5b506101446103143660046117a1565b610bee565b34801561032557600080fd5b506101cb600081565b34801561033a57600080fd5b506101cb6b555047524144455f524f4c4560a01b81565b34801561035d57600080fd5b5061017961036c366004611942565b610c19565b34801561037d57600080fd5b506101cb61038c366004611788565b610d73565b34801561039d57600080fd5b506101796103ac3660046117a1565b610d8a565b3480156103bd57600080fd5b506101cb6d5245474953545241525f524f4c4560901b81565b60006001600160e01b031982166305a3b80960e01b14806103fb57506103fb82610daf565b92915050565b6d5245474953545241525f524f4c4560901b61041c81610dd4565b813f600081815261012f60209081526040808320805460ff191660011790558051639061112760e01b815290516001600160a01b03871692639061112792600480820193918290030181865afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e919061198d565b6001600160a01b03818116600090815261012e6020908152604091829020805460ff1916600190811790915591519182529293509086169184917f52a9758e33d80a562e98b34d922581e414149b9c485e5929682a72acb451c31591015b60405180910390a350505050565b6001600160a01b038116600090815261012d602052604081205460ff161561053457506001919050565b813f600081815261012f602052604090205460ff16156105d6576000836001600160a01b031663906111276040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b2919061198d565b6001600160a01b0316600090815261012e602052604090205460ff16949350505050565b50600092915050565b6000828152606560205260409020600101546105fa81610dd4565b6106048383610dde565b505050565b6001600160a01b038116331461067e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106888282610e00565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106d45760405162461bcd60e51b8152600401610675906119aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661071d600080516020611bf3833981519152546001600160a01b031690565b6001600160a01b0316146107435760405162461bcd60e51b8152600401610675906119f6565b61074c81610e22565b6040805160008082526020820190925261076891839190610e3b565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107b35760405162461bcd60e51b8152600401610675906119aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107fc600080516020611bf3833981519152546001600160a01b031690565b6001600160a01b0316146108225760405162461bcd60e51b8152600401610675906119f6565b61082b82610e22565b61068882826001610e3b565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d75760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610675565b50600080516020611bf383398151915290565b6d5245474953545241525f524f4c4560901b61090581610dd4565b813f600081815261012f60209081526040808320805460ff191690558051639061112760e01b815290516001600160a01b03871692639061112792600480820193918290030181865afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610984919061198d565b6001600160a01b03818116600090815261012e60209081526040808320805460ff19169055519182529293509086169184917f52a9758e33d80a562e98b34d922581e414149b9c485e5929682a72acb451c31591016104fc565b6d5245474953545241525f524f4c4560901b6109f981610dd4565b60005b82811015610acf5761012d6000858584818110610a1b57610a1b611a42565b9050602002016020810190610a30919061176b565b6001600160a01b031681526020810191909152604001600020805460ff19169055838382818110610a6357610a63611a42565b9050602002016020810190610a78919061176b565b6001600160a01b03167f218a1635b2755f3fe7bdb77932fcd6ffca69760533404fe817f7404315bf6df06000604051610ab5911515815260200190565b60405180910390a280610ac781611a6e565b9150506109fc565b50505050565b6d5245474953545241525f524f4c4560901b610af081610dd4565b60005b82811015610acf57600161012d6000868685818110610b1457610b14611a42565b9050602002016020810190610b29919061176b565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055838382818110610b6357610b63611a42565b9050602002016020810190610b78919061176b565b6001600160a01b03167f218a1635b2755f3fe7bdb77932fcd6ffca69760533404fe817f7404315bf6df06001604051610bb5911515815260200190565b60405180910390a280610bc781611a6e565b915050610af3565b6000828152609760205260408120610be79083610fa6565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff1615808015610c395750600054600160ff909116105b80610c535750303b158015610c53575060005460ff166001145b610cb65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610675565b6000805460ff191660011790558015610cd9576000805461ff0019166101001790555b610ce1610fb2565b610ce9610fb2565b610cf4600085610dde565b610d0d6b555047524144455f524f4c4560a01b84610dde565b610d286d5245474953545241525f524f4c4560901b83610dde565b8015610acf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60008181526097602052604081206103fb9061101f565b600082815260656020526040902060010154610da581610dd4565b6106048383610e00565b60006001600160e01b03198216635a05180f60e01b14806103fb57506103fb82611029565b610768813361105e565b610de882826110b7565b6000828152609760205260409020610604908261113d565b610e0a8282611152565b600082815260976020526040902061060490826111b9565b6b555047524144455f524f4c4560a01b61068881610dd4565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e6e57610604836111ce565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ec8575060408051601f3d908101601f19168201909252610ec591810190611a87565b60015b610f2b5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610675565b600080516020611bf38339815191528114610f9a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610675565b5061060483838361126a565b6000610be7838361128f565b600054610100900460ff1661101d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610675565b565b60006103fb825490565b60006001600160e01b03198216637965db0b60e01b14806103fb57506301ffc9a760e01b6001600160e01b03198316146103fb565b6110688282610bee565b61068857611075816112b9565b6110808360206112cb565b604051602001611091929190611ac4565b60408051601f198184030181529082905262461bcd60e51b825261067591600401611b39565b6110c18282610bee565b6106885760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556110f93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610be7836001600160a01b038416611467565b61115c8282610bee565b156106885760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610be7836001600160a01b0384166114b6565b6001600160a01b0381163b61123b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610675565b600080516020611bf383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611273836115a9565b6000825111806112805750805b1561060457610acf83836115e9565b60008260000182815481106112a6576112a6611a42565b9060005260206000200154905092915050565b60606103fb6001600160a01b03831660145b606060006112da836002611b6c565b6112e5906002611b83565b67ffffffffffffffff8111156112fd576112fd6117d1565b6040519080825280601f01601f191660200182016040528015611327576020820181803683370190505b509050600360fc1b8160008151811061134257611342611a42565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061137157611371611a42565b60200101906001600160f81b031916908160001a9053506000611395846002611b6c565b6113a0906001611b83565b90505b6001811115611418576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113d4576113d4611a42565b1a60f81b8282815181106113ea576113ea611a42565b60200101906001600160f81b031916908160001a90535060049490941c9361141181611b96565b90506113a3565b508315610be75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610675565b60008181526001830160205260408120546114ae575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103fb565b5060006103fb565b6000818152600183016020526040812054801561159f5760006114da600183611bad565b85549091506000906114ee90600190611bad565b905081811461155357600086600001828154811061150e5761150e611a42565b906000526020600020015490508087600001848154811061153157611531611a42565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061156457611564611bc0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103fb565b60009150506103fb565b6115b2816111ce565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610be78383604051806060016040528060278152602001611c13602791396060600080856001600160a01b0316856040516116269190611bd6565b600060405180830381855af49150503d8060008114611661576040519150601f19603f3d011682016040523d82523d6000602084013e611666565b606091505b509150915061167786838387611681565b9695505050505050565b606083156116f05782516000036116e9576001600160a01b0385163b6116e95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610675565b50816116fa565b6116fa8383611702565b949350505050565b8151156117125781518083602001fd5b8060405162461bcd60e51b81526004016106759190611b39565b60006020828403121561173e57600080fd5b81356001600160e01b031981168114610be757600080fd5b6001600160a01b038116811461076857600080fd5b60006020828403121561177d57600080fd5b8135610be781611756565b60006020828403121561179a57600080fd5b5035919050565b600080604083850312156117b457600080fd5b8235915060208301356117c681611756565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156117fa57600080fd5b823561180581611756565b9150602083013567ffffffffffffffff8082111561182257600080fd5b818501915085601f83011261183657600080fd5b813581811115611848576118486117d1565b604051601f8201601f19908116603f01168101908382118183101715611870576118706117d1565b8160405282815288602084870101111561188957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080602083850312156118be57600080fd5b823567ffffffffffffffff808211156118d657600080fd5b818501915085601f8301126118ea57600080fd5b8135818111156118f957600080fd5b8660208260051b850101111561190e57600080fd5b60209290920196919550909350505050565b6000806040838503121561193357600080fd5b50508035926020909101359150565b60008060006060848603121561195757600080fd5b833561196281611756565b9250602084013561197281611756565b9150604084013561198281611756565b809150509250925092565b60006020828403121561199f57600080fd5b8151610be781611756565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a8057611a80611a58565b5060010190565b600060208284031215611a9957600080fd5b5051919050565b60005b83811015611abb578181015183820152602001611aa3565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611afc816017850160208801611aa0565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b2d816028840160208801611aa0565b01602801949350505050565b6020815260008251806020840152611b58816040850160208701611aa0565b601f01601f19169190910160400192915050565b80820281158282048414176103fb576103fb611a58565b808201808211156103fb576103fb611a58565b600081611ba557611ba5611a58565b506000190190565b818103818111156103fb576103fb611a58565b634e487b7160e01b600052603160045260246000fd5b60008251611be8818460208701611aa0565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202c0309543a2d84dd26cd09887918d4b72da3aaa4e17fb534e5e161334ce6e3f964736f6c63430008130033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1C6F PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x696 ADD MSTORE DUP2 DUP2 PUSH2 0x6D6 ADD MSTORE DUP2 DUP2 PUSH2 0x775 ADD MSTORE DUP2 DUP2 PUSH2 0x7B5 ADD MSTORE PUSH2 0x844 ADD MSTORE PUSH2 0x1C6F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CAACBE7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB908AFA8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB908AFA8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xF68E9553 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6CAACBE7 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x7F17CAA7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x6AA70096 EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x488D974 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x5A3B809 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x179 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x837 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1920 JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1942 JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0xD73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xD8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A3B809 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x41C DUP2 PUSH2 0xDD4 JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD PUSH4 0x90611127 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x90611127 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP3 SWAP4 POP SWAP1 DUP7 AND SWAP2 DUP5 SWAP2 PUSH32 0x52A9758E33D80A562E98B34D922581E414149B9C485E5929682A72ACB451C315 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x534 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90611127 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5FA DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xDDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH2 0xE00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x6D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x74C DUP2 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x768 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xE3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x82B DUP3 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH1 0x1 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x905 DUP2 PUSH2 0xDD4 JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH4 0x90611127 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x90611127 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x960 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE SWAP3 SWAP4 POP SWAP1 DUP7 AND SWAP2 DUP5 SWAP2 PUSH32 0x52A9758E33D80A562E98B34D922581E414149B9C485E5929682A72ACB451C315 SWAP2 ADD PUSH2 0x4FC JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x9F9 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH2 0x12D PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA1B JUMPI PUSH2 0xA1B PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xA63 JUMPI PUSH2 0xA63 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x218A1635B2755F3FE7BDB77932FCD6FFCA69760533404FE817F7404315BF6DF0 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xAB5 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0xAC7 DUP2 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0xAF0 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH1 0x1 PUSH2 0x12D PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB14 JUMPI PUSH2 0xB14 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xB63 JUMPI PUSH2 0xB63 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x218A1635B2755F3FE7BDB77932FCD6FFCA69760533404FE817F7404315BF6DF0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xBB5 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0xBC7 DUP2 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xBE7 SWAP1 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xC39 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xC53 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xCE1 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCE9 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCF4 PUSH1 0x0 DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xD0D PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL DUP5 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xD28 PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL DUP4 PUSH2 0xDDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xACF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3FB SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDA5 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x768 DUP2 CALLER PUSH2 0x105E JUMP JUMPDEST PUSH2 0xDE8 DUP3 DUP3 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x604 SWAP1 DUP3 PUSH2 0x113D JUMP JUMPDEST PUSH2 0xE0A DUP3 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x604 SWAP1 DUP3 PUSH2 0x11B9 JUMP JUMPDEST PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL PUSH2 0x688 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE6E JUMPI PUSH2 0x604 DUP4 PUSH2 0x11CE JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEC8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEC5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST POP PUSH2 0x604 DUP4 DUP4 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 DUP4 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1068 DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH2 0x1075 DUP2 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x1080 DUP4 PUSH1 0x20 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1091 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x675 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x10C1 DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x10F9 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x115C DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x123B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1273 DUP4 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1280 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x604 JUMPI PUSH2 0xACF DUP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12A6 JUMPI PUSH2 0x12A6 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x12DA DUP4 PUSH1 0x2 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x12E5 SWAP1 PUSH1 0x2 PUSH2 0x1B83 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12FD JUMPI PUSH2 0x12FD PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1327 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1342 JUMPI PUSH2 0x1342 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1371 JUMPI PUSH2 0x1371 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1395 DUP5 PUSH1 0x2 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x13A0 SWAP1 PUSH1 0x1 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1418 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x13D4 JUMPI PUSH2 0x13D4 PUSH2 0x1A42 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1411 DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP1 POP PUSH2 0x13A3 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x14AE JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3FB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 PUSH2 0x14DA PUSH1 0x1 DUP4 PUSH2 0x1BAD JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x14EE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1553 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x150E JUMPI PUSH2 0x150E PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1531 JUMPI PUSH2 0x1531 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1564 JUMPI PUSH2 0x1564 PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x15B2 DUP2 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBE7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C13 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1661 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1677 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1681 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x16F0 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x16E9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST POP DUP2 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x16FA DUP4 DUP4 PUSH2 0x1702 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1712 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBE7 DUP2 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17C6 DUP2 PUSH2 0x1756 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1805 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH2 0x1848 PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1870 JUMPI PUSH2 0x1870 PUSH2 0x17D1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x190E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1962 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1972 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1982 DUP2 PUSH2 0x1756 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBE7 DUP2 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A80 JUMPI PUSH2 0x1A80 PUSH2 0x1A58 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ABB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AA3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1AFC DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1B2D DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B58 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1BA5 JUMPI PUSH2 0x1BA5 PUSH2 0x1A58 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1BE8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A26469706673582212202C SUB MULMOD SLOAD GASPRICE 0x2D DUP5 0xDD 0x26 0xCD MULMOD DUP9 PUSH26 0x18D4B72DA3AAA4E17FB534E5E161334CE6E3F964736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"894:6498:2:-:0;;;1198:4:15;1155:48;;894:6498:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_572":{"entryPoint":null,"id":572,"parameterSlots":0,"returnSlots":0},"@REGISTRAR_ROLE_63":{"entryPoint":null,"id":63,"parameterSlots":0,"returnSlots":0},"@UPGRADE_ROLE_70":{"entryPoint":null,"id":70,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_589":{"entryPoint":null,"id":589,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_1574":{"entryPoint":4018,"id":1574,"parameterSlots":0,"returnSlots":0},"@_add_3448":{"entryPoint":5223,"id":3448,"parameterSlots":2,"returnSlots":1},"@_at_3582":{"entryPoint":4751,"id":3582,"parameterSlots":2,"returnSlots":1},"@_authorizeUpgrade_346":{"entryPoint":3618,"id":346,"parameterSlots":1,"returnSlots":0},"@_checkRole_649":{"entryPoint":3540,"id":649,"parameterSlots":1,"returnSlots":0},"@_checkRole_688":{"entryPoint":4190,"id":688,"parameterSlots":2,"returnSlots":0},"@_contains_3551":{"entryPoint":null,"id":3551,"parameterSlots":2,"returnSlots":1},"@_getImplementation_1052":{"entryPoint":null,"id":1052,"parameterSlots":0,"returnSlots":1},"@_grantRole_510":{"entryPoint":3550,"id":510,"parameterSlots":2,"returnSlots":0},"@_grantRole_840":{"entryPoint":4279,"id":840,"parameterSlots":2,"returnSlots":0},"@_length_3565":{"entryPoint":null,"id":3565,"parameterSlots":1,"returnSlots":1},"@_msgSender_2005":{"entryPoint":null,"id":2005,"parameterSlots":0,"returnSlots":1},"@_remove_3532":{"entryPoint":5302,"id":3532,"parameterSlots":2,"returnSlots":1},"@_revert_1976":{"entryPoint":5890,"id":1976,"parameterSlots":2,"returnSlots":0},"@_revokeRole_534":{"entryPoint":3584,"id":534,"parameterSlots":2,"returnSlots":0},"@_revokeRole_871":{"entryPoint":4434,"id":871,"parameterSlots":2,"returnSlots":0},"@_setImplementation_1076":{"entryPoint":4558,"id":1076,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_1174":{"entryPoint":3643,"id":1174,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_1121":{"entryPoint":4714,"id":1121,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_1091":{"entryPoint":5545,"id":1091,"parameterSlots":1,"returnSlots":0},"@addAddressesToAllowlist_157":{"entryPoint":2773,"id":157,"parameterSlots":2,"returnSlots":0},"@addWalletToAllowlist_234":{"entryPoint":1025,"id":234,"parameterSlots":1,"returnSlots":0},"@add_3748":{"entryPoint":4413,"id":3748,"parameterSlots":2,"returnSlots":1},"@at_3844":{"entryPoint":4006,"id":3844,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1864":{"entryPoint":5609,"id":1864,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1893":{"entryPoint":null,"id":1893,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_2060":{"entryPoint":null,"id":2060,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_2071":{"entryPoint":null,"id":2071,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_703":{"entryPoint":null,"id":703,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_486":{"entryPoint":3443,"id":486,"parameterSlots":1,"returnSlots":1},"@getRoleMember_470":{"entryPoint":3023,"id":470,"parameterSlots":2,"returnSlots":1},"@grantRole_723":{"entryPoint":1503,"id":723,"parameterSlots":2,"returnSlots":0},"@hasRole_636":{"entryPoint":3054,"id":636,"parameterSlots":2,"returnSlots":1},"@initialize_119":{"entryPoint":3097,"id":119,"parameterSlots":3,"returnSlots":0},"@isAllowlisted_312":{"entryPoint":1290,"id":312,"parameterSlots":1,"returnSlots":1},"@isContract_1665":{"entryPoint":null,"id":1665,"parameterSlots":1,"returnSlots":1},"@length_3817":{"entryPoint":4127,"id":3817,"parameterSlots":1,"returnSlots":1},"@proxiableUUID_1592":{"entryPoint":2103,"id":1592,"parameterSlots":0,"returnSlots":1},"@removeAddressesFromAllowlist_194":{"entryPoint":2526,"id":194,"parameterSlots":2,"returnSlots":0},"@removeWalletFromAllowlist_272":{"entryPoint":2282,"id":272,"parameterSlots":1,"returnSlots":0},"@remove_3775":{"entryPoint":4537,"id":3775,"parameterSlots":2,"returnSlots":1},"@renounceRole_766":{"entryPoint":1545,"id":766,"parameterSlots":2,"returnSlots":0},"@revokeRole_743":{"entryPoint":3466,"id":743,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2406":{"entryPoint":null,"id":2406,"parameterSlots":1,"returnSlots":1},"@supportsInterface_336":{"entryPoint":982,"id":336,"parameterSlots":1,"returnSlots":1},"@supportsInterface_451":{"entryPoint":3503,"id":451,"parameterSlots":1,"returnSlots":1},"@supportsInterface_617":{"entryPoint":4137,"id":617,"parameterSlots":1,"returnSlots":1},"@toHexString_2321":{"entryPoint":4811,"id":2321,"parameterSlots":2,"returnSlots":1},"@toHexString_2341":{"entryPoint":4793,"id":2341,"parameterSlots":1,"returnSlots":1},"@upgradeToAndCall_1635":{"entryPoint":1899,"id":1635,"parameterSlots":2,"returnSlots":0},"@upgradeTo_1614":{"entryPoint":1676,"id":1614,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1932":{"entryPoint":5761,"id":1932,"parameterSlots":4,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6541,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address":{"entryPoint":6466,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":6119,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":6315,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":6024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":6791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":6049,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":6432,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6852,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6646,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7043,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7020,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7085,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6816,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":7062,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":6766,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6744,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":7104,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6722,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6097,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":5974,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12533:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:25","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:25"},"nodeType":"YulFunctionCall","src":"131:12:25"},"nodeType":"YulExpressionStatement","src":"131:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:25"},"nodeType":"YulFunctionCall","src":"100:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:25"},"nodeType":"YulFunctionCall","src":"96:32:25"},"nodeType":"YulIf","src":"93:52:25"},{"nodeType":"YulVariableDeclaration","src":"154:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:25"},"nodeType":"YulFunctionCall","src":"167:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:25"},"nodeType":"YulFunctionCall","src":"256:12:25"},"nodeType":"YulExpressionStatement","src":"256:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:25"},"nodeType":"YulFunctionCall","src":"230:20:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:25"},"nodeType":"YulFunctionCall","src":"219:32:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:25"},"nodeType":"YulFunctionCall","src":"209:43:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:25"},"nodeType":"YulFunctionCall","src":"202:51:25"},"nodeType":"YulIf","src":"199:71:25"},{"nodeType":"YulAssignment","src":"279:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:25","type":""}],"src":"14:286:25"},{"body":{"nodeType":"YulBlock","src":"400:92:25","statements":[{"nodeType":"YulAssignment","src":"410:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:25"},"nodeType":"YulFunctionCall","src":"418:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:25"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:25"},"nodeType":"YulFunctionCall","src":"470:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:25"},"nodeType":"YulFunctionCall","src":"463:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:25"},"nodeType":"YulFunctionCall","src":"445:41:25"},"nodeType":"YulExpressionStatement","src":"445:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:25","type":""}],"src":"305:187:25"},{"body":{"nodeType":"YulBlock","src":"542:86:25","statements":[{"body":{"nodeType":"YulBlock","src":"606:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"615:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"618:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"608:6:25"},"nodeType":"YulFunctionCall","src":"608:12:25"},"nodeType":"YulExpressionStatement","src":"608:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"565:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"576:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"591:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"596:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"587:3:25"},"nodeType":"YulFunctionCall","src":"587:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"600:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"583:3:25"},"nodeType":"YulFunctionCall","src":"583:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"572:3:25"},"nodeType":"YulFunctionCall","src":"572:31:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"562:2:25"},"nodeType":"YulFunctionCall","src":"562:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"555:6:25"},"nodeType":"YulFunctionCall","src":"555:50:25"},"nodeType":"YulIf","src":"552:70:25"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"531:5:25","type":""}],"src":"497:131:25"},{"body":{"nodeType":"YulBlock","src":"703:177:25","statements":[{"body":{"nodeType":"YulBlock","src":"749:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"758:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"751:6:25"},"nodeType":"YulFunctionCall","src":"751:12:25"},"nodeType":"YulExpressionStatement","src":"751:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"724:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"733:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"720:3:25"},"nodeType":"YulFunctionCall","src":"720:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"745:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"716:3:25"},"nodeType":"YulFunctionCall","src":"716:32:25"},"nodeType":"YulIf","src":"713:52:25"},{"nodeType":"YulVariableDeclaration","src":"774:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"800:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"787:12:25"},"nodeType":"YulFunctionCall","src":"787:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"778:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"844:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"819:24:25"},"nodeType":"YulFunctionCall","src":"819:31:25"},"nodeType":"YulExpressionStatement","src":"819:31:25"},{"nodeType":"YulAssignment","src":"859:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"869:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"859:6:25"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"669:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"680:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"692:6:25","type":""}],"src":"633:247:25"},{"body":{"nodeType":"YulBlock","src":"955:110:25","statements":[{"body":{"nodeType":"YulBlock","src":"1001:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1010:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1013:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1003:6:25"},"nodeType":"YulFunctionCall","src":"1003:12:25"},"nodeType":"YulExpressionStatement","src":"1003:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"976:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"985:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"972:3:25"},"nodeType":"YulFunctionCall","src":"972:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"997:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"968:3:25"},"nodeType":"YulFunctionCall","src":"968:32:25"},"nodeType":"YulIf","src":"965:52:25"},{"nodeType":"YulAssignment","src":"1026:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1049:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1036:12:25"},"nodeType":"YulFunctionCall","src":"1036:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1026:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"921:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"932:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"944:6:25","type":""}],"src":"885:180:25"},{"body":{"nodeType":"YulBlock","src":"1171:76:25","statements":[{"nodeType":"YulAssignment","src":"1181:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1193:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1204:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1189:3:25"},"nodeType":"YulFunctionCall","src":"1189:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1181:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1223:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"1234:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1216:6:25"},"nodeType":"YulFunctionCall","src":"1216:25:25"},"nodeType":"YulExpressionStatement","src":"1216:25:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1140:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1151:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1162:4:25","type":""}],"src":"1070:177:25"},{"body":{"nodeType":"YulBlock","src":"1339:228:25","statements":[{"body":{"nodeType":"YulBlock","src":"1385:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1394:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1397:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1387:6:25"},"nodeType":"YulFunctionCall","src":"1387:12:25"},"nodeType":"YulExpressionStatement","src":"1387:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1360:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1369:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1356:3:25"},"nodeType":"YulFunctionCall","src":"1356:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1381:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1352:3:25"},"nodeType":"YulFunctionCall","src":"1352:32:25"},"nodeType":"YulIf","src":"1349:52:25"},{"nodeType":"YulAssignment","src":"1410:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1433:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1420:12:25"},"nodeType":"YulFunctionCall","src":"1420:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1410:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1452:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1482:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1493:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1478:3:25"},"nodeType":"YulFunctionCall","src":"1478:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1465:12:25"},"nodeType":"YulFunctionCall","src":"1465:32:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1456:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1531:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1506:24:25"},"nodeType":"YulFunctionCall","src":"1506:31:25"},"nodeType":"YulExpressionStatement","src":"1506:31:25"},{"nodeType":"YulAssignment","src":"1546:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1556:5:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1546:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1297:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1308:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1320:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1328:6:25","type":""}],"src":"1252:315:25"},{"body":{"nodeType":"YulBlock","src":"1604:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1621:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1628:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1633:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1624:3:25"},"nodeType":"YulFunctionCall","src":"1624:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1614:6:25"},"nodeType":"YulFunctionCall","src":"1614:31:25"},"nodeType":"YulExpressionStatement","src":"1614:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1661:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1664:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1654:6:25"},"nodeType":"YulFunctionCall","src":"1654:15:25"},"nodeType":"YulExpressionStatement","src":"1654:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1685:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1688:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1678:6:25"},"nodeType":"YulFunctionCall","src":"1678:15:25"},"nodeType":"YulExpressionStatement","src":"1678:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1572:127:25"},{"body":{"nodeType":"YulBlock","src":"1800:960:25","statements":[{"body":{"nodeType":"YulBlock","src":"1846:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1855:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1858:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1848:6:25"},"nodeType":"YulFunctionCall","src":"1848:12:25"},"nodeType":"YulExpressionStatement","src":"1848:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1821:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1817:3:25"},"nodeType":"YulFunctionCall","src":"1817:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1842:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1813:3:25"},"nodeType":"YulFunctionCall","src":"1813:32:25"},"nodeType":"YulIf","src":"1810:52:25"},{"nodeType":"YulVariableDeclaration","src":"1871:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1897:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1884:12:25"},"nodeType":"YulFunctionCall","src":"1884:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1875:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1941:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1916:24:25"},"nodeType":"YulFunctionCall","src":"1916:31:25"},"nodeType":"YulExpressionStatement","src":"1916:31:25"},{"nodeType":"YulAssignment","src":"1956:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1966:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1956:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1980:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2011:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2022:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2007:3:25"},"nodeType":"YulFunctionCall","src":"2007:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1994:12:25"},"nodeType":"YulFunctionCall","src":"1994:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1984:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2035:28:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2045:18:25","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2039:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2090:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2099:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2102:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2092:6:25"},"nodeType":"YulFunctionCall","src":"2092:12:25"},"nodeType":"YulExpressionStatement","src":"2092:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2078:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"2086:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2075:2:25"},"nodeType":"YulFunctionCall","src":"2075:14:25"},"nodeType":"YulIf","src":"2072:34:25"},{"nodeType":"YulVariableDeclaration","src":"2115:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2129:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2140:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2125:3:25"},"nodeType":"YulFunctionCall","src":"2125:22:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2119:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2195:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2204:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2207:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2197:6:25"},"nodeType":"YulFunctionCall","src":"2197:12:25"},"nodeType":"YulExpressionStatement","src":"2197:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2174:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"2178:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:25"},"nodeType":"YulFunctionCall","src":"2170:13:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2185:7:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2166:3:25"},"nodeType":"YulFunctionCall","src":"2166:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2159:6:25"},"nodeType":"YulFunctionCall","src":"2159:35:25"},"nodeType":"YulIf","src":"2156:55:25"},{"nodeType":"YulVariableDeclaration","src":"2220:26:25","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2243:2:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2230:12:25"},"nodeType":"YulFunctionCall","src":"2230:16:25"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2224:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2269:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2271:16:25"},"nodeType":"YulFunctionCall","src":"2271:18:25"},"nodeType":"YulExpressionStatement","src":"2271:18:25"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2261:2:25"},{"name":"_1","nodeType":"YulIdentifier","src":"2265:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2258:2:25"},"nodeType":"YulFunctionCall","src":"2258:10:25"},"nodeType":"YulIf","src":"2255:36:25"},{"nodeType":"YulVariableDeclaration","src":"2300:17:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2314:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2310:3:25"},"nodeType":"YulFunctionCall","src":"2310:7:25"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2304:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2326:23:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2346:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2340:5:25"},"nodeType":"YulFunctionCall","src":"2340:9:25"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2330:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2358:71:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2380:6:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2404:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2400:3:25"},"nodeType":"YulFunctionCall","src":"2400:13:25"},{"name":"_4","nodeType":"YulIdentifier","src":"2415:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2396:3:25"},"nodeType":"YulFunctionCall","src":"2396:22:25"},{"kind":"number","nodeType":"YulLiteral","src":"2420:2:25","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:25"},"nodeType":"YulFunctionCall","src":"2392:31:25"},{"name":"_4","nodeType":"YulIdentifier","src":"2425:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2388:3:25"},"nodeType":"YulFunctionCall","src":"2388:40:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:25"},"nodeType":"YulFunctionCall","src":"2376:53:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2362:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2488:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2490:16:25"},"nodeType":"YulFunctionCall","src":"2490:18:25"},"nodeType":"YulExpressionStatement","src":"2490:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2447:10:25"},{"name":"_1","nodeType":"YulIdentifier","src":"2459:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2444:2:25"},"nodeType":"YulFunctionCall","src":"2444:18:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2467:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2479:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2464:2:25"},"nodeType":"YulFunctionCall","src":"2464:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2441:2:25"},"nodeType":"YulFunctionCall","src":"2441:46:25"},"nodeType":"YulIf","src":"2438:72:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2526:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2530:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2519:6:25"},"nodeType":"YulFunctionCall","src":"2519:22:25"},"nodeType":"YulExpressionStatement","src":"2519:22:25"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2557:6:25"},{"name":"_3","nodeType":"YulIdentifier","src":"2565:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2550:6:25"},"nodeType":"YulFunctionCall","src":"2550:18:25"},"nodeType":"YulExpressionStatement","src":"2550:18:25"},{"body":{"nodeType":"YulBlock","src":"2614:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2623:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2626:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2616:6:25"},"nodeType":"YulFunctionCall","src":"2616:12:25"},"nodeType":"YulExpressionStatement","src":"2616:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2591:2:25"},{"name":"_3","nodeType":"YulIdentifier","src":"2595:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:25"},"nodeType":"YulFunctionCall","src":"2587:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"2600:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2583:3:25"},"nodeType":"YulFunctionCall","src":"2583:20:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2605:7:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2580:2:25"},"nodeType":"YulFunctionCall","src":"2580:33:25"},"nodeType":"YulIf","src":"2577:53:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2656:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2652:3:25"},"nodeType":"YulFunctionCall","src":"2652:15:25"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2673:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"2677:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2669:3:25"},"nodeType":"YulFunctionCall","src":"2669:11:25"},{"name":"_3","nodeType":"YulIdentifier","src":"2682:2:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2639:12:25"},"nodeType":"YulFunctionCall","src":"2639:46:25"},"nodeType":"YulExpressionStatement","src":"2639:46:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2709:6:25"},{"name":"_3","nodeType":"YulIdentifier","src":"2717:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2705:3:25"},"nodeType":"YulFunctionCall","src":"2705:15:25"},{"kind":"number","nodeType":"YulLiteral","src":"2722:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2701:3:25"},"nodeType":"YulFunctionCall","src":"2701:24:25"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2694:6:25"},"nodeType":"YulFunctionCall","src":"2694:35:25"},"nodeType":"YulExpressionStatement","src":"2694:35:25"},{"nodeType":"YulAssignment","src":"2738:16:25","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2748:6:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2738:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1758:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1769:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1781:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1789:6:25","type":""}],"src":"1704:1056:25"},{"body":{"nodeType":"YulBlock","src":"2870:510:25","statements":[{"body":{"nodeType":"YulBlock","src":"2916:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2925:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2928:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2918:6:25"},"nodeType":"YulFunctionCall","src":"2918:12:25"},"nodeType":"YulExpressionStatement","src":"2918:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2891:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2900:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2887:3:25"},"nodeType":"YulFunctionCall","src":"2887:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2912:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2883:3:25"},"nodeType":"YulFunctionCall","src":"2883:32:25"},"nodeType":"YulIf","src":"2880:52:25"},{"nodeType":"YulVariableDeclaration","src":"2941:37:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2955:12:25"},"nodeType":"YulFunctionCall","src":"2955:23:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2945:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2987:28:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2997:18:25","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2991:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3042:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3051:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3054:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3044:6:25"},"nodeType":"YulFunctionCall","src":"3044:12:25"},"nodeType":"YulExpressionStatement","src":"3044:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3030:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"3038:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3027:2:25"},"nodeType":"YulFunctionCall","src":"3027:14:25"},"nodeType":"YulIf","src":"3024:34:25"},{"nodeType":"YulVariableDeclaration","src":"3067:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3081:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3092:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3077:3:25"},"nodeType":"YulFunctionCall","src":"3077:22:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3071:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3147:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3156:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3159:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3149:6:25"},"nodeType":"YulFunctionCall","src":"3149:12:25"},"nodeType":"YulExpressionStatement","src":"3149:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3126:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"3130:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3122:3:25"},"nodeType":"YulFunctionCall","src":"3122:13:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3137:7:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3118:3:25"},"nodeType":"YulFunctionCall","src":"3118:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3111:6:25"},"nodeType":"YulFunctionCall","src":"3111:35:25"},"nodeType":"YulIf","src":"3108:55:25"},{"nodeType":"YulVariableDeclaration","src":"3172:30:25","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3199:2:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3186:12:25"},"nodeType":"YulFunctionCall","src":"3186:16:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3176:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3229:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3238:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3241:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3231:6:25"},"nodeType":"YulFunctionCall","src":"3231:12:25"},"nodeType":"YulExpressionStatement","src":"3231:12:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3217:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"3225:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3214:2:25"},"nodeType":"YulFunctionCall","src":"3214:14:25"},"nodeType":"YulIf","src":"3211:34:25"},{"body":{"nodeType":"YulBlock","src":"3303:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3312:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3315:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3305:6:25"},"nodeType":"YulFunctionCall","src":"3305:12:25"},"nodeType":"YulExpressionStatement","src":"3305:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3268:2:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3276:1:25","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3279:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3272:3:25"},"nodeType":"YulFunctionCall","src":"3272:14:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3264:3:25"},"nodeType":"YulFunctionCall","src":"3264:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3289:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3260:3:25"},"nodeType":"YulFunctionCall","src":"3260:32:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3294:7:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3257:2:25"},"nodeType":"YulFunctionCall","src":"3257:45:25"},"nodeType":"YulIf","src":"3254:65:25"},{"nodeType":"YulAssignment","src":"3328:21:25","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3342:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"3346:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3338:3:25"},"nodeType":"YulFunctionCall","src":"3338:11:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3328:6:25"}]},{"nodeType":"YulAssignment","src":"3358:16:25","value":{"name":"length","nodeType":"YulIdentifier","src":"3368:6:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3358:6:25"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2828:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2839:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2851:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2859:6:25","type":""}],"src":"2765:615:25"},{"body":{"nodeType":"YulBlock","src":"3472:161:25","statements":[{"body":{"nodeType":"YulBlock","src":"3518:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3527:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3530:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3520:6:25"},"nodeType":"YulFunctionCall","src":"3520:12:25"},"nodeType":"YulExpressionStatement","src":"3520:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3493:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3502:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3489:3:25"},"nodeType":"YulFunctionCall","src":"3489:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3514:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3485:3:25"},"nodeType":"YulFunctionCall","src":"3485:32:25"},"nodeType":"YulIf","src":"3482:52:25"},{"nodeType":"YulAssignment","src":"3543:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3566:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3553:12:25"},"nodeType":"YulFunctionCall","src":"3553:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3543:6:25"}]},{"nodeType":"YulAssignment","src":"3585:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3612:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3623:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3608:3:25"},"nodeType":"YulFunctionCall","src":"3608:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3595:12:25"},"nodeType":"YulFunctionCall","src":"3595:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3585:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3430:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3441:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3453:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3461:6:25","type":""}],"src":"3385:248:25"},{"body":{"nodeType":"YulBlock","src":"3739:102:25","statements":[{"nodeType":"YulAssignment","src":"3749:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3761:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3772:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3757:3:25"},"nodeType":"YulFunctionCall","src":"3757:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3749:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3791:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3822:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3827:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3818:3:25"},"nodeType":"YulFunctionCall","src":"3818:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"3831:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3814:3:25"},"nodeType":"YulFunctionCall","src":"3814:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3802:3:25"},"nodeType":"YulFunctionCall","src":"3802:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3784:6:25"},"nodeType":"YulFunctionCall","src":"3784:51:25"},"nodeType":"YulExpressionStatement","src":"3784:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3708:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3719:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3730:4:25","type":""}],"src":"3638:203:25"},{"body":{"nodeType":"YulBlock","src":"3950:425:25","statements":[{"body":{"nodeType":"YulBlock","src":"3996:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4005:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4008:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3998:6:25"},"nodeType":"YulFunctionCall","src":"3998:12:25"},"nodeType":"YulExpressionStatement","src":"3998:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3971:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3980:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3967:3:25"},"nodeType":"YulFunctionCall","src":"3967:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3992:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3963:3:25"},"nodeType":"YulFunctionCall","src":"3963:32:25"},"nodeType":"YulIf","src":"3960:52:25"},{"nodeType":"YulVariableDeclaration","src":"4021:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4047:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4034:12:25"},"nodeType":"YulFunctionCall","src":"4034:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4025:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4091:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4066:24:25"},"nodeType":"YulFunctionCall","src":"4066:31:25"},"nodeType":"YulExpressionStatement","src":"4066:31:25"},{"nodeType":"YulAssignment","src":"4106:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"4116:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4106:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"4130:47:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4162:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4173:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4158:3:25"},"nodeType":"YulFunctionCall","src":"4158:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4145:12:25"},"nodeType":"YulFunctionCall","src":"4145:32:25"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4134:7:25","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4211:7:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4186:24:25"},"nodeType":"YulFunctionCall","src":"4186:33:25"},"nodeType":"YulExpressionStatement","src":"4186:33:25"},{"nodeType":"YulAssignment","src":"4228:17:25","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4238:7:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4228:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"4254:47:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4286:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4297:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4282:3:25"},"nodeType":"YulFunctionCall","src":"4282:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4269:12:25"},"nodeType":"YulFunctionCall","src":"4269:32:25"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"4258:7:25","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"4335:7:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4310:24:25"},"nodeType":"YulFunctionCall","src":"4310:33:25"},"nodeType":"YulExpressionStatement","src":"4310:33:25"},{"nodeType":"YulAssignment","src":"4352:17:25","value":{"name":"value_2","nodeType":"YulIdentifier","src":"4362:7:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4352:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:25","type":""}],"src":"3846:529:25"},{"body":{"nodeType":"YulBlock","src":"4481:76:25","statements":[{"nodeType":"YulAssignment","src":"4491:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4503:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4514:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4499:3:25"},"nodeType":"YulFunctionCall","src":"4499:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4491:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4533:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"4544:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4526:6:25"},"nodeType":"YulFunctionCall","src":"4526:25:25"},"nodeType":"YulExpressionStatement","src":"4526:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4450:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4461:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4472:4:25","type":""}],"src":"4380:177:25"},{"body":{"nodeType":"YulBlock","src":"4643:170:25","statements":[{"body":{"nodeType":"YulBlock","src":"4689:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4698:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4701:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4691:6:25"},"nodeType":"YulFunctionCall","src":"4691:12:25"},"nodeType":"YulExpressionStatement","src":"4691:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4664:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4673:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4660:3:25"},"nodeType":"YulFunctionCall","src":"4660:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4656:3:25"},"nodeType":"YulFunctionCall","src":"4656:32:25"},"nodeType":"YulIf","src":"4653:52:25"},{"nodeType":"YulVariableDeclaration","src":"4714:29:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4733:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4727:5:25"},"nodeType":"YulFunctionCall","src":"4727:16:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4718:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4777:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4752:24:25"},"nodeType":"YulFunctionCall","src":"4752:31:25"},"nodeType":"YulExpressionStatement","src":"4752:31:25"},{"nodeType":"YulAssignment","src":"4792:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"4802:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4792:6:25"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4609:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4620:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4632:6:25","type":""}],"src":"4562:251:25"},{"body":{"nodeType":"YulBlock","src":"4992:237:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5009:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5020:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5002:6:25"},"nodeType":"YulFunctionCall","src":"5002:21:25"},"nodeType":"YulExpressionStatement","src":"5002:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5043:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5054:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5039:3:25"},"nodeType":"YulFunctionCall","src":"5039:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5059:2:25","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5032:6:25"},"nodeType":"YulFunctionCall","src":"5032:30:25"},"nodeType":"YulExpressionStatement","src":"5032:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5082:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5093:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5078:3:25"},"nodeType":"YulFunctionCall","src":"5078:18:25"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"5098:34:25","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5071:6:25"},"nodeType":"YulFunctionCall","src":"5071:62:25"},"nodeType":"YulExpressionStatement","src":"5071:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5153:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5164:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5149:3:25"},"nodeType":"YulFunctionCall","src":"5149:18:25"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"5169:17:25","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5142:6:25"},"nodeType":"YulFunctionCall","src":"5142:45:25"},"nodeType":"YulExpressionStatement","src":"5142:45:25"},{"nodeType":"YulAssignment","src":"5196:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5219:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:25"},"nodeType":"YulFunctionCall","src":"5204:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5196:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4969:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4983:4:25","type":""}],"src":"4818:411:25"},{"body":{"nodeType":"YulBlock","src":"5408:234:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5425:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5436:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5418:6:25"},"nodeType":"YulFunctionCall","src":"5418:21:25"},"nodeType":"YulExpressionStatement","src":"5418:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5459:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5470:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5455:3:25"},"nodeType":"YulFunctionCall","src":"5455:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5475:2:25","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5448:6:25"},"nodeType":"YulFunctionCall","src":"5448:30:25"},"nodeType":"YulExpressionStatement","src":"5448:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5498:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5509:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5494:3:25"},"nodeType":"YulFunctionCall","src":"5494:18:25"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"5514:34:25","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5487:6:25"},"nodeType":"YulFunctionCall","src":"5487:62:25"},"nodeType":"YulExpressionStatement","src":"5487:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5569:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5580:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5565:3:25"},"nodeType":"YulFunctionCall","src":"5565:18:25"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"5585:14:25","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5558:6:25"},"nodeType":"YulFunctionCall","src":"5558:42:25"},"nodeType":"YulExpressionStatement","src":"5558:42:25"},{"nodeType":"YulAssignment","src":"5609:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5621:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5632:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5617:3:25"},"nodeType":"YulFunctionCall","src":"5617:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5609:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5385:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5399:4:25","type":""}],"src":"5234:408:25"},{"body":{"nodeType":"YulBlock","src":"5821:234:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5838:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5849:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5831:6:25"},"nodeType":"YulFunctionCall","src":"5831:21:25"},"nodeType":"YulExpressionStatement","src":"5831:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5872:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5883:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5868:3:25"},"nodeType":"YulFunctionCall","src":"5868:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5888:2:25","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5861:6:25"},"nodeType":"YulFunctionCall","src":"5861:30:25"},"nodeType":"YulExpressionStatement","src":"5861:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5911:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5922:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5907:3:25"},"nodeType":"YulFunctionCall","src":"5907:18:25"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"5927:34:25","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5900:6:25"},"nodeType":"YulFunctionCall","src":"5900:62:25"},"nodeType":"YulExpressionStatement","src":"5900:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5982:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5993:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5978:3:25"},"nodeType":"YulFunctionCall","src":"5978:18:25"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"5998:14:25","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5971:6:25"},"nodeType":"YulFunctionCall","src":"5971:42:25"},"nodeType":"YulExpressionStatement","src":"5971:42:25"},{"nodeType":"YulAssignment","src":"6022:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6034:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6045:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6030:3:25"},"nodeType":"YulFunctionCall","src":"6030:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6022:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5798:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5812:4:25","type":""}],"src":"5647:408:25"},{"body":{"nodeType":"YulBlock","src":"6234:246:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6251:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6262:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6244:6:25"},"nodeType":"YulFunctionCall","src":"6244:21:25"},"nodeType":"YulExpressionStatement","src":"6244:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6285:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6296:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6281:3:25"},"nodeType":"YulFunctionCall","src":"6281:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"6301:2:25","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6274:6:25"},"nodeType":"YulFunctionCall","src":"6274:30:25"},"nodeType":"YulExpressionStatement","src":"6274:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6324:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6335:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6320:3:25"},"nodeType":"YulFunctionCall","src":"6320:18:25"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"6340:34:25","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6313:6:25"},"nodeType":"YulFunctionCall","src":"6313:62:25"},"nodeType":"YulExpressionStatement","src":"6313:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6395:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6406:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6391:3:25"},"nodeType":"YulFunctionCall","src":"6391:18:25"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"6411:26:25","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6384:6:25"},"nodeType":"YulFunctionCall","src":"6384:54:25"},"nodeType":"YulExpressionStatement","src":"6384:54:25"},{"nodeType":"YulAssignment","src":"6447:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6459:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6470:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6455:3:25"},"nodeType":"YulFunctionCall","src":"6455:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6447:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6211:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6225:4:25","type":""}],"src":"6060:420:25"},{"body":{"nodeType":"YulBlock","src":"6517:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6534:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6541:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6546:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6537:3:25"},"nodeType":"YulFunctionCall","src":"6537:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6527:6:25"},"nodeType":"YulFunctionCall","src":"6527:31:25"},"nodeType":"YulExpressionStatement","src":"6527:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6574:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6577:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6567:6:25"},"nodeType":"YulFunctionCall","src":"6567:15:25"},"nodeType":"YulExpressionStatement","src":"6567:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6598:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6601:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6591:6:25"},"nodeType":"YulFunctionCall","src":"6591:15:25"},"nodeType":"YulExpressionStatement","src":"6591:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6485:127:25"},{"body":{"nodeType":"YulBlock","src":"6649:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6666:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6673:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6678:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6669:3:25"},"nodeType":"YulFunctionCall","src":"6669:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6659:6:25"},"nodeType":"YulFunctionCall","src":"6659:31:25"},"nodeType":"YulExpressionStatement","src":"6659:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6706:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6709:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:25"},"nodeType":"YulFunctionCall","src":"6699:15:25"},"nodeType":"YulExpressionStatement","src":"6699:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6730:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6733:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6723:6:25"},"nodeType":"YulFunctionCall","src":"6723:15:25"},"nodeType":"YulExpressionStatement","src":"6723:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6617:127:25"},{"body":{"nodeType":"YulBlock","src":"6796:88:25","statements":[{"body":{"nodeType":"YulBlock","src":"6827:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6829:16:25"},"nodeType":"YulFunctionCall","src":"6829:18:25"},"nodeType":"YulExpressionStatement","src":"6829:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6812:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6823:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6819:3:25"},"nodeType":"YulFunctionCall","src":"6819:6:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6809:2:25"},"nodeType":"YulFunctionCall","src":"6809:17:25"},"nodeType":"YulIf","src":"6806:43:25"},{"nodeType":"YulAssignment","src":"6858:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6869:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"6876:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6865:3:25"},"nodeType":"YulFunctionCall","src":"6865:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6858:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6778:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6788:3:25","type":""}],"src":"6749:135:25"},{"body":{"nodeType":"YulBlock","src":"7063:236:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7080:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7091:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7073:6:25"},"nodeType":"YulFunctionCall","src":"7073:21:25"},"nodeType":"YulExpressionStatement","src":"7073:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7114:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7125:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7110:3:25"},"nodeType":"YulFunctionCall","src":"7110:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"7130:2:25","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7103:6:25"},"nodeType":"YulFunctionCall","src":"7103:30:25"},"nodeType":"YulExpressionStatement","src":"7103:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7153:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7164:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:25"},"nodeType":"YulFunctionCall","src":"7149:18:25"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"7169:34:25","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7142:6:25"},"nodeType":"YulFunctionCall","src":"7142:62:25"},"nodeType":"YulExpressionStatement","src":"7142:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7224:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7235:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:25"},"nodeType":"YulFunctionCall","src":"7220:18:25"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"7240:16:25","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7213:6:25"},"nodeType":"YulFunctionCall","src":"7213:44:25"},"nodeType":"YulExpressionStatement","src":"7213:44:25"},{"nodeType":"YulAssignment","src":"7266:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7278:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7289:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7274:3:25"},"nodeType":"YulFunctionCall","src":"7274:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7266:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7040:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7054:4:25","type":""}],"src":"6889:410:25"},{"body":{"nodeType":"YulBlock","src":"7411:87:25","statements":[{"nodeType":"YulAssignment","src":"7421:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7433:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7444:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7429:3:25"},"nodeType":"YulFunctionCall","src":"7429:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7421:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7463:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7478:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7486:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7474:3:25"},"nodeType":"YulFunctionCall","src":"7474:17:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7456:6:25"},"nodeType":"YulFunctionCall","src":"7456:36:25"},"nodeType":"YulExpressionStatement","src":"7456:36:25"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7380:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7391:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7402:4:25","type":""}],"src":"7304:194:25"},{"body":{"nodeType":"YulBlock","src":"7584:103:25","statements":[{"body":{"nodeType":"YulBlock","src":"7630:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7639:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7642:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7632:6:25"},"nodeType":"YulFunctionCall","src":"7632:12:25"},"nodeType":"YulExpressionStatement","src":"7632:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7605:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7614:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7601:3:25"},"nodeType":"YulFunctionCall","src":"7601:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7626:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7597:3:25"},"nodeType":"YulFunctionCall","src":"7597:32:25"},"nodeType":"YulIf","src":"7594:52:25"},{"nodeType":"YulAssignment","src":"7655:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7671:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7665:5:25"},"nodeType":"YulFunctionCall","src":"7665:16:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7655:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7550:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7561:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7573:6:25","type":""}],"src":"7503:184:25"},{"body":{"nodeType":"YulBlock","src":"7866:236:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7883:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7894:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7876:6:25"},"nodeType":"YulFunctionCall","src":"7876:21:25"},"nodeType":"YulExpressionStatement","src":"7876:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7917:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7928:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7913:3:25"},"nodeType":"YulFunctionCall","src":"7913:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"7933:2:25","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7906:6:25"},"nodeType":"YulFunctionCall","src":"7906:30:25"},"nodeType":"YulExpressionStatement","src":"7906:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7956:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7967:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7952:3:25"},"nodeType":"YulFunctionCall","src":"7952:18:25"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"7972:34:25","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7945:6:25"},"nodeType":"YulFunctionCall","src":"7945:62:25"},"nodeType":"YulExpressionStatement","src":"7945:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8027:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8038:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8023:3:25"},"nodeType":"YulFunctionCall","src":"8023:18:25"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"8043:16:25","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8016:6:25"},"nodeType":"YulFunctionCall","src":"8016:44:25"},"nodeType":"YulExpressionStatement","src":"8016:44:25"},{"nodeType":"YulAssignment","src":"8069:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8081:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8092:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8077:3:25"},"nodeType":"YulFunctionCall","src":"8077:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8069:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7843:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7857:4:25","type":""}],"src":"7692:410:25"},{"body":{"nodeType":"YulBlock","src":"8281:231:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8298:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8309:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8291:6:25"},"nodeType":"YulFunctionCall","src":"8291:21:25"},"nodeType":"YulExpressionStatement","src":"8291:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8332:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8343:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8328:3:25"},"nodeType":"YulFunctionCall","src":"8328:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"8348:2:25","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8321:6:25"},"nodeType":"YulFunctionCall","src":"8321:30:25"},"nodeType":"YulExpressionStatement","src":"8321:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8371:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8382:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8367:3:25"},"nodeType":"YulFunctionCall","src":"8367:18:25"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"8387:34:25","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8360:6:25"},"nodeType":"YulFunctionCall","src":"8360:62:25"},"nodeType":"YulExpressionStatement","src":"8360:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8442:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8453:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8438:3:25"},"nodeType":"YulFunctionCall","src":"8438:18:25"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"8458:11:25","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8431:6:25"},"nodeType":"YulFunctionCall","src":"8431:39:25"},"nodeType":"YulExpressionStatement","src":"8431:39:25"},{"nodeType":"YulAssignment","src":"8479:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8502:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:25"},"nodeType":"YulFunctionCall","src":"8487:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8479:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8258:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8272:4:25","type":""}],"src":"8107:405:25"},{"body":{"nodeType":"YulBlock","src":"8691:233:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8708:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8719:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8701:6:25"},"nodeType":"YulFunctionCall","src":"8701:21:25"},"nodeType":"YulExpressionStatement","src":"8701:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8742:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8753:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8738:3:25"},"nodeType":"YulFunctionCall","src":"8738:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"8758:2:25","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8731:6:25"},"nodeType":"YulFunctionCall","src":"8731:30:25"},"nodeType":"YulExpressionStatement","src":"8731:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8781:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8792:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8777:3:25"},"nodeType":"YulFunctionCall","src":"8777:18:25"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"8797:34:25","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8770:6:25"},"nodeType":"YulFunctionCall","src":"8770:62:25"},"nodeType":"YulExpressionStatement","src":"8770:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8852:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8863:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8848:3:25"},"nodeType":"YulFunctionCall","src":"8848:18:25"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"8868:13:25","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8841:6:25"},"nodeType":"YulFunctionCall","src":"8841:41:25"},"nodeType":"YulExpressionStatement","src":"8841:41:25"},{"nodeType":"YulAssignment","src":"8891:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8903:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8914:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8899:3:25"},"nodeType":"YulFunctionCall","src":"8899:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8891:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8668:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8682:4:25","type":""}],"src":"8517:407:25"},{"body":{"nodeType":"YulBlock","src":"8995:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9005:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9014:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9009:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9074:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9099:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"9104:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9095:3:25"},"nodeType":"YulFunctionCall","src":"9095:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9118:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"9123:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9114:3:25"},"nodeType":"YulFunctionCall","src":"9114:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9108:5:25"},"nodeType":"YulFunctionCall","src":"9108:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9088:6:25"},"nodeType":"YulFunctionCall","src":"9088:39:25"},"nodeType":"YulExpressionStatement","src":"9088:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9035:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"9038:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9032:2:25"},"nodeType":"YulFunctionCall","src":"9032:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9046:19:25","statements":[{"nodeType":"YulAssignment","src":"9048:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9057:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"9060:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9053:3:25"},"nodeType":"YulFunctionCall","src":"9053:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9048:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"9028:3:25","statements":[]},"src":"9024:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9157:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9162:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9153:3:25"},"nodeType":"YulFunctionCall","src":"9153:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"9171:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9146:6:25"},"nodeType":"YulFunctionCall","src":"9146:27:25"},"nodeType":"YulExpressionStatement","src":"9146:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8973:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8978:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8983:6:25","type":""}],"src":"8929:250:25"},{"body":{"nodeType":"YulBlock","src":"9573:423:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9590:3:25"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"9595:25:25","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9583:6:25"},"nodeType":"YulFunctionCall","src":"9583:38:25"},"nodeType":"YulExpressionStatement","src":"9583:38:25"},{"nodeType":"YulVariableDeclaration","src":"9630:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9650:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9644:5:25"},"nodeType":"YulFunctionCall","src":"9644:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9634:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9705:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9713:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9701:3:25"},"nodeType":"YulFunctionCall","src":"9701:17:25"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9724:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9729:2:25","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9720:3:25"},"nodeType":"YulFunctionCall","src":"9720:12:25"},{"name":"length","nodeType":"YulIdentifier","src":"9734:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9666:34:25"},"nodeType":"YulFunctionCall","src":"9666:75:25"},"nodeType":"YulExpressionStatement","src":"9666:75:25"},{"nodeType":"YulVariableDeclaration","src":"9750:26:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9764:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9769:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9760:3:25"},"nodeType":"YulFunctionCall","src":"9760:16:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9754:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9796:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"9800:2:25","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:25"},"nodeType":"YulFunctionCall","src":"9792:11:25"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"9805:19:25","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9785:6:25"},"nodeType":"YulFunctionCall","src":"9785:40:25"},"nodeType":"YulExpressionStatement","src":"9785:40:25"},{"nodeType":"YulVariableDeclaration","src":"9834:29:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9856:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9850:5:25"},"nodeType":"YulFunctionCall","src":"9850:13:25"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"9838:8:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9911:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9919:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9907:3:25"},"nodeType":"YulFunctionCall","src":"9907:17:25"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9930:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"9934:2:25","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:25"},"nodeType":"YulFunctionCall","src":"9926:11:25"},{"name":"length_1","nodeType":"YulIdentifier","src":"9939:8:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9872:34:25"},"nodeType":"YulFunctionCall","src":"9872:76:25"},"nodeType":"YulExpressionStatement","src":"9872:76:25"},{"nodeType":"YulAssignment","src":"9957:33:25","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9972:2:25"},{"name":"length_1","nodeType":"YulIdentifier","src":"9976:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9968:3:25"},"nodeType":"YulFunctionCall","src":"9968:17:25"},{"kind":"number","nodeType":"YulLiteral","src":"9987:2:25","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9964:3:25"},"nodeType":"YulFunctionCall","src":"9964:26:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9957:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9541:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9546:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9554:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9565:3:25","type":""}],"src":"9184:812:25"},{"body":{"nodeType":"YulBlock","src":"10122:275:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10139:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10150:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10132:6:25"},"nodeType":"YulFunctionCall","src":"10132:21:25"},"nodeType":"YulExpressionStatement","src":"10132:21:25"},{"nodeType":"YulVariableDeclaration","src":"10162:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10182:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10176:5:25"},"nodeType":"YulFunctionCall","src":"10176:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10166:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10209:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10220:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10205:3:25"},"nodeType":"YulFunctionCall","src":"10205:18:25"},{"name":"length","nodeType":"YulIdentifier","src":"10225:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10198:6:25"},"nodeType":"YulFunctionCall","src":"10198:34:25"},"nodeType":"YulExpressionStatement","src":"10198:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10280:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10288:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10276:3:25"},"nodeType":"YulFunctionCall","src":"10276:15:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10297:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10308:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10293:3:25"},"nodeType":"YulFunctionCall","src":"10293:18:25"},{"name":"length","nodeType":"YulIdentifier","src":"10313:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10241:34:25"},"nodeType":"YulFunctionCall","src":"10241:79:25"},"nodeType":"YulExpressionStatement","src":"10241:79:25"},{"nodeType":"YulAssignment","src":"10329:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10345:9:25"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10364:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10372:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10360:3:25"},"nodeType":"YulFunctionCall","src":"10360:15:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10381:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10377:3:25"},"nodeType":"YulFunctionCall","src":"10377:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10356:3:25"},"nodeType":"YulFunctionCall","src":"10356:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10341:3:25"},"nodeType":"YulFunctionCall","src":"10341:45:25"},{"kind":"number","nodeType":"YulLiteral","src":"10388:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10337:3:25"},"nodeType":"YulFunctionCall","src":"10337:54:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10329:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10091:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10102:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10113:4:25","type":""}],"src":"10001:396:25"},{"body":{"nodeType":"YulBlock","src":"10576:235:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10593:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10604:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10586:6:25"},"nodeType":"YulFunctionCall","src":"10586:21:25"},"nodeType":"YulExpressionStatement","src":"10586:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10627:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10638:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10623:3:25"},"nodeType":"YulFunctionCall","src":"10623:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"10643:2:25","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10616:6:25"},"nodeType":"YulFunctionCall","src":"10616:30:25"},"nodeType":"YulExpressionStatement","src":"10616:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10677:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:25"},"nodeType":"YulFunctionCall","src":"10662:18:25"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"10682:34:25","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10655:6:25"},"nodeType":"YulFunctionCall","src":"10655:62:25"},"nodeType":"YulExpressionStatement","src":"10655:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10748:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10733:3:25"},"nodeType":"YulFunctionCall","src":"10733:18:25"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"10753:15:25","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10726:6:25"},"nodeType":"YulFunctionCall","src":"10726:43:25"},"nodeType":"YulExpressionStatement","src":"10726:43:25"},{"nodeType":"YulAssignment","src":"10778:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10790:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10801:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10786:3:25"},"nodeType":"YulFunctionCall","src":"10786:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10778:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10553:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10567:4:25","type":""}],"src":"10402:409:25"},{"body":{"nodeType":"YulBlock","src":"10868:116:25","statements":[{"nodeType":"YulAssignment","src":"10878:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10893:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"10896:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10889:3:25"},"nodeType":"YulFunctionCall","src":"10889:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"10878:7:25"}]},{"body":{"nodeType":"YulBlock","src":"10956:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10958:16:25"},"nodeType":"YulFunctionCall","src":"10958:18:25"},"nodeType":"YulExpressionStatement","src":"10958:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10927:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10920:6:25"},"nodeType":"YulFunctionCall","src":"10920:9:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10934:1:25"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"10941:7:25"},{"name":"x","nodeType":"YulIdentifier","src":"10950:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10937:3:25"},"nodeType":"YulFunctionCall","src":"10937:15:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10931:2:25"},"nodeType":"YulFunctionCall","src":"10931:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10917:2:25"},"nodeType":"YulFunctionCall","src":"10917:37:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10910:6:25"},"nodeType":"YulFunctionCall","src":"10910:45:25"},"nodeType":"YulIf","src":"10907:71:25"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10847:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"10850:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"10856:7:25","type":""}],"src":"10816:168:25"},{"body":{"nodeType":"YulBlock","src":"11037:77:25","statements":[{"nodeType":"YulAssignment","src":"11047:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11058:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"11061:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11054:3:25"},"nodeType":"YulFunctionCall","src":"11054:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11047:3:25"}]},{"body":{"nodeType":"YulBlock","src":"11086:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11088:16:25"},"nodeType":"YulFunctionCall","src":"11088:18:25"},"nodeType":"YulExpressionStatement","src":"11088:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11078:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"11081:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11075:2:25"},"nodeType":"YulFunctionCall","src":"11075:10:25"},"nodeType":"YulIf","src":"11072:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11020:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"11023:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11029:3:25","type":""}],"src":"10989:125:25"},{"body":{"nodeType":"YulBlock","src":"11166:89:25","statements":[{"body":{"nodeType":"YulBlock","src":"11193:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11195:16:25"},"nodeType":"YulFunctionCall","src":"11195:18:25"},"nodeType":"YulExpressionStatement","src":"11195:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11186:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11179:6:25"},"nodeType":"YulFunctionCall","src":"11179:13:25"},"nodeType":"YulIf","src":"11176:39:25"},{"nodeType":"YulAssignment","src":"11224:25:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11235:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11246:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11242:3:25"},"nodeType":"YulFunctionCall","src":"11242:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11231:3:25"},"nodeType":"YulFunctionCall","src":"11231:18:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11224:3:25"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11148:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11158:3:25","type":""}],"src":"11119:136:25"},{"body":{"nodeType":"YulBlock","src":"11434:182:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11451:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11462:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11444:6:25"},"nodeType":"YulFunctionCall","src":"11444:21:25"},"nodeType":"YulExpressionStatement","src":"11444:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11485:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11496:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11481:3:25"},"nodeType":"YulFunctionCall","src":"11481:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"11501:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11474:6:25"},"nodeType":"YulFunctionCall","src":"11474:30:25"},"nodeType":"YulExpressionStatement","src":"11474:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11524:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11535:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11520:3:25"},"nodeType":"YulFunctionCall","src":"11520:18:25"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"11540:34:25","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11513:6:25"},"nodeType":"YulFunctionCall","src":"11513:62:25"},"nodeType":"YulExpressionStatement","src":"11513:62:25"},{"nodeType":"YulAssignment","src":"11584:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11596:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11607:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11592:3:25"},"nodeType":"YulFunctionCall","src":"11592:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11584:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11411:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11425:4:25","type":""}],"src":"11260:356:25"},{"body":{"nodeType":"YulBlock","src":"11670:79:25","statements":[{"nodeType":"YulAssignment","src":"11680:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11692:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"11695:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11688:3:25"},"nodeType":"YulFunctionCall","src":"11688:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11680:4:25"}]},{"body":{"nodeType":"YulBlock","src":"11721:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11723:16:25"},"nodeType":"YulFunctionCall","src":"11723:18:25"},"nodeType":"YulExpressionStatement","src":"11723:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"11712:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"11718:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11709:2:25"},"nodeType":"YulFunctionCall","src":"11709:11:25"},"nodeType":"YulIf","src":"11706:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11652:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"11655:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11661:4:25","type":""}],"src":"11621:128:25"},{"body":{"nodeType":"YulBlock","src":"11786:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11803:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11810:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11815:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11806:3:25"},"nodeType":"YulFunctionCall","src":"11806:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11796:6:25"},"nodeType":"YulFunctionCall","src":"11796:31:25"},"nodeType":"YulExpressionStatement","src":"11796:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11843:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11846:4:25","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11836:6:25"},"nodeType":"YulFunctionCall","src":"11836:15:25"},"nodeType":"YulExpressionStatement","src":"11836:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11867:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11870:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11860:6:25"},"nodeType":"YulFunctionCall","src":"11860:15:25"},"nodeType":"YulExpressionStatement","src":"11860:15:25"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"11754:127:25"},{"body":{"nodeType":"YulBlock","src":"12023:150:25","statements":[{"nodeType":"YulVariableDeclaration","src":"12033:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12053:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12047:5:25"},"nodeType":"YulFunctionCall","src":"12047:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12037:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12108:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12116:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12104:3:25"},"nodeType":"YulFunctionCall","src":"12104:17:25"},{"name":"pos","nodeType":"YulIdentifier","src":"12123:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"12128:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12069:34:25"},"nodeType":"YulFunctionCall","src":"12069:66:25"},"nodeType":"YulExpressionStatement","src":"12069:66:25"},{"nodeType":"YulAssignment","src":"12144:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12155:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"12160:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12151:3:25"},"nodeType":"YulFunctionCall","src":"12151:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12144:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11999:3:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12004:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12015:3:25","type":""}],"src":"11886:287:25"},{"body":{"nodeType":"YulBlock","src":"12352:179:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12369:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12380:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12362:6:25"},"nodeType":"YulFunctionCall","src":"12362:21:25"},"nodeType":"YulExpressionStatement","src":"12362:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12403:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12414:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12399:3:25"},"nodeType":"YulFunctionCall","src":"12399:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"12419:2:25","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12392:6:25"},"nodeType":"YulFunctionCall","src":"12392:30:25"},"nodeType":"YulExpressionStatement","src":"12392:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:25"},"nodeType":"YulFunctionCall","src":"12438:18:25"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"12458:31:25","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12431:6:25"},"nodeType":"YulFunctionCall","src":"12431:59:25"},"nodeType":"YulExpressionStatement","src":"12431:59:25"},{"nodeType":"YulAssignment","src":"12499:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12511:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12522:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12507:3:25"},"nodeType":"YulFunctionCall","src":"12507:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12499:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12329:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12343:4:25","type":""}],"src":"12178:353:25"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1530":[{"length":32,"start":1686},{"length":32,"start":1750},{"length":32,"start":1909},{"length":32,"start":1973},{"length":32,"start":2116}]},"linkReferences":{},"object":"60806040526004361061011f5760003560e01c80636caacbe7116100a0578063b908afa811610064578063b908afa81461032e578063c0c53b8b14610351578063ca15c87314610371578063d547741f14610391578063f68e9553146103b157600080fd5b80636caacbe7146102815780637f17caa7146102a15780639010d07c146102c157806391d14854146102f9578063a217fddf1461031957600080fd5b806336568abe116100e757806336568abe146101f95780633659cfe6146102195780634f1ef2861461023957806352d1902d1461024c5780636aa700961461026157600080fd5b806301ffc9a7146101245780630488d9741461015957806305a3b8091461017b578063248a9ca31461019b5780632f2ff15d146101d9575b600080fd5b34801561013057600080fd5b5061014461013f36600461172c565b6103d6565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061017961017436600461176b565b610401565b005b34801561018757600080fd5b5061014461019636600461176b565b61050a565b3480156101a757600080fd5b506101cb6101b6366004611788565b60009081526065602052604090206001015490565b604051908152602001610150565b3480156101e557600080fd5b506101796101f43660046117a1565b6105df565b34801561020557600080fd5b506101796102143660046117a1565b610609565b34801561022557600080fd5b5061017961023436600461176b565b61068c565b6101796102473660046117e7565b61076b565b34801561025857600080fd5b506101cb610837565b34801561026d57600080fd5b5061017961027c36600461176b565b6108ea565b34801561028d57600080fd5b5061017961029c3660046118ab565b6109de565b3480156102ad57600080fd5b506101796102bc3660046118ab565b610ad5565b3480156102cd57600080fd5b506102e16102dc366004611920565b610bcf565b6040516001600160a01b039091168152602001610150565b34801561030557600080fd5b506101446103143660046117a1565b610bee565b34801561032557600080fd5b506101cb600081565b34801561033a57600080fd5b506101cb6b555047524144455f524f4c4560a01b81565b34801561035d57600080fd5b5061017961036c366004611942565b610c19565b34801561037d57600080fd5b506101cb61038c366004611788565b610d73565b34801561039d57600080fd5b506101796103ac3660046117a1565b610d8a565b3480156103bd57600080fd5b506101cb6d5245474953545241525f524f4c4560901b81565b60006001600160e01b031982166305a3b80960e01b14806103fb57506103fb82610daf565b92915050565b6d5245474953545241525f524f4c4560901b61041c81610dd4565b813f600081815261012f60209081526040808320805460ff191660011790558051639061112760e01b815290516001600160a01b03871692639061112792600480820193918290030181865afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e919061198d565b6001600160a01b03818116600090815261012e6020908152604091829020805460ff1916600190811790915591519182529293509086169184917f52a9758e33d80a562e98b34d922581e414149b9c485e5929682a72acb451c31591015b60405180910390a350505050565b6001600160a01b038116600090815261012d602052604081205460ff161561053457506001919050565b813f600081815261012f602052604090205460ff16156105d6576000836001600160a01b031663906111276040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b2919061198d565b6001600160a01b0316600090815261012e602052604090205460ff16949350505050565b50600092915050565b6000828152606560205260409020600101546105fa81610dd4565b6106048383610dde565b505050565b6001600160a01b038116331461067e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106888282610e00565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106d45760405162461bcd60e51b8152600401610675906119aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661071d600080516020611bf3833981519152546001600160a01b031690565b6001600160a01b0316146107435760405162461bcd60e51b8152600401610675906119f6565b61074c81610e22565b6040805160008082526020820190925261076891839190610e3b565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107b35760405162461bcd60e51b8152600401610675906119aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107fc600080516020611bf3833981519152546001600160a01b031690565b6001600160a01b0316146108225760405162461bcd60e51b8152600401610675906119f6565b61082b82610e22565b61068882826001610e3b565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d75760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610675565b50600080516020611bf383398151915290565b6d5245474953545241525f524f4c4560901b61090581610dd4565b813f600081815261012f60209081526040808320805460ff191690558051639061112760e01b815290516001600160a01b03871692639061112792600480820193918290030181865afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610984919061198d565b6001600160a01b03818116600090815261012e60209081526040808320805460ff19169055519182529293509086169184917f52a9758e33d80a562e98b34d922581e414149b9c485e5929682a72acb451c31591016104fc565b6d5245474953545241525f524f4c4560901b6109f981610dd4565b60005b82811015610acf5761012d6000858584818110610a1b57610a1b611a42565b9050602002016020810190610a30919061176b565b6001600160a01b031681526020810191909152604001600020805460ff19169055838382818110610a6357610a63611a42565b9050602002016020810190610a78919061176b565b6001600160a01b03167f218a1635b2755f3fe7bdb77932fcd6ffca69760533404fe817f7404315bf6df06000604051610ab5911515815260200190565b60405180910390a280610ac781611a6e565b9150506109fc565b50505050565b6d5245474953545241525f524f4c4560901b610af081610dd4565b60005b82811015610acf57600161012d6000868685818110610b1457610b14611a42565b9050602002016020810190610b29919061176b565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055838382818110610b6357610b63611a42565b9050602002016020810190610b78919061176b565b6001600160a01b03167f218a1635b2755f3fe7bdb77932fcd6ffca69760533404fe817f7404315bf6df06001604051610bb5911515815260200190565b60405180910390a280610bc781611a6e565b915050610af3565b6000828152609760205260408120610be79083610fa6565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff1615808015610c395750600054600160ff909116105b80610c535750303b158015610c53575060005460ff166001145b610cb65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610675565b6000805460ff191660011790558015610cd9576000805461ff0019166101001790555b610ce1610fb2565b610ce9610fb2565b610cf4600085610dde565b610d0d6b555047524144455f524f4c4560a01b84610dde565b610d286d5245474953545241525f524f4c4560901b83610dde565b8015610acf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60008181526097602052604081206103fb9061101f565b600082815260656020526040902060010154610da581610dd4565b6106048383610e00565b60006001600160e01b03198216635a05180f60e01b14806103fb57506103fb82611029565b610768813361105e565b610de882826110b7565b6000828152609760205260409020610604908261113d565b610e0a8282611152565b600082815260976020526040902061060490826111b9565b6b555047524144455f524f4c4560a01b61068881610dd4565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e6e57610604836111ce565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ec8575060408051601f3d908101601f19168201909252610ec591810190611a87565b60015b610f2b5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610675565b600080516020611bf38339815191528114610f9a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610675565b5061060483838361126a565b6000610be7838361128f565b600054610100900460ff1661101d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610675565b565b60006103fb825490565b60006001600160e01b03198216637965db0b60e01b14806103fb57506301ffc9a760e01b6001600160e01b03198316146103fb565b6110688282610bee565b61068857611075816112b9565b6110808360206112cb565b604051602001611091929190611ac4565b60408051601f198184030181529082905262461bcd60e51b825261067591600401611b39565b6110c18282610bee565b6106885760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556110f93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610be7836001600160a01b038416611467565b61115c8282610bee565b156106885760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610be7836001600160a01b0384166114b6565b6001600160a01b0381163b61123b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610675565b600080516020611bf383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611273836115a9565b6000825111806112805750805b1561060457610acf83836115e9565b60008260000182815481106112a6576112a6611a42565b9060005260206000200154905092915050565b60606103fb6001600160a01b03831660145b606060006112da836002611b6c565b6112e5906002611b83565b67ffffffffffffffff8111156112fd576112fd6117d1565b6040519080825280601f01601f191660200182016040528015611327576020820181803683370190505b509050600360fc1b8160008151811061134257611342611a42565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061137157611371611a42565b60200101906001600160f81b031916908160001a9053506000611395846002611b6c565b6113a0906001611b83565b90505b6001811115611418576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113d4576113d4611a42565b1a60f81b8282815181106113ea576113ea611a42565b60200101906001600160f81b031916908160001a90535060049490941c9361141181611b96565b90506113a3565b508315610be75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610675565b60008181526001830160205260408120546114ae575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103fb565b5060006103fb565b6000818152600183016020526040812054801561159f5760006114da600183611bad565b85549091506000906114ee90600190611bad565b905081811461155357600086600001828154811061150e5761150e611a42565b906000526020600020015490508087600001848154811061153157611531611a42565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061156457611564611bc0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103fb565b60009150506103fb565b6115b2816111ce565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610be78383604051806060016040528060278152602001611c13602791396060600080856001600160a01b0316856040516116269190611bd6565b600060405180830381855af49150503d8060008114611661576040519150601f19603f3d011682016040523d82523d6000602084013e611666565b606091505b509150915061167786838387611681565b9695505050505050565b606083156116f05782516000036116e9576001600160a01b0385163b6116e95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610675565b50816116fa565b6116fa8383611702565b949350505050565b8151156117125781518083602001fd5b8060405162461bcd60e51b81526004016106759190611b39565b60006020828403121561173e57600080fd5b81356001600160e01b031981168114610be757600080fd5b6001600160a01b038116811461076857600080fd5b60006020828403121561177d57600080fd5b8135610be781611756565b60006020828403121561179a57600080fd5b5035919050565b600080604083850312156117b457600080fd5b8235915060208301356117c681611756565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156117fa57600080fd5b823561180581611756565b9150602083013567ffffffffffffffff8082111561182257600080fd5b818501915085601f83011261183657600080fd5b813581811115611848576118486117d1565b604051601f8201601f19908116603f01168101908382118183101715611870576118706117d1565b8160405282815288602084870101111561188957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080602083850312156118be57600080fd5b823567ffffffffffffffff808211156118d657600080fd5b818501915085601f8301126118ea57600080fd5b8135818111156118f957600080fd5b8660208260051b850101111561190e57600080fd5b60209290920196919550909350505050565b6000806040838503121561193357600080fd5b50508035926020909101359150565b60008060006060848603121561195757600080fd5b833561196281611756565b9250602084013561197281611756565b9150604084013561198281611756565b809150509250925092565b60006020828403121561199f57600080fd5b8151610be781611756565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a8057611a80611a58565b5060010190565b600060208284031215611a9957600080fd5b5051919050565b60005b83811015611abb578181015183820152602001611aa3565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611afc816017850160208801611aa0565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b2d816028840160208801611aa0565b01602801949350505050565b6020815260008251806020840152611b58816040850160208701611aa0565b601f01601f19169190910160400192915050565b80820281158282048414176103fb576103fb611a58565b808201808211156103fb576103fb611a58565b600081611ba557611ba5611a58565b506000190190565b818103818111156103fb576103fb611a58565b634e487b7160e01b600052603160045260246000fd5b60008251611be8818460208701611aa0565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202c0309543a2d84dd26cd09887918d4b72da3aaa4e17fb534e5e161334ce6e3f964736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CAACBE7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB908AFA8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB908AFA8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xF68E9553 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6CAACBE7 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x7F17CAA7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x6AA70096 EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x488D974 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x5A3B809 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x179 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x837 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1920 JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1942 JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0xD73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xD8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A3B809 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x41C DUP2 PUSH2 0xDD4 JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD PUSH4 0x90611127 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x90611127 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP3 SWAP4 POP SWAP1 DUP7 AND SWAP2 DUP5 SWAP2 PUSH32 0x52A9758E33D80A562E98B34D922581E414149B9C485E5929682A72ACB451C315 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x534 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90611127 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5FA DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xDDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH2 0xE00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x6D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x74C DUP2 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x768 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xE3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x82B DUP3 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH1 0x1 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x905 DUP2 PUSH2 0xDD4 JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH4 0x90611127 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x90611127 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x960 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE SWAP3 SWAP4 POP SWAP1 DUP7 AND SWAP2 DUP5 SWAP2 PUSH32 0x52A9758E33D80A562E98B34D922581E414149B9C485E5929682A72ACB451C315 SWAP2 ADD PUSH2 0x4FC JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x9F9 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH2 0x12D PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA1B JUMPI PUSH2 0xA1B PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xA63 JUMPI PUSH2 0xA63 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x218A1635B2755F3FE7BDB77932FCD6FFCA69760533404FE817F7404315BF6DF0 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xAB5 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0xAC7 DUP2 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0xAF0 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH1 0x1 PUSH2 0x12D PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB14 JUMPI PUSH2 0xB14 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xB63 JUMPI PUSH2 0xB63 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x218A1635B2755F3FE7BDB77932FCD6FFCA69760533404FE817F7404315BF6DF0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xBB5 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0xBC7 DUP2 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xBE7 SWAP1 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xC39 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xC53 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xCE1 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCE9 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCF4 PUSH1 0x0 DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xD0D PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL DUP5 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xD28 PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL DUP4 PUSH2 0xDDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xACF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3FB SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDA5 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x768 DUP2 CALLER PUSH2 0x105E JUMP JUMPDEST PUSH2 0xDE8 DUP3 DUP3 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x604 SWAP1 DUP3 PUSH2 0x113D JUMP JUMPDEST PUSH2 0xE0A DUP3 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x604 SWAP1 DUP3 PUSH2 0x11B9 JUMP JUMPDEST PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL PUSH2 0x688 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE6E JUMPI PUSH2 0x604 DUP4 PUSH2 0x11CE JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEC8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEC5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST POP PUSH2 0x604 DUP4 DUP4 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 DUP4 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1068 DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH2 0x1075 DUP2 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x1080 DUP4 PUSH1 0x20 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1091 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x675 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x10C1 DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x10F9 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x115C DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x123B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1273 DUP4 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1280 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x604 JUMPI PUSH2 0xACF DUP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12A6 JUMPI PUSH2 0x12A6 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x12DA DUP4 PUSH1 0x2 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x12E5 SWAP1 PUSH1 0x2 PUSH2 0x1B83 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12FD JUMPI PUSH2 0x12FD PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1327 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1342 JUMPI PUSH2 0x1342 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1371 JUMPI PUSH2 0x1371 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1395 DUP5 PUSH1 0x2 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x13A0 SWAP1 PUSH1 0x1 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1418 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x13D4 JUMPI PUSH2 0x13D4 PUSH2 0x1A42 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1411 DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP1 POP PUSH2 0x13A3 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x14AE JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3FB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 PUSH2 0x14DA PUSH1 0x1 DUP4 PUSH2 0x1BAD JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x14EE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1553 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x150E JUMPI PUSH2 0x150E PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1531 JUMPI PUSH2 0x1531 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1564 JUMPI PUSH2 0x1564 PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x15B2 DUP2 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBE7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C13 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1661 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1677 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1681 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x16F0 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x16E9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST POP DUP2 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x16FA DUP4 DUP4 PUSH2 0x1702 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1712 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBE7 DUP2 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17C6 DUP2 PUSH2 0x1756 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1805 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH2 0x1848 PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1870 JUMPI PUSH2 0x1870 PUSH2 0x17D1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x190E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1962 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1972 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1982 DUP2 PUSH2 0x1756 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBE7 DUP2 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A80 JUMPI PUSH2 0x1A80 PUSH2 0x1A58 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ABB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AA3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1AFC DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1B2D DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B58 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1BA5 JUMPI PUSH2 0x1BA5 PUSH2 0x1A58 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1BE8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A26469706673582212202C SUB MULMOD SLOAD GASPRICE 0x2D DUP5 0xDD 0x26 0xCD MULMOD DUP9 PUSH26 0x18D4B72DA3AAA4E17FB534E5E161334CE6E3F964736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"894:6498:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6667:264;;;;;;;;;;-1:-1:-1;6667:264:2;;;;;:::i;:::-;;:::i;:::-;;;470:14:25;;463:22;445:41;;433:2;418:18;6667:264:2;;;;;;;;4217:562;;;;;;;;;;-1:-1:-1;4217:562:2;;;;;:::i;:::-;;:::i;:::-;;5843:681;;;;;;;;;;-1:-1:-1;5843:681:2;;;;;:::i;:::-;;:::i;4855:129:7:-;;;;;;;;;;-1:-1:-1;4855:129:7;;;;;:::i;:::-;4929:7;4955:12;;;:6;:12;;;;;:22;;;;4855:129;;;;1216:25:25;;;1204:2;1189:18;4855:129:7;1070:177:25;5280:145:7;;;;;;;;;;-1:-1:-1;5280:145:7;;;;;:::i;:::-;;:::i;6389:214::-;;;;;;;;;;-1:-1:-1;6389:214:7;;;;;:::i;:::-;;:::i;3408:195:15:-;;;;;;;;;;-1:-1:-1;3408:195:15;;;;;:::i;:::-;;:::i;3922:220::-;;;;;;:::i;:::-;;:::i;3027:131::-;;;;;;;;;;;;;:::i;5052:568:2:-;;;;;;;;;;-1:-1:-1;5052:568:2;;;;;:::i;:::-;;:::i;3435:359::-;;;;;;;;;;-1:-1:-1;3435:359:2;;;;;:::i;:::-;;:::i;2977:300::-;;;;;;;;;;-1:-1:-1;2977:300:2;;;;;:::i;:::-;;:::i;1791:151:6:-;;;;;;;;;;-1:-1:-1;1791:151:6;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3802:32:25;;;3784:51;;3772:2;3757:18;1791:151:6;3638:203:25;3350:145:7;;;;;;;;;;-1:-1:-1;3350:145:7;;;;;:::i;:::-;;:::i;2320:49::-;;;;;;;;;;-1:-1:-1;2320:49:7;2365:4;2320:49;;1705:62:2;;;;;;;;;;;;-1:-1:-1;;;1705:62:2;;2439:336;;;;;;;;;;-1:-1:-1;2439:336:2;;;;;:::i;:::-;;:::i;2110:140:6:-;;;;;;;;;;-1:-1:-1;2110:140:6;;;;;:::i;:::-;;:::i;5705:147:7:-;;;;;;;;;;-1:-1:-1;5705:147:7;;;;;:::i;:::-;;:::i;1573:66:2:-;;;;;;;;;;;;-1:-1:-1;;;1573:66:2;;6667:264;6810:4;-1:-1:-1;;;;;;6833:51:2;;-1:-1:-1;;;6833:51:2;;:91;;;6888:36;6912:11;6888:23;:36::i;:::-;6826:98;6667:264;-1:-1:-1;;6667:264:2:o;4217:562::-;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;:::-;4462:23:2;::::1;4345:16;4504:27:::0;;;:17:::1;:27;::::0;;;;;;;:34;;-1:-1:-1;;4504:34:2::1;4534:4;4504:34;::::0;;4603:50;;-1:-1:-1;;;4603:50:2;;;;-1:-1:-1;;;;;4603:48:2;::::1;::::0;::::1;::::0;:50:::1;::::0;;::::1;::::0;;;;;;;:48;:50:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4663:36:2;;::::1;;::::0;;;:30:::1;:36;::::0;;;;;;;;:43;;-1:-1:-1;;4663:43:2::1;4702:4;4663:43:::0;;::::1;::::0;;;4722:50;;445:41:25;;;4663:36:2;;-1:-1:-1;4722:50:2;;::::1;::::0;4745:8;;4722:50:::1;::::0;418:18:25;4722:50:2::1;;;;;;;;4301:478;;4217:562:::0;;:::o;5843:681::-;-1:-1:-1;;;;;5934:24:2;;5914:4;5934:24;;;:16;:24;;;;;;;;5930:66;;;-1:-1:-1;5981:4:2;;5843:681;-1:-1:-1;5843:681:2:o;5930:66::-;6189:19;;6072:16;6231:27;;;:17;:27;;;;;;;;6227:268;;;6365:12;6393:6;-1:-1:-1;;;;;6380:44:2;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6448:36:2;;;;;:30;:36;;;;;;;;;5843:681;-1:-1:-1;;;;5843:681:2:o;6227:268::-;-1:-1:-1;6512:5:2;;5843:681;-1:-1:-1;;5843:681:2:o;5280:145:7:-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5393:25:::1;5404:4;5410:7;5393:10;:25::i;:::-;5280:145:::0;;;:::o;6389:214::-;-1:-1:-1;;;;;6484:23:7;;965:10:17;6484:23:7;6476:83;;;;-1:-1:-1;;;6476:83:7;;5020:2:25;6476:83:7;;;5002:21:25;5059:2;5039:18;;;5032:30;5098:34;5078:18;;;5071:62;-1:-1:-1;;;5149:18:25;;;5142:45;5204:19;;6476:83:7;;;;;;;;;6570:26;6582:4;6588:7;6570:11;:26::i;:::-;6389:214;;:::o;3408:195:15:-;-1:-1:-1;;;;;1764:6:15;1747:23;1755:4;1747:23;1739:80;;;;-1:-1:-1;;;1739:80:15;;;;;;;:::i;:::-;1861:6;-1:-1:-1;;;;;1837:30:15;:20;-1:-1:-1;;;;;;;;;;;1557:65:12;-1:-1:-1;;;;;1557:65:12;;1478:151;1837:20:15;-1:-1:-1;;;;;1837:30:15;;1829:87;;;;-1:-1:-1;;;1829:87:15;;;;;;;:::i;:::-;3489:36:::1;3507:17;3489;:36::i;:::-;3576:12;::::0;;3586:1:::1;3576:12:::0;;;::::1;::::0;::::1;::::0;;;3535:61:::1;::::0;3557:17;;3576:12;3535:21:::1;:61::i;:::-;3408:195:::0;:::o;3922:220::-;-1:-1:-1;;;;;1764:6:15;1747:23;1755:4;1747:23;1739:80;;;;-1:-1:-1;;;1739:80:15;;;;;;;:::i;:::-;1861:6;-1:-1:-1;;;;;1837:30:15;:20;-1:-1:-1;;;;;;;;;;;1557:65:12;-1:-1:-1;;;;;1557:65:12;;1478:151;1837:20:15;-1:-1:-1;;;;;1837:30:15;;1829:87;;;;-1:-1:-1;;;1829:87:15;;;;;;;:::i;:::-;4037:36:::1;4055:17;4037;:36::i;:::-;4083:52;4105:17;4124:4;4130;4083:21;:52::i;3027:131::-:0;3105:7;2190:4;-1:-1:-1;;;;;2199:6:15;2182:23;;2174:92;;;;-1:-1:-1;;;2174:92:15;;6262:2:25;2174:92:15;;;6244:21:25;6301:2;6281:18;;;6274:30;6340:34;6320:18;;;6313:62;6411:26;6391:18;;;6384:54;6455:19;;2174:92:15;6060:420:25;2174:92:15;-1:-1:-1;;;;;;;;;;;;3027:131:15;:::o;5052:568:2:-;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;:::-;5302:23:2;::::1;5185:16;5351:27:::0;;;:17:::1;:27;::::0;;;;;;;5344:34;;-1:-1:-1;;5344:34:2::1;::::0;;5443:50;;-1:-1:-1;;;5443:50:2;;;;-1:-1:-1;;;;;5443:48:2;::::1;::::0;::::1;::::0;:50:::1;::::0;;::::1;::::0;;;;;;;:48;:50:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5510:36:2;;::::1;;::::0;;;:30:::1;:36;::::0;;;;;;;5503:43;;-1:-1:-1;;5503:43:2::1;::::0;;5562:51;445:41:25;;;5510:36:2;;-1:-1:-1;5562:51:2;;::::1;::::0;5585:8;;5562:51:::1;::::0;418:18:25;5562:51:2::1;305:187:25::0;3435:359:2;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;:::-;3557:9:2::1;3552:236;3568:25:::0;;::::1;3552:236;;;3674:16;:35;3691:14;;3706:1;3691:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3674:35:2::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3674:35:2;3667:42;;-1:-1:-1;;3667:42:2::1;::::0;;3752:14;;3767:1;3752:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3728:49:2::1;;3771:5;3728:49;;;;470:14:25::0;463:22;445:41;;433:2;418:18;;305:187;3728:49:2::1;;;;;;;;3595:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3552:236;;;;3435:359:::0;;;:::o;2977:300::-;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;:::-;3094:9:2::1;3089:182;3105:25:::0;;::::1;3089:182;;;3189:4;3151:16;:35;3168:14;;3183:1;3168:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3151:35:2::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3151:35:2;:42;;-1:-1:-1;;3151:42:2::1;::::0;::::1;;::::0;;;::::1;::::0;;3236:14;;3251:1;3236:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3212:48:2::1;;3255:4;3212:48;;;;470:14:25::0;463:22;445:41;;433:2;418:18;;305:187;3212:48:2::1;;;;;;;;3132:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3089:182;;1791:151:6::0;1881:7;1907:18;;;:12;:18;;;;;:28;;1929:5;1907:21;:28::i;:::-;1900:35;1791:151;-1:-1:-1;;;1791:151:6:o;3350:145:7:-;3436:4;3459:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3459:29:7;;;;;;;;;;;;;;;3350:145::o;2439:336:2:-;3279:19:14;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:14;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:14;1713:19:16;:23;;;3387:66:14;;-1:-1:-1;3436:12:14;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:14;;7091:2:25;3325:201:14;;;7073:21:25;7130:2;7110:18;;;7103:30;7169:34;7149:18;;;7142:62;-1:-1:-1;;;7220:18:25;;;7213:44;7274:19;;3325:201:14;6889:410:25;3325:201:14;3536:12;:16;;-1:-1:-1;;3536:16:14;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:14;;;;;3562:65;2557:24:2::1;:22;:24::i;:::-;2591:22;:20;:22::i;:::-;2623:42;2365:4:7;2654:10:2::0;2623::::1;:42::i;:::-;2675:39;-1:-1:-1::0;;;2700:13:2::1;2675:10;:39::i;:::-;2724:44;-1:-1:-1::0;;;2751:16:2::1;2724:10;:44::i;:::-;3651:14:14::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:14;;;3721:14;;-1:-1:-1;7456:36:25;;3721:14:14;;7444:2:25;7429:18;3721:14:14;;;;;;;3269:483;2439:336:2;;;:::o;2110:140:6:-;2190:7;2216:18;;;:12;:18;;;;;:27;;:25;:27::i;5705:147:7:-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5819:26:::1;5831:4;5837:7;5819:11;:26::i;983:223:6:-:0;1068:4;-1:-1:-1;;;;;;1091:68:6;;-1:-1:-1;;;1091:68:6;;:108;;;1163:36;1187:11;1163:23;:36::i;3789:103:7:-;3855:30;3866:4;965:10:17;3855::7;:30::i;2338:166:6:-;2425:31;2442:4;2448:7;2425:16;:31::i;:::-;2466:18;;;;:12;:18;;;;;:31;;2489:7;2466:22;:31::i;2593:171::-;2681:32;2699:4;2705:7;2681:17;:32::i;:::-;2723:18;;;;:12;:18;;;;;:34;;2749:7;2723:25;:34::i;7033:97:2:-;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;2841:944:12:-;839:66;3257:59;;;3253:526;;;3332:37;3351:17;3332:18;:37::i;3253:526::-;3433:17;-1:-1:-1;;;;;3404:61:12;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3404:63:12;;;;;;;;-1:-1:-1;;3404:63:12;;;;;;;;;;;;:::i;:::-;;;3400:302;;3631:56;;-1:-1:-1;;;3631:56:12;;7894:2:25;3631:56:12;;;7876:21:25;7933:2;7913:18;;;7906:30;7972:34;7952:18;;;7945:62;-1:-1:-1;;;8023:18:25;;;8016:44;8077:19;;3631:56:12;7692:410:25;3400:302:12;-1:-1:-1;;;;;;;;;;;3517:28:12;;3509:82;;;;-1:-1:-1;;;3509:82:12;;8309:2:25;3509:82:12;;;8291:21:25;8348:2;8328:18;;;8321:30;8387:34;8367:18;;;8360:62;-1:-1:-1;;;8438:18:25;;;8431:39;8487:19;;3509:82:12;8107:405:25;3509:82:12;3468:138;3715:53;3733:17;3752:4;3758:9;3715:17;:53::i;9574:156:24:-;9648:7;9698:22;9702:3;9714:5;9698:3;:22::i;2290:67:15:-;5374:13:14;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:14;;8719:2:25;5366:69:14;;;8701:21:25;8758:2;8738:18;;;8731:30;8797:34;8777:18;;;8770:62;-1:-1:-1;;;8848:18:25;;;8841:41;8899:19;;5366:69:14;8517:407:25;5366:69:14;2290:67:15:o;9117:115:24:-;9180:7;9206:19;9214:3;4556:18;;4474:107;3050:213:7;3135:4;-1:-1:-1;;;;;;3158:58:7;;-1:-1:-1;;;3158:58:7;;:98;;-1:-1:-1;;;;;;;;;;1189:51:20;;;3220:36:7;1081:166:20;4173:501:7;4261:22;4269:4;4275:7;4261;:22::i;:::-;4256:412;;4444:39;4475:7;4444:30;:39::i;:::-;4554:49;4593:4;4600:2;4554:30;:49::i;:::-;4351:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4351:274:7;;;;;;;;;;-1:-1:-1;;;4299:358:7;;;;;;;:::i;7938:233::-;8021:22;8029:4;8035:7;8021;:22::i;:::-;8016:149;;8059:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8059:29:7;;;;;;;;;:36;;-1:-1:-1;;8059:36:7;8091:4;8059:36;;;8141:12;965:10:17;;886:96;8141:12:7;-1:-1:-1;;;;;8114:40:7;8132:7;-1:-1:-1;;;;;8114:40:7;8126:4;8114:40;;;;;;;;;;7938:233;;:::o;8316:150:24:-;8386:4;8409:50;8414:3;-1:-1:-1;;;;;8434:23:24;;8409:4;:50::i;8342:234:7:-;8425:22;8433:4;8439:7;8425;:22::i;:::-;8421:149;;;8495:5;8463:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8463:29:7;;;;;;;;;;:37;;-1:-1:-1;;8463:37:7;;;8519:40;965:10:17;;8463:12:7;;8519:40;;8495:5;8519:40;8342:234;;:::o;8634:156:24:-;8707:4;8730:53;8738:3;-1:-1:-1;;;;;8758:23:24;;8730:7;:53::i;1720:281:12:-;-1:-1:-1;;;;;1713:19:16;;;1793:106:12;;;;-1:-1:-1;;;1793:106:12;;10604:2:25;1793:106:12;;;10586:21:25;10643:2;10623:18;;;10616:30;10682:34;10662:18;;;10655:62;-1:-1:-1;;;10733:18:25;;;10726:43;10786:19;;1793:106:12;10402:409:25;1793:106:12;-1:-1:-1;;;;;;;;;;;1909:85:12;;-1:-1:-1;;;;;;1909:85:12;-1:-1:-1;;;;;1909:85:12;;;;;;;;;;1720:281::o;2393:276::-;2501:29;2512:17;2501:10;:29::i;:::-;2558:1;2544:4;:11;:15;:28;;;;2563:9;2544:28;2540:123;;;2588:64;2628:17;2647:4;2588:39;:64::i;4923:118:24:-;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;5009:25;;4923:118;;;;:::o;2473:149:19:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:19;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:19;;1984:47;;-1:-1:-1;;;2041:6:19;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:19;;;;;;;;;-1:-1:-1;;;2066:6:19;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:19;;;;;;;;-1:-1:-1;2096:9:19;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:19;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:19;;;;;;;;-1:-1:-1;2207:1:19;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:19;;2228:55;;;;-1:-1:-1;;;2228:55:19;;11462:2:25;2228:55:19;;;11444:21:25;;;11481:18;;;11474:30;11540:34;11520:18;;;11513:62;11592:18;;2228:55:19;11260:356:25;2225:404:24;2288:4;4362:19;;;:12;;;:19;;;;;;2304:319;;-1:-1:-1;2346:23:24;;;;;;;;:11;:23;;;;;;;;;;;;;2526:18;;2504:19;;;:12;;;:19;;;;;;:40;;;;2558:11;;2304:319;-1:-1:-1;2607:5:24;2600:12;;2797:1388;2863:4;3000:19;;;:12;;;:19;;;;;;3034:15;;3030:1149;;3403:21;3427:14;3440:1;3427:10;:14;:::i;:::-;3475:18;;3403:38;;-1:-1:-1;3455:17:24;;3475:22;;3496:1;;3475:22;:::i;:::-;3455:42;;3529:13;3516:9;:26;3512:398;;3562:17;3582:3;:11;;3594:9;3582:22;;;;;;;;:::i;:::-;;;;;;;;;3562:42;;3733:9;3704:3;:11;;3716:13;3704:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3816:23;;;:12;;;:23;;;;;:36;;;3512:398;3988:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4080:3;:12;;:19;4093:5;4080:19;;;;;;;;;;;4073:26;;;4121:4;4114:11;;;;;;;3030:1149;4163:5;4156:12;;;;;2107:152:12;2173:37;2192:17;2173:18;:37::i;:::-;2225:27;;-1:-1:-1;;;;;2225:27:12;;;;;;;;2107:152;:::o;6685:198:16:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:16;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:16:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:16;;;8124:60;;;;-1:-1:-1;;;8124:60:16;;12380:2:25;8124:60:16;;;12362:21:25;12419:2;12399:18;;;12392:30;12458:31;12438:18;;;12431:59;12507:18;;8124:60:16;12178:353:25;8124:60:16;-1:-1:-1;8219:10:16;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:16;;;;;;;;:::i;14:286:25:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:25;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:25;;562:42;;552:70;;618:1;615;608:12;633:247;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;800:9;787:23;819:31;844:5;819:31;:::i;885:180::-;944:6;997:2;985:9;976:7;972:23;968:32;965:52;;;1013:1;1010;1003:12;965:52;-1:-1:-1;1036:23:25;;885:180;-1:-1:-1;885:180:25:o;1252:315::-;1320:6;1328;1381:2;1369:9;1360:7;1356:23;1352:32;1349:52;;;1397:1;1394;1387:12;1349:52;1433:9;1420:23;1410:33;;1493:2;1482:9;1478:18;1465:32;1506:31;1531:5;1506:31;:::i;:::-;1556:5;1546:15;;;1252:315;;;;;:::o;1572:127::-;1633:10;1628:3;1624:20;1621:1;1614:31;1664:4;1661:1;1654:15;1688:4;1685:1;1678:15;1704:1056;1781:6;1789;1842:2;1830:9;1821:7;1817:23;1813:32;1810:52;;;1858:1;1855;1848:12;1810:52;1897:9;1884:23;1916:31;1941:5;1916:31;:::i;:::-;1966:5;-1:-1:-1;2022:2:25;2007:18;;1994:32;2045:18;2075:14;;;2072:34;;;2102:1;2099;2092:12;2072:34;2140:6;2129:9;2125:22;2115:32;;2185:7;2178:4;2174:2;2170:13;2166:27;2156:55;;2207:1;2204;2197:12;2156:55;2243:2;2230:16;2265:2;2261;2258:10;2255:36;;;2271:18;;:::i;:::-;2346:2;2340:9;2314:2;2400:13;;-1:-1:-1;;2396:22:25;;;2420:2;2392:31;2388:40;2376:53;;;2444:18;;;2464:22;;;2441:46;2438:72;;;2490:18;;:::i;:::-;2530:10;2526:2;2519:22;2565:2;2557:6;2550:18;2605:7;2600:2;2595;2591;2587:11;2583:20;2580:33;2577:53;;;2626:1;2623;2616:12;2577:53;2682:2;2677;2673;2669:11;2664:2;2656:6;2652:15;2639:46;2727:1;2722:2;2717;2709:6;2705:15;2701:24;2694:35;2748:6;2738:16;;;;;;;1704:1056;;;;;:::o;2765:615::-;2851:6;2859;2912:2;2900:9;2891:7;2887:23;2883:32;2880:52;;;2928:1;2925;2918:12;2880:52;2968:9;2955:23;2997:18;3038:2;3030:6;3027:14;3024:34;;;3054:1;3051;3044:12;3024:34;3092:6;3081:9;3077:22;3067:32;;3137:7;3130:4;3126:2;3122:13;3118:27;3108:55;;3159:1;3156;3149:12;3108:55;3199:2;3186:16;3225:2;3217:6;3214:14;3211:34;;;3241:1;3238;3231:12;3211:34;3294:7;3289:2;3279:6;3276:1;3272:14;3268:2;3264:23;3260:32;3257:45;3254:65;;;3315:1;3312;3305:12;3254:65;3346:2;3338:11;;;;;3368:6;;-1:-1:-1;2765:615:25;;-1:-1:-1;;;;2765:615:25:o;3385:248::-;3453:6;3461;3514:2;3502:9;3493:7;3489:23;3485:32;3482:52;;;3530:1;3527;3520:12;3482:52;-1:-1:-1;;3553:23:25;;;3623:2;3608:18;;;3595:32;;-1:-1:-1;3385:248:25:o;3846:529::-;3923:6;3931;3939;3992:2;3980:9;3971:7;3967:23;3963:32;3960:52;;;4008:1;4005;3998:12;3960:52;4047:9;4034:23;4066:31;4091:5;4066:31;:::i;:::-;4116:5;-1:-1:-1;4173:2:25;4158:18;;4145:32;4186:33;4145:32;4186:33;:::i;:::-;4238:7;-1:-1:-1;4297:2:25;4282:18;;4269:32;4310:33;4269:32;4310:33;:::i;:::-;4362:7;4352:17;;;3846:529;;;;;:::o;4562:251::-;4632:6;4685:2;4673:9;4664:7;4660:23;4656:32;4653:52;;;4701:1;4698;4691:12;4653:52;4733:9;4727:16;4752:31;4777:5;4752:31;:::i;5234:408::-;5436:2;5418:21;;;5475:2;5455:18;;;5448:30;5514:34;5509:2;5494:18;;5487:62;-1:-1:-1;;;5580:2:25;5565:18;;5558:42;5632:3;5617:19;;5234:408::o;5647:::-;5849:2;5831:21;;;5888:2;5868:18;;;5861:30;5927:34;5922:2;5907:18;;5900:62;-1:-1:-1;;;5993:2:25;5978:18;;5971:42;6045:3;6030:19;;5647:408::o;6485:127::-;6546:10;6541:3;6537:20;6534:1;6527:31;6577:4;6574:1;6567:15;6601:4;6598:1;6591:15;6617:127;6678:10;6673:3;6669:20;6666:1;6659:31;6709:4;6706:1;6699:15;6733:4;6730:1;6723:15;6749:135;6788:3;6809:17;;;6806:43;;6829:18;;:::i;:::-;-1:-1:-1;6876:1:25;6865:13;;6749:135::o;7503:184::-;7573:6;7626:2;7614:9;7605:7;7601:23;7597:32;7594:52;;;7642:1;7639;7632:12;7594:52;-1:-1:-1;7665:16:25;;7503:184;-1:-1:-1;7503:184:25:o;8929:250::-;9014:1;9024:113;9038:6;9035:1;9032:13;9024:113;;;9114:11;;;9108:18;9095:11;;;9088:39;9060:2;9053:10;9024:113;;;-1:-1:-1;;9171:1:25;9153:16;;9146:27;8929:250::o;9184:812::-;9595:25;9590:3;9583:38;9565:3;9650:6;9644:13;9666:75;9734:6;9729:2;9724:3;9720:12;9713:4;9705:6;9701:17;9666:75;:::i;:::-;-1:-1:-1;;;9800:2:25;9760:16;;;9792:11;;;9785:40;9850:13;;9872:76;9850:13;9934:2;9926:11;;9919:4;9907:17;;9872:76;:::i;:::-;9968:17;9987:2;9964:26;;9184:812;-1:-1:-1;;;;9184:812:25:o;10001:396::-;10150:2;10139:9;10132:21;10113:4;10182:6;10176:13;10225:6;10220:2;10209:9;10205:18;10198:34;10241:79;10313:6;10308:2;10297:9;10293:18;10288:2;10280:6;10276:15;10241:79;:::i;:::-;10381:2;10360:15;-1:-1:-1;;10356:29:25;10341:45;;;;10388:2;10337:54;;10001:396;-1:-1:-1;;10001:396:25:o;10816:168::-;10889:9;;;10920;;10937:15;;;10931:22;;10917:37;10907:71;;10958:18;;:::i;10989:125::-;11054:9;;;11075:10;;;11072:36;;;11088:18;;:::i;11119:136::-;11158:3;11186:5;11176:39;;11195:18;;:::i;:::-;-1:-1:-1;;;11231:18:25;;11119:136::o;11621:128::-;11688:9;;;11709:11;;;11706:37;;;11723:18;;:::i;11754:127::-;11815:10;11810:3;11806:20;11803:1;11796:31;11846:4;11843:1;11836:15;11870:4;11867:1;11860:15;11886:287;12015:3;12053:6;12047:13;12069:66;12128:6;12123:3;12116:4;12108:6;12104:17;12069:66;:::i;:::-;12151:16;;;;;11886:287;-1:-1:-1;;11886:287:25:o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","REGISTRAR_ROLE()":"f68e9553","UPGRADE_ROLE()":"b908afa8","addAddressesToAllowlist(address[])":"7f17caa7","addWalletToAllowlist(address)":"0488d974","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address,address)":"c0c53b8b","isAllowlisted(address)":"05a3b809","proxiableUUID()":"52d1902d","removeAddressesFromAllowlist(address[])":"6caacbe7","removeWalletFromAllowlist(address)":"6aa70096","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"added\",\"type\":\"bool\"}],\"name\":\"AddressAllowlistChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"targetBytes\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"added\",\"type\":\"bool\"}],\"name\":\"WalletAllowlistChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTRAR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addressTargets\",\"type\":\"address[]\"}],\"name\":\"addAddressesToAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddr\",\"type\":\"address\"}],\"name\":\"addWalletToAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_roleAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_upgradeAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registerarAdmin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isAllowlisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addressTargets\",\"type\":\"address[]\"}],\"name\":\"removeAddressesFromAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddr\",\"type\":\"address\"}],\"name\":\"removeWalletFromAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"addAddressesToAllowlist(address[])\":{\"params\":{\"addressTargets\":\"the addresses to be added to the allowlist\"}},\"addWalletToAllowlist(address)\":{\"params\":{\"walletAddr\":\"the wallet address to be added to the allowlist\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,address)\":{\"params\":{\"_roleAdmin\":\"the address to grant `DEFAULT_ADMIN_ROLE` to\",\"_upgradeAdmin\":\"the address to grant `UPGRADE_ROLE` to\"}},\"isAllowlisted(address)\":{\"params\":{\"target\":\"the address that will be checked for presence in the allowlist\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"removeAddressesFromAllowlist(address[])\":{\"params\":{\"addressTargets\":\"the addresses to be removed from the allowlist\"}},\"removeWalletFromAllowlist(address)\":{\"params\":{\"walletAddr\":\"the wallet address to be removed from the allowlist\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interface identifier, which is a 4-byte selector.\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddressAllowlistChanged(address,bool)\":{\"notice\":\"Emitted when a target address is added or removed from the Allowlist\"},\"WalletAllowlistChanged(bytes32,address,bool)\":{\"notice\":\"Emitted when a target smart contract wallet is added or removed from the Allowlist\"}},\"kind\":\"user\",\"methods\":{\"REGISTRAR_ROLE()\":{\"notice\":\"Only REGISTRAR_ROLE can invoke white listing registration and removal\"},\"UPGRADE_ROLE()\":{\"notice\":\"Only UPGRADE_ROLE can upgrade the contract\"},\"addAddressesToAllowlist(address[])\":{\"notice\":\"Adds a list of multiple addresses to Allowlist\"},\"addWalletToAllowlist(address)\":{\"notice\":\"Add a smart contract wallet to the Allowlist. This will allowlist the proxy and implementation contract pair. First, the bytecode of the proxy is added to the bytecode allowlist. Second, the implementation address stored in the proxy is stored in the implementation address allowlist.\"},\"initialize(address,address,address)\":{\"notice\":\"Grants `DEFAULT_ADMIN_ROLE` to the supplied `admin` address\"},\"isAllowlisted(address)\":{\"notice\":\"Returns true if an address is Allowlisted, false otherwise\"},\"removeAddressesFromAllowlist(address[])\":{\"notice\":\"Removes a list target address from Allowlist\"},\"removeWalletFromAllowlist(address)\":{\"notice\":\"Remove  a smart contract wallet from the Allowlist This will remove the proxy bytecode hash and implementation contract address pair from the allowlist\"},\"supportsInterface(bytes4)\":{\"notice\":\"ERC-165 interface support\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol\":\"OperatorAllowlistUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@imtbl/contracts/contracts/allowlist/IOperatorAllowlist.sol\":{\"keccak256\":\"0x78abc58b15098d7a8cf3792739b9e87b6a748d47d05fcfacfb25cb90424f0bb4\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://2f92934b4b67959325074c773784efd7ce3c78e99ffe14f6e541fa1fb65eb27b\",\"dweb:/ipfs/QmYySNnZ53Ju9pxbtQtFdtWPCx3bgL4N79yB3WxeaMP6pk\"]},\"@imtbl/contracts/contracts/allowlist/IWalletProxy.sol\":{\"keccak256\":\"0x8a6d31443be2a55f0886dffb538202d71c66fee01a93ec72da6d1961c9d3327a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://18f6ad3a0fa9a4a6799bb5638c134de16777b86193dff27bd0a9f7a8419f4119\",\"dweb:/ipfs/QmXv4r4xw1uoMy3JLLXvMKvXupuqt12F4MVDaEmRAQDWVG\"]},\"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol\":{\"keccak256\":\"0xa232d4539e305fca21a0d5d0d787ad442eb70aeb32b7d02fde19c90c3c29acff\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://5b6767898dceb0760381132efd3d222b031ce29f0bcc9141d2a63314cac559ee\",\"dweb:/ipfs/QmbyDbu5osPpXLnVQoYefJ5n9ufpwQKoZDPy3gxW71ZvpL\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7d24c901e098a04fa7f388c9ff1890bb522307272a2fee8030ee15a8d907096f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://581f4c4b9af18b5a8e811a0a45d38a125cad4627d67f7a605626ff3a2b26eb70\",\"dweb:/ipfs/QmWZwM8HEbPPjf5MaaRnELgW8JtDdWNu7oBXWCtLCERQyz\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/TestOperatorAllowList.sol":{"TestOperatorAllowlist":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bool","name":"added","type":"bool"}],"name":"AddressAllowlistChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"targetBytes","type":"bytes32"},{"indexed":true,"internalType":"address","name":"targetAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"added","type":"bool"}],"name":"WalletAllowlistChanged","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REGISTRAR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"addressTargets","type":"address[]"}],"name":"addAddressesToAllowlist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddr","type":"address"}],"name":"addWalletToAllowlist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_roleAdmin","type":"address"},{"internalType":"address","name":"_upgradeAdmin","type":"address"},{"internalType":"address","name":"_registerarAdmin","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"isAllowlisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"addressTargets","type":"address[]"}],"name":"removeAddressesFromAllowlist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddr","type":"address"}],"name":"removeWalletFromAllowlist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a06040523060805234801561001457600080fd5b50608051611c6f61004c60003960008181610696015281816106d601528181610775015281816107b501526108440152611c6f6000f3fe60806040526004361061011f5760003560e01c80636caacbe7116100a0578063b908afa811610064578063b908afa81461032e578063c0c53b8b14610351578063ca15c87314610371578063d547741f14610391578063f68e9553146103b157600080fd5b80636caacbe7146102815780637f17caa7146102a15780639010d07c146102c157806391d14854146102f9578063a217fddf1461031957600080fd5b806336568abe116100e757806336568abe146101f95780633659cfe6146102195780634f1ef2861461023957806352d1902d1461024c5780636aa700961461026157600080fd5b806301ffc9a7146101245780630488d9741461015957806305a3b8091461017b578063248a9ca31461019b5780632f2ff15d146101d9575b600080fd5b34801561013057600080fd5b5061014461013f36600461172c565b6103d6565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061017961017436600461176b565b610401565b005b34801561018757600080fd5b5061014461019636600461176b565b61050a565b3480156101a757600080fd5b506101cb6101b6366004611788565b60009081526065602052604090206001015490565b604051908152602001610150565b3480156101e557600080fd5b506101796101f43660046117a1565b6105df565b34801561020557600080fd5b506101796102143660046117a1565b610609565b34801561022557600080fd5b5061017961023436600461176b565b61068c565b6101796102473660046117e7565b61076b565b34801561025857600080fd5b506101cb610837565b34801561026d57600080fd5b5061017961027c36600461176b565b6108ea565b34801561028d57600080fd5b5061017961029c3660046118ab565b6109de565b3480156102ad57600080fd5b506101796102bc3660046118ab565b610ad5565b3480156102cd57600080fd5b506102e16102dc366004611920565b610bcf565b6040516001600160a01b039091168152602001610150565b34801561030557600080fd5b506101446103143660046117a1565b610bee565b34801561032557600080fd5b506101cb600081565b34801561033a57600080fd5b506101cb6b555047524144455f524f4c4560a01b81565b34801561035d57600080fd5b5061017961036c366004611942565b610c19565b34801561037d57600080fd5b506101cb61038c366004611788565b610d73565b34801561039d57600080fd5b506101796103ac3660046117a1565b610d8a565b3480156103bd57600080fd5b506101cb6d5245474953545241525f524f4c4560901b81565b60006001600160e01b031982166305a3b80960e01b14806103fb57506103fb82610daf565b92915050565b6d5245474953545241525f524f4c4560901b61041c81610dd4565b813f600081815261012f60209081526040808320805460ff191660011790558051639061112760e01b815290516001600160a01b03871692639061112792600480820193918290030181865afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e919061198d565b6001600160a01b03818116600090815261012e6020908152604091829020805460ff1916600190811790915591519182529293509086169184917f52a9758e33d80a562e98b34d922581e414149b9c485e5929682a72acb451c31591015b60405180910390a350505050565b6001600160a01b038116600090815261012d602052604081205460ff161561053457506001919050565b813f600081815261012f602052604090205460ff16156105d6576000836001600160a01b031663906111276040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b2919061198d565b6001600160a01b0316600090815261012e602052604090205460ff16949350505050565b50600092915050565b6000828152606560205260409020600101546105fa81610dd4565b6106048383610dde565b505050565b6001600160a01b038116331461067e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106888282610e00565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106d45760405162461bcd60e51b8152600401610675906119aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661071d600080516020611bf3833981519152546001600160a01b031690565b6001600160a01b0316146107435760405162461bcd60e51b8152600401610675906119f6565b61074c81610e22565b6040805160008082526020820190925261076891839190610e3b565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107b35760405162461bcd60e51b8152600401610675906119aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107fc600080516020611bf3833981519152546001600160a01b031690565b6001600160a01b0316146108225760405162461bcd60e51b8152600401610675906119f6565b61082b82610e22565b61068882826001610e3b565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d75760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610675565b50600080516020611bf383398151915290565b6d5245474953545241525f524f4c4560901b61090581610dd4565b813f600081815261012f60209081526040808320805460ff191690558051639061112760e01b815290516001600160a01b03871692639061112792600480820193918290030181865afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610984919061198d565b6001600160a01b03818116600090815261012e60209081526040808320805460ff19169055519182529293509086169184917f52a9758e33d80a562e98b34d922581e414149b9c485e5929682a72acb451c31591016104fc565b6d5245474953545241525f524f4c4560901b6109f981610dd4565b60005b82811015610acf5761012d6000858584818110610a1b57610a1b611a42565b9050602002016020810190610a30919061176b565b6001600160a01b031681526020810191909152604001600020805460ff19169055838382818110610a6357610a63611a42565b9050602002016020810190610a78919061176b565b6001600160a01b03167f218a1635b2755f3fe7bdb77932fcd6ffca69760533404fe817f7404315bf6df06000604051610ab5911515815260200190565b60405180910390a280610ac781611a6e565b9150506109fc565b50505050565b6d5245474953545241525f524f4c4560901b610af081610dd4565b60005b82811015610acf57600161012d6000868685818110610b1457610b14611a42565b9050602002016020810190610b29919061176b565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055838382818110610b6357610b63611a42565b9050602002016020810190610b78919061176b565b6001600160a01b03167f218a1635b2755f3fe7bdb77932fcd6ffca69760533404fe817f7404315bf6df06001604051610bb5911515815260200190565b60405180910390a280610bc781611a6e565b915050610af3565b6000828152609760205260408120610be79083610fa6565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff1615808015610c395750600054600160ff909116105b80610c535750303b158015610c53575060005460ff166001145b610cb65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610675565b6000805460ff191660011790558015610cd9576000805461ff0019166101001790555b610ce1610fb2565b610ce9610fb2565b610cf4600085610dde565b610d0d6b555047524144455f524f4c4560a01b84610dde565b610d286d5245474953545241525f524f4c4560901b83610dde565b8015610acf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60008181526097602052604081206103fb9061101f565b600082815260656020526040902060010154610da581610dd4565b6106048383610e00565b60006001600160e01b03198216635a05180f60e01b14806103fb57506103fb82611029565b610768813361105e565b610de882826110b7565b6000828152609760205260409020610604908261113d565b610e0a8282611152565b600082815260976020526040902061060490826111b9565b6b555047524144455f524f4c4560a01b61068881610dd4565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e6e57610604836111ce565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ec8575060408051601f3d908101601f19168201909252610ec591810190611a87565b60015b610f2b5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610675565b600080516020611bf38339815191528114610f9a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610675565b5061060483838361126a565b6000610be7838361128f565b600054610100900460ff1661101d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610675565b565b60006103fb825490565b60006001600160e01b03198216637965db0b60e01b14806103fb57506301ffc9a760e01b6001600160e01b03198316146103fb565b6110688282610bee565b61068857611075816112b9565b6110808360206112cb565b604051602001611091929190611ac4565b60408051601f198184030181529082905262461bcd60e51b825261067591600401611b39565b6110c18282610bee565b6106885760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556110f93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610be7836001600160a01b038416611467565b61115c8282610bee565b156106885760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610be7836001600160a01b0384166114b6565b6001600160a01b0381163b61123b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610675565b600080516020611bf383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611273836115a9565b6000825111806112805750805b1561060457610acf83836115e9565b60008260000182815481106112a6576112a6611a42565b9060005260206000200154905092915050565b60606103fb6001600160a01b03831660145b606060006112da836002611b6c565b6112e5906002611b83565b67ffffffffffffffff8111156112fd576112fd6117d1565b6040519080825280601f01601f191660200182016040528015611327576020820181803683370190505b509050600360fc1b8160008151811061134257611342611a42565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061137157611371611a42565b60200101906001600160f81b031916908160001a9053506000611395846002611b6c565b6113a0906001611b83565b90505b6001811115611418576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113d4576113d4611a42565b1a60f81b8282815181106113ea576113ea611a42565b60200101906001600160f81b031916908160001a90535060049490941c9361141181611b96565b90506113a3565b508315610be75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610675565b60008181526001830160205260408120546114ae575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103fb565b5060006103fb565b6000818152600183016020526040812054801561159f5760006114da600183611bad565b85549091506000906114ee90600190611bad565b905081811461155357600086600001828154811061150e5761150e611a42565b906000526020600020015490508087600001848154811061153157611531611a42565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061156457611564611bc0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103fb565b60009150506103fb565b6115b2816111ce565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610be78383604051806060016040528060278152602001611c13602791396060600080856001600160a01b0316856040516116269190611bd6565b600060405180830381855af49150503d8060008114611661576040519150601f19603f3d011682016040523d82523d6000602084013e611666565b606091505b509150915061167786838387611681565b9695505050505050565b606083156116f05782516000036116e9576001600160a01b0385163b6116e95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610675565b50816116fa565b6116fa8383611702565b949350505050565b8151156117125781518083602001fd5b8060405162461bcd60e51b81526004016106759190611b39565b60006020828403121561173e57600080fd5b81356001600160e01b031981168114610be757600080fd5b6001600160a01b038116811461076857600080fd5b60006020828403121561177d57600080fd5b8135610be781611756565b60006020828403121561179a57600080fd5b5035919050565b600080604083850312156117b457600080fd5b8235915060208301356117c681611756565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156117fa57600080fd5b823561180581611756565b9150602083013567ffffffffffffffff8082111561182257600080fd5b818501915085601f83011261183657600080fd5b813581811115611848576118486117d1565b604051601f8201601f19908116603f01168101908382118183101715611870576118706117d1565b8160405282815288602084870101111561188957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080602083850312156118be57600080fd5b823567ffffffffffffffff808211156118d657600080fd5b818501915085601f8301126118ea57600080fd5b8135818111156118f957600080fd5b8660208260051b850101111561190e57600080fd5b60209290920196919550909350505050565b6000806040838503121561193357600080fd5b50508035926020909101359150565b60008060006060848603121561195757600080fd5b833561196281611756565b9250602084013561197281611756565b9150604084013561198281611756565b809150509250925092565b60006020828403121561199f57600080fd5b8151610be781611756565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a8057611a80611a58565b5060010190565b600060208284031215611a9957600080fd5b5051919050565b60005b83811015611abb578181015183820152602001611aa3565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611afc816017850160208801611aa0565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b2d816028840160208801611aa0565b01602801949350505050565b6020815260008251806020840152611b58816040850160208701611aa0565b601f01601f19169190910160400192915050565b80820281158282048414176103fb576103fb611a58565b808201808211156103fb576103fb611a58565b600081611ba557611ba5611a58565b506000190190565b818103818111156103fb576103fb611a58565b634e487b7160e01b600052603160045260246000fd5b60008251611be8818460208701611aa0565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206df656b67508087317a95ae7c0cd38ee00e16e25458f50fd7114769ede1264bf64736f6c63430008130033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1C6F PUSH2 0x4C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x696 ADD MSTORE DUP2 DUP2 PUSH2 0x6D6 ADD MSTORE DUP2 DUP2 PUSH2 0x775 ADD MSTORE DUP2 DUP2 PUSH2 0x7B5 ADD MSTORE PUSH2 0x844 ADD MSTORE PUSH2 0x1C6F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CAACBE7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB908AFA8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB908AFA8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xF68E9553 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6CAACBE7 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x7F17CAA7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x6AA70096 EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x488D974 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x5A3B809 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x179 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x837 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1920 JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1942 JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0xD73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xD8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A3B809 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x41C DUP2 PUSH2 0xDD4 JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD PUSH4 0x90611127 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x90611127 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP3 SWAP4 POP SWAP1 DUP7 AND SWAP2 DUP5 SWAP2 PUSH32 0x52A9758E33D80A562E98B34D922581E414149B9C485E5929682A72ACB451C315 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x534 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90611127 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5FA DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xDDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH2 0xE00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x6D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x74C DUP2 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x768 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xE3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x82B DUP3 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH1 0x1 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x905 DUP2 PUSH2 0xDD4 JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH4 0x90611127 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x90611127 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x960 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE SWAP3 SWAP4 POP SWAP1 DUP7 AND SWAP2 DUP5 SWAP2 PUSH32 0x52A9758E33D80A562E98B34D922581E414149B9C485E5929682A72ACB451C315 SWAP2 ADD PUSH2 0x4FC JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x9F9 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH2 0x12D PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA1B JUMPI PUSH2 0xA1B PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xA63 JUMPI PUSH2 0xA63 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x218A1635B2755F3FE7BDB77932FCD6FFCA69760533404FE817F7404315BF6DF0 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xAB5 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0xAC7 DUP2 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0xAF0 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH1 0x1 PUSH2 0x12D PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB14 JUMPI PUSH2 0xB14 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xB63 JUMPI PUSH2 0xB63 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x218A1635B2755F3FE7BDB77932FCD6FFCA69760533404FE817F7404315BF6DF0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xBB5 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0xBC7 DUP2 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xBE7 SWAP1 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xC39 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xC53 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xCE1 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCE9 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCF4 PUSH1 0x0 DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xD0D PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL DUP5 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xD28 PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL DUP4 PUSH2 0xDDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xACF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3FB SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDA5 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x768 DUP2 CALLER PUSH2 0x105E JUMP JUMPDEST PUSH2 0xDE8 DUP3 DUP3 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x604 SWAP1 DUP3 PUSH2 0x113D JUMP JUMPDEST PUSH2 0xE0A DUP3 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x604 SWAP1 DUP3 PUSH2 0x11B9 JUMP JUMPDEST PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL PUSH2 0x688 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE6E JUMPI PUSH2 0x604 DUP4 PUSH2 0x11CE JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEC8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEC5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST POP PUSH2 0x604 DUP4 DUP4 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 DUP4 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1068 DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH2 0x1075 DUP2 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x1080 DUP4 PUSH1 0x20 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1091 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x675 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x10C1 DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x10F9 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x115C DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x123B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1273 DUP4 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1280 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x604 JUMPI PUSH2 0xACF DUP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12A6 JUMPI PUSH2 0x12A6 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x12DA DUP4 PUSH1 0x2 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x12E5 SWAP1 PUSH1 0x2 PUSH2 0x1B83 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12FD JUMPI PUSH2 0x12FD PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1327 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1342 JUMPI PUSH2 0x1342 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1371 JUMPI PUSH2 0x1371 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1395 DUP5 PUSH1 0x2 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x13A0 SWAP1 PUSH1 0x1 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1418 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x13D4 JUMPI PUSH2 0x13D4 PUSH2 0x1A42 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1411 DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP1 POP PUSH2 0x13A3 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x14AE JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3FB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 PUSH2 0x14DA PUSH1 0x1 DUP4 PUSH2 0x1BAD JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x14EE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1553 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x150E JUMPI PUSH2 0x150E PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1531 JUMPI PUSH2 0x1531 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1564 JUMPI PUSH2 0x1564 PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x15B2 DUP2 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBE7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C13 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1661 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1677 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1681 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x16F0 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x16E9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST POP DUP2 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x16FA DUP4 DUP4 PUSH2 0x1702 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1712 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBE7 DUP2 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17C6 DUP2 PUSH2 0x1756 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1805 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH2 0x1848 PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1870 JUMPI PUSH2 0x1870 PUSH2 0x17D1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x190E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1962 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1972 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1982 DUP2 PUSH2 0x1756 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBE7 DUP2 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A80 JUMPI PUSH2 0x1A80 PUSH2 0x1A58 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ABB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AA3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1AFC DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1B2D DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B58 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1BA5 JUMPI PUSH2 0x1BA5 PUSH2 0x1A58 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1BE8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A26469706673582212206D 0xF6 JUMP 0xB6 PUSH22 0x8087317A95AE7C0CD38EE00E16E25458F50FD711476 SWAP15 0xDE SLT PUSH5 0xBF64736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"195:67:5:-:0;;;1198:4:15;1155:48;;195:67:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_572":{"entryPoint":null,"id":572,"parameterSlots":0,"returnSlots":0},"@REGISTRAR_ROLE_63":{"entryPoint":null,"id":63,"parameterSlots":0,"returnSlots":0},"@UPGRADE_ROLE_70":{"entryPoint":null,"id":70,"parameterSlots":0,"returnSlots":0},"@__AccessControl_init_589":{"entryPoint":null,"id":589,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_1574":{"entryPoint":4018,"id":1574,"parameterSlots":0,"returnSlots":0},"@_add_3448":{"entryPoint":5223,"id":3448,"parameterSlots":2,"returnSlots":1},"@_at_3582":{"entryPoint":4751,"id":3582,"parameterSlots":2,"returnSlots":1},"@_authorizeUpgrade_346":{"entryPoint":3618,"id":346,"parameterSlots":1,"returnSlots":0},"@_checkRole_649":{"entryPoint":3540,"id":649,"parameterSlots":1,"returnSlots":0},"@_checkRole_688":{"entryPoint":4190,"id":688,"parameterSlots":2,"returnSlots":0},"@_contains_3551":{"entryPoint":null,"id":3551,"parameterSlots":2,"returnSlots":1},"@_getImplementation_1052":{"entryPoint":null,"id":1052,"parameterSlots":0,"returnSlots":1},"@_grantRole_510":{"entryPoint":3550,"id":510,"parameterSlots":2,"returnSlots":0},"@_grantRole_840":{"entryPoint":4279,"id":840,"parameterSlots":2,"returnSlots":0},"@_length_3565":{"entryPoint":null,"id":3565,"parameterSlots":1,"returnSlots":1},"@_msgSender_2005":{"entryPoint":null,"id":2005,"parameterSlots":0,"returnSlots":1},"@_remove_3532":{"entryPoint":5302,"id":3532,"parameterSlots":2,"returnSlots":1},"@_revert_1976":{"entryPoint":5890,"id":1976,"parameterSlots":2,"returnSlots":0},"@_revokeRole_534":{"entryPoint":3584,"id":534,"parameterSlots":2,"returnSlots":0},"@_revokeRole_871":{"entryPoint":4434,"id":871,"parameterSlots":2,"returnSlots":0},"@_setImplementation_1076":{"entryPoint":4558,"id":1076,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_1174":{"entryPoint":3643,"id":1174,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_1121":{"entryPoint":4714,"id":1121,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_1091":{"entryPoint":5545,"id":1091,"parameterSlots":1,"returnSlots":0},"@addAddressesToAllowlist_157":{"entryPoint":2773,"id":157,"parameterSlots":2,"returnSlots":0},"@addWalletToAllowlist_234":{"entryPoint":1025,"id":234,"parameterSlots":1,"returnSlots":0},"@add_3748":{"entryPoint":4413,"id":3748,"parameterSlots":2,"returnSlots":1},"@at_3844":{"entryPoint":4006,"id":3844,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1864":{"entryPoint":5609,"id":1864,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_1893":{"entryPoint":null,"id":1893,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_2060":{"entryPoint":null,"id":2060,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_2071":{"entryPoint":null,"id":2071,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_703":{"entryPoint":null,"id":703,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_486":{"entryPoint":3443,"id":486,"parameterSlots":1,"returnSlots":1},"@getRoleMember_470":{"entryPoint":3023,"id":470,"parameterSlots":2,"returnSlots":1},"@grantRole_723":{"entryPoint":1503,"id":723,"parameterSlots":2,"returnSlots":0},"@hasRole_636":{"entryPoint":3054,"id":636,"parameterSlots":2,"returnSlots":1},"@initialize_119":{"entryPoint":3097,"id":119,"parameterSlots":3,"returnSlots":0},"@isAllowlisted_312":{"entryPoint":1290,"id":312,"parameterSlots":1,"returnSlots":1},"@isContract_1665":{"entryPoint":null,"id":1665,"parameterSlots":1,"returnSlots":1},"@length_3817":{"entryPoint":4127,"id":3817,"parameterSlots":1,"returnSlots":1},"@proxiableUUID_1592":{"entryPoint":2103,"id":1592,"parameterSlots":0,"returnSlots":1},"@removeAddressesFromAllowlist_194":{"entryPoint":2526,"id":194,"parameterSlots":2,"returnSlots":0},"@removeWalletFromAllowlist_272":{"entryPoint":2282,"id":272,"parameterSlots":1,"returnSlots":0},"@remove_3775":{"entryPoint":4537,"id":3775,"parameterSlots":2,"returnSlots":1},"@renounceRole_766":{"entryPoint":1545,"id":766,"parameterSlots":2,"returnSlots":0},"@revokeRole_743":{"entryPoint":3466,"id":743,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2406":{"entryPoint":null,"id":2406,"parameterSlots":1,"returnSlots":1},"@supportsInterface_336":{"entryPoint":982,"id":336,"parameterSlots":1,"returnSlots":1},"@supportsInterface_451":{"entryPoint":3503,"id":451,"parameterSlots":1,"returnSlots":1},"@supportsInterface_617":{"entryPoint":4137,"id":617,"parameterSlots":1,"returnSlots":1},"@toHexString_2321":{"entryPoint":4811,"id":2321,"parameterSlots":2,"returnSlots":1},"@toHexString_2341":{"entryPoint":4793,"id":2341,"parameterSlots":1,"returnSlots":1},"@upgradeToAndCall_1635":{"entryPoint":1899,"id":1635,"parameterSlots":2,"returnSlots":0},"@upgradeTo_1614":{"entryPoint":1676,"id":1614,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_1932":{"entryPoint":5761,"id":1932,"parameterSlots":4,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6541,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address":{"entryPoint":6466,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":6119,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":6315,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":6024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":6791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":6049,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":6432,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6852,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6969,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6570,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6646,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7043,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7020,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7085,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6816,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":7062,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":6766,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6744,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":7104,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6722,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6097,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":5974,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12533:25","statements":[{"nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:25","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:25"},"nodeType":"YulFunctionCall","src":"131:12:25"},"nodeType":"YulExpressionStatement","src":"131:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:25"},"nodeType":"YulFunctionCall","src":"100:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:25"},"nodeType":"YulFunctionCall","src":"96:32:25"},"nodeType":"YulIf","src":"93:52:25"},{"nodeType":"YulVariableDeclaration","src":"154:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:25"},"nodeType":"YulFunctionCall","src":"167:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:25"},"nodeType":"YulFunctionCall","src":"256:12:25"},"nodeType":"YulExpressionStatement","src":"256:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:25"},"nodeType":"YulFunctionCall","src":"230:20:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:25"},"nodeType":"YulFunctionCall","src":"219:32:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:25"},"nodeType":"YulFunctionCall","src":"209:43:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:25"},"nodeType":"YulFunctionCall","src":"202:51:25"},"nodeType":"YulIf","src":"199:71:25"},{"nodeType":"YulAssignment","src":"279:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:25","type":""}],"src":"14:286:25"},{"body":{"nodeType":"YulBlock","src":"400:92:25","statements":[{"nodeType":"YulAssignment","src":"410:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:25"},"nodeType":"YulFunctionCall","src":"418:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:25"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:25"},"nodeType":"YulFunctionCall","src":"470:14:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:25"},"nodeType":"YulFunctionCall","src":"463:22:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:25"},"nodeType":"YulFunctionCall","src":"445:41:25"},"nodeType":"YulExpressionStatement","src":"445:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:25","type":""}],"src":"305:187:25"},{"body":{"nodeType":"YulBlock","src":"542:86:25","statements":[{"body":{"nodeType":"YulBlock","src":"606:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"615:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"618:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"608:6:25"},"nodeType":"YulFunctionCall","src":"608:12:25"},"nodeType":"YulExpressionStatement","src":"608:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"565:5:25"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"576:5:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"591:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"596:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"587:3:25"},"nodeType":"YulFunctionCall","src":"587:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"600:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"583:3:25"},"nodeType":"YulFunctionCall","src":"583:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"572:3:25"},"nodeType":"YulFunctionCall","src":"572:31:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"562:2:25"},"nodeType":"YulFunctionCall","src":"562:42:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"555:6:25"},"nodeType":"YulFunctionCall","src":"555:50:25"},"nodeType":"YulIf","src":"552:70:25"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"531:5:25","type":""}],"src":"497:131:25"},{"body":{"nodeType":"YulBlock","src":"703:177:25","statements":[{"body":{"nodeType":"YulBlock","src":"749:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"758:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"751:6:25"},"nodeType":"YulFunctionCall","src":"751:12:25"},"nodeType":"YulExpressionStatement","src":"751:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"724:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"733:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"720:3:25"},"nodeType":"YulFunctionCall","src":"720:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"745:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"716:3:25"},"nodeType":"YulFunctionCall","src":"716:32:25"},"nodeType":"YulIf","src":"713:52:25"},{"nodeType":"YulVariableDeclaration","src":"774:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"800:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"787:12:25"},"nodeType":"YulFunctionCall","src":"787:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"778:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"844:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"819:24:25"},"nodeType":"YulFunctionCall","src":"819:31:25"},"nodeType":"YulExpressionStatement","src":"819:31:25"},{"nodeType":"YulAssignment","src":"859:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"869:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"859:6:25"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"669:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"680:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"692:6:25","type":""}],"src":"633:247:25"},{"body":{"nodeType":"YulBlock","src":"955:110:25","statements":[{"body":{"nodeType":"YulBlock","src":"1001:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1010:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1013:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1003:6:25"},"nodeType":"YulFunctionCall","src":"1003:12:25"},"nodeType":"YulExpressionStatement","src":"1003:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"976:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"985:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"972:3:25"},"nodeType":"YulFunctionCall","src":"972:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"997:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"968:3:25"},"nodeType":"YulFunctionCall","src":"968:32:25"},"nodeType":"YulIf","src":"965:52:25"},{"nodeType":"YulAssignment","src":"1026:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1049:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1036:12:25"},"nodeType":"YulFunctionCall","src":"1036:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1026:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"921:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"932:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"944:6:25","type":""}],"src":"885:180:25"},{"body":{"nodeType":"YulBlock","src":"1171:76:25","statements":[{"nodeType":"YulAssignment","src":"1181:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1193:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1204:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1189:3:25"},"nodeType":"YulFunctionCall","src":"1189:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1181:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1223:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"1234:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1216:6:25"},"nodeType":"YulFunctionCall","src":"1216:25:25"},"nodeType":"YulExpressionStatement","src":"1216:25:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1140:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1151:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1162:4:25","type":""}],"src":"1070:177:25"},{"body":{"nodeType":"YulBlock","src":"1339:228:25","statements":[{"body":{"nodeType":"YulBlock","src":"1385:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1394:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1397:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1387:6:25"},"nodeType":"YulFunctionCall","src":"1387:12:25"},"nodeType":"YulExpressionStatement","src":"1387:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1360:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1369:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1356:3:25"},"nodeType":"YulFunctionCall","src":"1356:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1381:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1352:3:25"},"nodeType":"YulFunctionCall","src":"1352:32:25"},"nodeType":"YulIf","src":"1349:52:25"},{"nodeType":"YulAssignment","src":"1410:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1433:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1420:12:25"},"nodeType":"YulFunctionCall","src":"1420:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1410:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1452:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1482:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"1493:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1478:3:25"},"nodeType":"YulFunctionCall","src":"1478:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1465:12:25"},"nodeType":"YulFunctionCall","src":"1465:32:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1456:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1531:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1506:24:25"},"nodeType":"YulFunctionCall","src":"1506:31:25"},"nodeType":"YulExpressionStatement","src":"1506:31:25"},{"nodeType":"YulAssignment","src":"1546:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1556:5:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1546:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1297:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1308:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1320:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1328:6:25","type":""}],"src":"1252:315:25"},{"body":{"nodeType":"YulBlock","src":"1604:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1621:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1628:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1633:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1624:3:25"},"nodeType":"YulFunctionCall","src":"1624:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1614:6:25"},"nodeType":"YulFunctionCall","src":"1614:31:25"},"nodeType":"YulExpressionStatement","src":"1614:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1661:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1664:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1654:6:25"},"nodeType":"YulFunctionCall","src":"1654:15:25"},"nodeType":"YulExpressionStatement","src":"1654:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1685:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1688:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1678:6:25"},"nodeType":"YulFunctionCall","src":"1678:15:25"},"nodeType":"YulExpressionStatement","src":"1678:15:25"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1572:127:25"},{"body":{"nodeType":"YulBlock","src":"1800:960:25","statements":[{"body":{"nodeType":"YulBlock","src":"1846:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1855:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1858:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1848:6:25"},"nodeType":"YulFunctionCall","src":"1848:12:25"},"nodeType":"YulExpressionStatement","src":"1848:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1821:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1817:3:25"},"nodeType":"YulFunctionCall","src":"1817:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"1842:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1813:3:25"},"nodeType":"YulFunctionCall","src":"1813:32:25"},"nodeType":"YulIf","src":"1810:52:25"},{"nodeType":"YulVariableDeclaration","src":"1871:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1897:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1884:12:25"},"nodeType":"YulFunctionCall","src":"1884:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1875:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1941:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1916:24:25"},"nodeType":"YulFunctionCall","src":"1916:31:25"},"nodeType":"YulExpressionStatement","src":"1916:31:25"},{"nodeType":"YulAssignment","src":"1956:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"1966:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1956:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"1980:46:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2011:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"2022:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2007:3:25"},"nodeType":"YulFunctionCall","src":"2007:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1994:12:25"},"nodeType":"YulFunctionCall","src":"1994:32:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1984:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2035:28:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2045:18:25","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2039:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2090:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2099:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2102:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2092:6:25"},"nodeType":"YulFunctionCall","src":"2092:12:25"},"nodeType":"YulExpressionStatement","src":"2092:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2078:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"2086:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2075:2:25"},"nodeType":"YulFunctionCall","src":"2075:14:25"},"nodeType":"YulIf","src":"2072:34:25"},{"nodeType":"YulVariableDeclaration","src":"2115:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2129:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"2140:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2125:3:25"},"nodeType":"YulFunctionCall","src":"2125:22:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2119:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2195:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2204:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2207:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2197:6:25"},"nodeType":"YulFunctionCall","src":"2197:12:25"},"nodeType":"YulExpressionStatement","src":"2197:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2174:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"2178:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:25"},"nodeType":"YulFunctionCall","src":"2170:13:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2185:7:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2166:3:25"},"nodeType":"YulFunctionCall","src":"2166:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2159:6:25"},"nodeType":"YulFunctionCall","src":"2159:35:25"},"nodeType":"YulIf","src":"2156:55:25"},{"nodeType":"YulVariableDeclaration","src":"2220:26:25","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2243:2:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2230:12:25"},"nodeType":"YulFunctionCall","src":"2230:16:25"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2224:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2269:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2271:16:25"},"nodeType":"YulFunctionCall","src":"2271:18:25"},"nodeType":"YulExpressionStatement","src":"2271:18:25"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2261:2:25"},{"name":"_1","nodeType":"YulIdentifier","src":"2265:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2258:2:25"},"nodeType":"YulFunctionCall","src":"2258:10:25"},"nodeType":"YulIf","src":"2255:36:25"},{"nodeType":"YulVariableDeclaration","src":"2300:17:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2314:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2310:3:25"},"nodeType":"YulFunctionCall","src":"2310:7:25"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2304:2:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2326:23:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2346:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2340:5:25"},"nodeType":"YulFunctionCall","src":"2340:9:25"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2330:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2358:71:25","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2380:6:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2404:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2400:3:25"},"nodeType":"YulFunctionCall","src":"2400:13:25"},{"name":"_4","nodeType":"YulIdentifier","src":"2415:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2396:3:25"},"nodeType":"YulFunctionCall","src":"2396:22:25"},{"kind":"number","nodeType":"YulLiteral","src":"2420:2:25","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:25"},"nodeType":"YulFunctionCall","src":"2392:31:25"},{"name":"_4","nodeType":"YulIdentifier","src":"2425:2:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2388:3:25"},"nodeType":"YulFunctionCall","src":"2388:40:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:25"},"nodeType":"YulFunctionCall","src":"2376:53:25"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2362:10:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"2488:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2490:16:25"},"nodeType":"YulFunctionCall","src":"2490:18:25"},"nodeType":"YulExpressionStatement","src":"2490:18:25"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2447:10:25"},{"name":"_1","nodeType":"YulIdentifier","src":"2459:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2444:2:25"},"nodeType":"YulFunctionCall","src":"2444:18:25"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2467:10:25"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2479:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2464:2:25"},"nodeType":"YulFunctionCall","src":"2464:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2441:2:25"},"nodeType":"YulFunctionCall","src":"2441:46:25"},"nodeType":"YulIf","src":"2438:72:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2526:2:25","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2530:10:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2519:6:25"},"nodeType":"YulFunctionCall","src":"2519:22:25"},"nodeType":"YulExpressionStatement","src":"2519:22:25"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2557:6:25"},{"name":"_3","nodeType":"YulIdentifier","src":"2565:2:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2550:6:25"},"nodeType":"YulFunctionCall","src":"2550:18:25"},"nodeType":"YulExpressionStatement","src":"2550:18:25"},{"body":{"nodeType":"YulBlock","src":"2614:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2623:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2626:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2616:6:25"},"nodeType":"YulFunctionCall","src":"2616:12:25"},"nodeType":"YulExpressionStatement","src":"2616:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2591:2:25"},{"name":"_3","nodeType":"YulIdentifier","src":"2595:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:25"},"nodeType":"YulFunctionCall","src":"2587:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"2600:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2583:3:25"},"nodeType":"YulFunctionCall","src":"2583:20:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2605:7:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2580:2:25"},"nodeType":"YulFunctionCall","src":"2580:33:25"},"nodeType":"YulIf","src":"2577:53:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2656:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2652:3:25"},"nodeType":"YulFunctionCall","src":"2652:15:25"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2673:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"2677:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2669:3:25"},"nodeType":"YulFunctionCall","src":"2669:11:25"},{"name":"_3","nodeType":"YulIdentifier","src":"2682:2:25"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2639:12:25"},"nodeType":"YulFunctionCall","src":"2639:46:25"},"nodeType":"YulExpressionStatement","src":"2639:46:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2709:6:25"},{"name":"_3","nodeType":"YulIdentifier","src":"2717:2:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2705:3:25"},"nodeType":"YulFunctionCall","src":"2705:15:25"},{"kind":"number","nodeType":"YulLiteral","src":"2722:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2701:3:25"},"nodeType":"YulFunctionCall","src":"2701:24:25"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2694:6:25"},"nodeType":"YulFunctionCall","src":"2694:35:25"},"nodeType":"YulExpressionStatement","src":"2694:35:25"},{"nodeType":"YulAssignment","src":"2738:16:25","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2748:6:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2738:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1758:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1769:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1781:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1789:6:25","type":""}],"src":"1704:1056:25"},{"body":{"nodeType":"YulBlock","src":"2870:510:25","statements":[{"body":{"nodeType":"YulBlock","src":"2916:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2925:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2928:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2918:6:25"},"nodeType":"YulFunctionCall","src":"2918:12:25"},"nodeType":"YulExpressionStatement","src":"2918:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2891:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"2900:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2887:3:25"},"nodeType":"YulFunctionCall","src":"2887:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"2912:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2883:3:25"},"nodeType":"YulFunctionCall","src":"2883:32:25"},"nodeType":"YulIf","src":"2880:52:25"},{"nodeType":"YulVariableDeclaration","src":"2941:37:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2955:12:25"},"nodeType":"YulFunctionCall","src":"2955:23:25"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2945:6:25","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2987:28:25","value":{"kind":"number","nodeType":"YulLiteral","src":"2997:18:25","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2991:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3042:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3051:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3054:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3044:6:25"},"nodeType":"YulFunctionCall","src":"3044:12:25"},"nodeType":"YulExpressionStatement","src":"3044:12:25"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3030:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"3038:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3027:2:25"},"nodeType":"YulFunctionCall","src":"3027:14:25"},"nodeType":"YulIf","src":"3024:34:25"},{"nodeType":"YulVariableDeclaration","src":"3067:32:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3081:9:25"},{"name":"offset","nodeType":"YulIdentifier","src":"3092:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3077:3:25"},"nodeType":"YulFunctionCall","src":"3077:22:25"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3071:2:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3147:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3156:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3159:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3149:6:25"},"nodeType":"YulFunctionCall","src":"3149:12:25"},"nodeType":"YulExpressionStatement","src":"3149:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3126:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"3130:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3122:3:25"},"nodeType":"YulFunctionCall","src":"3122:13:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3137:7:25"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3118:3:25"},"nodeType":"YulFunctionCall","src":"3118:27:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3111:6:25"},"nodeType":"YulFunctionCall","src":"3111:35:25"},"nodeType":"YulIf","src":"3108:55:25"},{"nodeType":"YulVariableDeclaration","src":"3172:30:25","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3199:2:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3186:12:25"},"nodeType":"YulFunctionCall","src":"3186:16:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3176:6:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"3229:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3238:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3241:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3231:6:25"},"nodeType":"YulFunctionCall","src":"3231:12:25"},"nodeType":"YulExpressionStatement","src":"3231:12:25"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3217:6:25"},{"name":"_1","nodeType":"YulIdentifier","src":"3225:2:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3214:2:25"},"nodeType":"YulFunctionCall","src":"3214:14:25"},"nodeType":"YulIf","src":"3211:34:25"},{"body":{"nodeType":"YulBlock","src":"3303:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3312:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3315:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3305:6:25"},"nodeType":"YulFunctionCall","src":"3305:12:25"},"nodeType":"YulExpressionStatement","src":"3305:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3268:2:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3276:1:25","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3279:6:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3272:3:25"},"nodeType":"YulFunctionCall","src":"3272:14:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3264:3:25"},"nodeType":"YulFunctionCall","src":"3264:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3289:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3260:3:25"},"nodeType":"YulFunctionCall","src":"3260:32:25"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3294:7:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3257:2:25"},"nodeType":"YulFunctionCall","src":"3257:45:25"},"nodeType":"YulIf","src":"3254:65:25"},{"nodeType":"YulAssignment","src":"3328:21:25","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3342:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"3346:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3338:3:25"},"nodeType":"YulFunctionCall","src":"3338:11:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3328:6:25"}]},{"nodeType":"YulAssignment","src":"3358:16:25","value":{"name":"length","nodeType":"YulIdentifier","src":"3368:6:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3358:6:25"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2828:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2839:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2851:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2859:6:25","type":""}],"src":"2765:615:25"},{"body":{"nodeType":"YulBlock","src":"3472:161:25","statements":[{"body":{"nodeType":"YulBlock","src":"3518:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3527:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3530:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3520:6:25"},"nodeType":"YulFunctionCall","src":"3520:12:25"},"nodeType":"YulExpressionStatement","src":"3520:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3493:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3502:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3489:3:25"},"nodeType":"YulFunctionCall","src":"3489:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3514:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3485:3:25"},"nodeType":"YulFunctionCall","src":"3485:32:25"},"nodeType":"YulIf","src":"3482:52:25"},{"nodeType":"YulAssignment","src":"3543:33:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3566:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3553:12:25"},"nodeType":"YulFunctionCall","src":"3553:23:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3543:6:25"}]},{"nodeType":"YulAssignment","src":"3585:42:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3612:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3623:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3608:3:25"},"nodeType":"YulFunctionCall","src":"3608:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3595:12:25"},"nodeType":"YulFunctionCall","src":"3595:32:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3585:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3430:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3441:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3453:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3461:6:25","type":""}],"src":"3385:248:25"},{"body":{"nodeType":"YulBlock","src":"3739:102:25","statements":[{"nodeType":"YulAssignment","src":"3749:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3761:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"3772:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3757:3:25"},"nodeType":"YulFunctionCall","src":"3757:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3749:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3791:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:25"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3822:3:25","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3827:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3818:3:25"},"nodeType":"YulFunctionCall","src":"3818:11:25"},{"kind":"number","nodeType":"YulLiteral","src":"3831:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3814:3:25"},"nodeType":"YulFunctionCall","src":"3814:19:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3802:3:25"},"nodeType":"YulFunctionCall","src":"3802:32:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3784:6:25"},"nodeType":"YulFunctionCall","src":"3784:51:25"},"nodeType":"YulExpressionStatement","src":"3784:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3708:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3719:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3730:4:25","type":""}],"src":"3638:203:25"},{"body":{"nodeType":"YulBlock","src":"3950:425:25","statements":[{"body":{"nodeType":"YulBlock","src":"3996:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4005:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4008:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3998:6:25"},"nodeType":"YulFunctionCall","src":"3998:12:25"},"nodeType":"YulExpressionStatement","src":"3998:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3971:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"3980:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3967:3:25"},"nodeType":"YulFunctionCall","src":"3967:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"3992:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3963:3:25"},"nodeType":"YulFunctionCall","src":"3963:32:25"},"nodeType":"YulIf","src":"3960:52:25"},{"nodeType":"YulVariableDeclaration","src":"4021:36:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4047:9:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4034:12:25"},"nodeType":"YulFunctionCall","src":"4034:23:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4025:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4091:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4066:24:25"},"nodeType":"YulFunctionCall","src":"4066:31:25"},"nodeType":"YulExpressionStatement","src":"4066:31:25"},{"nodeType":"YulAssignment","src":"4106:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"4116:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4106:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"4130:47:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4162:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4173:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4158:3:25"},"nodeType":"YulFunctionCall","src":"4158:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4145:12:25"},"nodeType":"YulFunctionCall","src":"4145:32:25"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4134:7:25","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4211:7:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4186:24:25"},"nodeType":"YulFunctionCall","src":"4186:33:25"},"nodeType":"YulExpressionStatement","src":"4186:33:25"},{"nodeType":"YulAssignment","src":"4228:17:25","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4238:7:25"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4228:6:25"}]},{"nodeType":"YulVariableDeclaration","src":"4254:47:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4286:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4297:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4282:3:25"},"nodeType":"YulFunctionCall","src":"4282:18:25"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4269:12:25"},"nodeType":"YulFunctionCall","src":"4269:32:25"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"4258:7:25","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"4335:7:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4310:24:25"},"nodeType":"YulFunctionCall","src":"4310:33:25"},"nodeType":"YulExpressionStatement","src":"4310:33:25"},{"nodeType":"YulAssignment","src":"4352:17:25","value":{"name":"value_2","nodeType":"YulIdentifier","src":"4362:7:25"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4352:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:25","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:25","type":""}],"src":"3846:529:25"},{"body":{"nodeType":"YulBlock","src":"4481:76:25","statements":[{"nodeType":"YulAssignment","src":"4491:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4503:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"4514:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4499:3:25"},"nodeType":"YulFunctionCall","src":"4499:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4491:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4533:9:25"},{"name":"value0","nodeType":"YulIdentifier","src":"4544:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4526:6:25"},"nodeType":"YulFunctionCall","src":"4526:25:25"},"nodeType":"YulExpressionStatement","src":"4526:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4450:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4461:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4472:4:25","type":""}],"src":"4380:177:25"},{"body":{"nodeType":"YulBlock","src":"4643:170:25","statements":[{"body":{"nodeType":"YulBlock","src":"4689:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4698:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4701:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4691:6:25"},"nodeType":"YulFunctionCall","src":"4691:12:25"},"nodeType":"YulExpressionStatement","src":"4691:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4664:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"4673:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4660:3:25"},"nodeType":"YulFunctionCall","src":"4660:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4656:3:25"},"nodeType":"YulFunctionCall","src":"4656:32:25"},"nodeType":"YulIf","src":"4653:52:25"},{"nodeType":"YulVariableDeclaration","src":"4714:29:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4733:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4727:5:25"},"nodeType":"YulFunctionCall","src":"4727:16:25"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4718:5:25","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4777:5:25"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4752:24:25"},"nodeType":"YulFunctionCall","src":"4752:31:25"},"nodeType":"YulExpressionStatement","src":"4752:31:25"},{"nodeType":"YulAssignment","src":"4792:15:25","value":{"name":"value","nodeType":"YulIdentifier","src":"4802:5:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4792:6:25"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4609:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4620:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4632:6:25","type":""}],"src":"4562:251:25"},{"body":{"nodeType":"YulBlock","src":"4992:237:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5009:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5020:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5002:6:25"},"nodeType":"YulFunctionCall","src":"5002:21:25"},"nodeType":"YulExpressionStatement","src":"5002:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5043:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5054:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5039:3:25"},"nodeType":"YulFunctionCall","src":"5039:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5059:2:25","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5032:6:25"},"nodeType":"YulFunctionCall","src":"5032:30:25"},"nodeType":"YulExpressionStatement","src":"5032:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5082:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5093:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5078:3:25"},"nodeType":"YulFunctionCall","src":"5078:18:25"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"5098:34:25","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5071:6:25"},"nodeType":"YulFunctionCall","src":"5071:62:25"},"nodeType":"YulExpressionStatement","src":"5071:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5153:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5164:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5149:3:25"},"nodeType":"YulFunctionCall","src":"5149:18:25"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"5169:17:25","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5142:6:25"},"nodeType":"YulFunctionCall","src":"5142:45:25"},"nodeType":"YulExpressionStatement","src":"5142:45:25"},{"nodeType":"YulAssignment","src":"5196:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5219:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:25"},"nodeType":"YulFunctionCall","src":"5204:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5196:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4969:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4983:4:25","type":""}],"src":"4818:411:25"},{"body":{"nodeType":"YulBlock","src":"5408:234:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5425:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5436:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5418:6:25"},"nodeType":"YulFunctionCall","src":"5418:21:25"},"nodeType":"YulExpressionStatement","src":"5418:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5459:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5470:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5455:3:25"},"nodeType":"YulFunctionCall","src":"5455:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5475:2:25","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5448:6:25"},"nodeType":"YulFunctionCall","src":"5448:30:25"},"nodeType":"YulExpressionStatement","src":"5448:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5498:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5509:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5494:3:25"},"nodeType":"YulFunctionCall","src":"5494:18:25"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"5514:34:25","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5487:6:25"},"nodeType":"YulFunctionCall","src":"5487:62:25"},"nodeType":"YulExpressionStatement","src":"5487:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5569:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5580:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5565:3:25"},"nodeType":"YulFunctionCall","src":"5565:18:25"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"5585:14:25","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5558:6:25"},"nodeType":"YulFunctionCall","src":"5558:42:25"},"nodeType":"YulExpressionStatement","src":"5558:42:25"},{"nodeType":"YulAssignment","src":"5609:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5621:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5632:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5617:3:25"},"nodeType":"YulFunctionCall","src":"5617:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5609:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5385:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5399:4:25","type":""}],"src":"5234:408:25"},{"body":{"nodeType":"YulBlock","src":"5821:234:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5838:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5849:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5831:6:25"},"nodeType":"YulFunctionCall","src":"5831:21:25"},"nodeType":"YulExpressionStatement","src":"5831:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5872:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5883:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5868:3:25"},"nodeType":"YulFunctionCall","src":"5868:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"5888:2:25","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5861:6:25"},"nodeType":"YulFunctionCall","src":"5861:30:25"},"nodeType":"YulExpressionStatement","src":"5861:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5911:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5922:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5907:3:25"},"nodeType":"YulFunctionCall","src":"5907:18:25"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"5927:34:25","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5900:6:25"},"nodeType":"YulFunctionCall","src":"5900:62:25"},"nodeType":"YulExpressionStatement","src":"5900:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5982:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"5993:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5978:3:25"},"nodeType":"YulFunctionCall","src":"5978:18:25"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"5998:14:25","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5971:6:25"},"nodeType":"YulFunctionCall","src":"5971:42:25"},"nodeType":"YulExpressionStatement","src":"5971:42:25"},{"nodeType":"YulAssignment","src":"6022:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6034:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6045:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6030:3:25"},"nodeType":"YulFunctionCall","src":"6030:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6022:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5798:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5812:4:25","type":""}],"src":"5647:408:25"},{"body":{"nodeType":"YulBlock","src":"6234:246:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6251:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6262:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6244:6:25"},"nodeType":"YulFunctionCall","src":"6244:21:25"},"nodeType":"YulExpressionStatement","src":"6244:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6285:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6296:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6281:3:25"},"nodeType":"YulFunctionCall","src":"6281:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"6301:2:25","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6274:6:25"},"nodeType":"YulFunctionCall","src":"6274:30:25"},"nodeType":"YulExpressionStatement","src":"6274:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6324:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6335:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6320:3:25"},"nodeType":"YulFunctionCall","src":"6320:18:25"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"6340:34:25","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6313:6:25"},"nodeType":"YulFunctionCall","src":"6313:62:25"},"nodeType":"YulExpressionStatement","src":"6313:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6395:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6406:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6391:3:25"},"nodeType":"YulFunctionCall","src":"6391:18:25"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"6411:26:25","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6384:6:25"},"nodeType":"YulFunctionCall","src":"6384:54:25"},"nodeType":"YulExpressionStatement","src":"6384:54:25"},{"nodeType":"YulAssignment","src":"6447:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6459:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"6470:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6455:3:25"},"nodeType":"YulFunctionCall","src":"6455:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6447:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6211:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6225:4:25","type":""}],"src":"6060:420:25"},{"body":{"nodeType":"YulBlock","src":"6517:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6534:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6541:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6546:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6537:3:25"},"nodeType":"YulFunctionCall","src":"6537:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6527:6:25"},"nodeType":"YulFunctionCall","src":"6527:31:25"},"nodeType":"YulExpressionStatement","src":"6527:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6574:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6577:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6567:6:25"},"nodeType":"YulFunctionCall","src":"6567:15:25"},"nodeType":"YulExpressionStatement","src":"6567:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6598:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6601:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6591:6:25"},"nodeType":"YulFunctionCall","src":"6591:15:25"},"nodeType":"YulExpressionStatement","src":"6591:15:25"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6485:127:25"},{"body":{"nodeType":"YulBlock","src":"6649:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6666:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6673:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6678:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6669:3:25"},"nodeType":"YulFunctionCall","src":"6669:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6659:6:25"},"nodeType":"YulFunctionCall","src":"6659:31:25"},"nodeType":"YulExpressionStatement","src":"6659:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6706:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6709:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:25"},"nodeType":"YulFunctionCall","src":"6699:15:25"},"nodeType":"YulExpressionStatement","src":"6699:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6730:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6733:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6723:6:25"},"nodeType":"YulFunctionCall","src":"6723:15:25"},"nodeType":"YulExpressionStatement","src":"6723:15:25"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6617:127:25"},{"body":{"nodeType":"YulBlock","src":"6796:88:25","statements":[{"body":{"nodeType":"YulBlock","src":"6827:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6829:16:25"},"nodeType":"YulFunctionCall","src":"6829:18:25"},"nodeType":"YulExpressionStatement","src":"6829:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6812:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6823:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6819:3:25"},"nodeType":"YulFunctionCall","src":"6819:6:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6809:2:25"},"nodeType":"YulFunctionCall","src":"6809:17:25"},"nodeType":"YulIf","src":"6806:43:25"},{"nodeType":"YulAssignment","src":"6858:20:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6869:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"6876:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6865:3:25"},"nodeType":"YulFunctionCall","src":"6865:13:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6858:3:25"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6778:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6788:3:25","type":""}],"src":"6749:135:25"},{"body":{"nodeType":"YulBlock","src":"7063:236:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7080:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7091:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7073:6:25"},"nodeType":"YulFunctionCall","src":"7073:21:25"},"nodeType":"YulExpressionStatement","src":"7073:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7114:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7125:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7110:3:25"},"nodeType":"YulFunctionCall","src":"7110:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"7130:2:25","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7103:6:25"},"nodeType":"YulFunctionCall","src":"7103:30:25"},"nodeType":"YulExpressionStatement","src":"7103:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7153:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7164:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:25"},"nodeType":"YulFunctionCall","src":"7149:18:25"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"7169:34:25","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7142:6:25"},"nodeType":"YulFunctionCall","src":"7142:62:25"},"nodeType":"YulExpressionStatement","src":"7142:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7224:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7235:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:25"},"nodeType":"YulFunctionCall","src":"7220:18:25"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"7240:16:25","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7213:6:25"},"nodeType":"YulFunctionCall","src":"7213:44:25"},"nodeType":"YulExpressionStatement","src":"7213:44:25"},{"nodeType":"YulAssignment","src":"7266:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7278:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7289:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7274:3:25"},"nodeType":"YulFunctionCall","src":"7274:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7266:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7040:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7054:4:25","type":""}],"src":"6889:410:25"},{"body":{"nodeType":"YulBlock","src":"7411:87:25","statements":[{"nodeType":"YulAssignment","src":"7421:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7433:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7444:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7429:3:25"},"nodeType":"YulFunctionCall","src":"7429:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7421:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7463:9:25"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7478:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"7486:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7474:3:25"},"nodeType":"YulFunctionCall","src":"7474:17:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7456:6:25"},"nodeType":"YulFunctionCall","src":"7456:36:25"},"nodeType":"YulExpressionStatement","src":"7456:36:25"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7380:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7391:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7402:4:25","type":""}],"src":"7304:194:25"},{"body":{"nodeType":"YulBlock","src":"7584:103:25","statements":[{"body":{"nodeType":"YulBlock","src":"7630:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7639:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7642:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7632:6:25"},"nodeType":"YulFunctionCall","src":"7632:12:25"},"nodeType":"YulExpressionStatement","src":"7632:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7605:7:25"},{"name":"headStart","nodeType":"YulIdentifier","src":"7614:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7601:3:25"},"nodeType":"YulFunctionCall","src":"7601:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7626:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7597:3:25"},"nodeType":"YulFunctionCall","src":"7597:32:25"},"nodeType":"YulIf","src":"7594:52:25"},{"nodeType":"YulAssignment","src":"7655:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7671:9:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7665:5:25"},"nodeType":"YulFunctionCall","src":"7665:16:25"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7655:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7550:9:25","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7561:7:25","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7573:6:25","type":""}],"src":"7503:184:25"},{"body":{"nodeType":"YulBlock","src":"7866:236:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7883:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7894:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7876:6:25"},"nodeType":"YulFunctionCall","src":"7876:21:25"},"nodeType":"YulExpressionStatement","src":"7876:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7917:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7928:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7913:3:25"},"nodeType":"YulFunctionCall","src":"7913:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"7933:2:25","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7906:6:25"},"nodeType":"YulFunctionCall","src":"7906:30:25"},"nodeType":"YulExpressionStatement","src":"7906:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7956:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"7967:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7952:3:25"},"nodeType":"YulFunctionCall","src":"7952:18:25"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"7972:34:25","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7945:6:25"},"nodeType":"YulFunctionCall","src":"7945:62:25"},"nodeType":"YulExpressionStatement","src":"7945:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8027:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8038:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8023:3:25"},"nodeType":"YulFunctionCall","src":"8023:18:25"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"8043:16:25","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8016:6:25"},"nodeType":"YulFunctionCall","src":"8016:44:25"},"nodeType":"YulExpressionStatement","src":"8016:44:25"},{"nodeType":"YulAssignment","src":"8069:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8081:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8092:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8077:3:25"},"nodeType":"YulFunctionCall","src":"8077:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8069:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7843:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7857:4:25","type":""}],"src":"7692:410:25"},{"body":{"nodeType":"YulBlock","src":"8281:231:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8298:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8309:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8291:6:25"},"nodeType":"YulFunctionCall","src":"8291:21:25"},"nodeType":"YulExpressionStatement","src":"8291:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8332:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8343:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8328:3:25"},"nodeType":"YulFunctionCall","src":"8328:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"8348:2:25","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8321:6:25"},"nodeType":"YulFunctionCall","src":"8321:30:25"},"nodeType":"YulExpressionStatement","src":"8321:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8371:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8382:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8367:3:25"},"nodeType":"YulFunctionCall","src":"8367:18:25"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"8387:34:25","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8360:6:25"},"nodeType":"YulFunctionCall","src":"8360:62:25"},"nodeType":"YulExpressionStatement","src":"8360:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8442:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8453:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8438:3:25"},"nodeType":"YulFunctionCall","src":"8438:18:25"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"8458:11:25","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8431:6:25"},"nodeType":"YulFunctionCall","src":"8431:39:25"},"nodeType":"YulExpressionStatement","src":"8431:39:25"},{"nodeType":"YulAssignment","src":"8479:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8491:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8502:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:25"},"nodeType":"YulFunctionCall","src":"8487:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8479:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8258:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8272:4:25","type":""}],"src":"8107:405:25"},{"body":{"nodeType":"YulBlock","src":"8691:233:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8708:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8719:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8701:6:25"},"nodeType":"YulFunctionCall","src":"8701:21:25"},"nodeType":"YulExpressionStatement","src":"8701:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8742:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8753:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8738:3:25"},"nodeType":"YulFunctionCall","src":"8738:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"8758:2:25","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8731:6:25"},"nodeType":"YulFunctionCall","src":"8731:30:25"},"nodeType":"YulExpressionStatement","src":"8731:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8781:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8792:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8777:3:25"},"nodeType":"YulFunctionCall","src":"8777:18:25"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"8797:34:25","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8770:6:25"},"nodeType":"YulFunctionCall","src":"8770:62:25"},"nodeType":"YulExpressionStatement","src":"8770:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8852:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8863:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8848:3:25"},"nodeType":"YulFunctionCall","src":"8848:18:25"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"8868:13:25","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8841:6:25"},"nodeType":"YulFunctionCall","src":"8841:41:25"},"nodeType":"YulExpressionStatement","src":"8841:41:25"},{"nodeType":"YulAssignment","src":"8891:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8903:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"8914:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8899:3:25"},"nodeType":"YulFunctionCall","src":"8899:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8891:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8668:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8682:4:25","type":""}],"src":"8517:407:25"},{"body":{"nodeType":"YulBlock","src":"8995:184:25","statements":[{"nodeType":"YulVariableDeclaration","src":"9005:10:25","value":{"kind":"number","nodeType":"YulLiteral","src":"9014:1:25","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9009:1:25","type":""}]},{"body":{"nodeType":"YulBlock","src":"9074:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9099:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"9104:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9095:3:25"},"nodeType":"YulFunctionCall","src":"9095:11:25"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9118:3:25"},{"name":"i","nodeType":"YulIdentifier","src":"9123:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9114:3:25"},"nodeType":"YulFunctionCall","src":"9114:11:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9108:5:25"},"nodeType":"YulFunctionCall","src":"9108:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9088:6:25"},"nodeType":"YulFunctionCall","src":"9088:39:25"},"nodeType":"YulExpressionStatement","src":"9088:39:25"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9035:1:25"},{"name":"length","nodeType":"YulIdentifier","src":"9038:6:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9032:2:25"},"nodeType":"YulFunctionCall","src":"9032:13:25"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9046:19:25","statements":[{"nodeType":"YulAssignment","src":"9048:15:25","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9057:1:25"},{"kind":"number","nodeType":"YulLiteral","src":"9060:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9053:3:25"},"nodeType":"YulFunctionCall","src":"9053:10:25"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9048:1:25"}]}]},"pre":{"nodeType":"YulBlock","src":"9028:3:25","statements":[]},"src":"9024:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9157:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9162:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9153:3:25"},"nodeType":"YulFunctionCall","src":"9153:16:25"},{"kind":"number","nodeType":"YulLiteral","src":"9171:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9146:6:25"},"nodeType":"YulFunctionCall","src":"9146:27:25"},"nodeType":"YulExpressionStatement","src":"9146:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8973:3:25","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8978:3:25","type":""},{"name":"length","nodeType":"YulTypedName","src":"8983:6:25","type":""}],"src":"8929:250:25"},{"body":{"nodeType":"YulBlock","src":"9573:423:25","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9590:3:25"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"9595:25:25","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9583:6:25"},"nodeType":"YulFunctionCall","src":"9583:38:25"},"nodeType":"YulExpressionStatement","src":"9583:38:25"},{"nodeType":"YulVariableDeclaration","src":"9630:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9650:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9644:5:25"},"nodeType":"YulFunctionCall","src":"9644:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9634:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9705:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9713:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9701:3:25"},"nodeType":"YulFunctionCall","src":"9701:17:25"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9724:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"9729:2:25","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9720:3:25"},"nodeType":"YulFunctionCall","src":"9720:12:25"},{"name":"length","nodeType":"YulIdentifier","src":"9734:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9666:34:25"},"nodeType":"YulFunctionCall","src":"9666:75:25"},"nodeType":"YulExpressionStatement","src":"9666:75:25"},{"nodeType":"YulVariableDeclaration","src":"9750:26:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9764:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"9769:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9760:3:25"},"nodeType":"YulFunctionCall","src":"9760:16:25"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9754:2:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9796:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"9800:2:25","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9792:3:25"},"nodeType":"YulFunctionCall","src":"9792:11:25"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"9805:19:25","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9785:6:25"},"nodeType":"YulFunctionCall","src":"9785:40:25"},"nodeType":"YulExpressionStatement","src":"9785:40:25"},{"nodeType":"YulVariableDeclaration","src":"9834:29:25","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9856:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9850:5:25"},"nodeType":"YulFunctionCall","src":"9850:13:25"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"9838:8:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9911:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"9919:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9907:3:25"},"nodeType":"YulFunctionCall","src":"9907:17:25"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9930:2:25"},{"kind":"number","nodeType":"YulLiteral","src":"9934:2:25","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:25"},"nodeType":"YulFunctionCall","src":"9926:11:25"},{"name":"length_1","nodeType":"YulIdentifier","src":"9939:8:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9872:34:25"},"nodeType":"YulFunctionCall","src":"9872:76:25"},"nodeType":"YulExpressionStatement","src":"9872:76:25"},{"nodeType":"YulAssignment","src":"9957:33:25","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9972:2:25"},{"name":"length_1","nodeType":"YulIdentifier","src":"9976:8:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9968:3:25"},"nodeType":"YulFunctionCall","src":"9968:17:25"},{"kind":"number","nodeType":"YulLiteral","src":"9987:2:25","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9964:3:25"},"nodeType":"YulFunctionCall","src":"9964:26:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9957:3:25"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9541:3:25","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9546:6:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9554:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9565:3:25","type":""}],"src":"9184:812:25"},{"body":{"nodeType":"YulBlock","src":"10122:275:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10139:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10150:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10132:6:25"},"nodeType":"YulFunctionCall","src":"10132:21:25"},"nodeType":"YulExpressionStatement","src":"10132:21:25"},{"nodeType":"YulVariableDeclaration","src":"10162:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10182:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10176:5:25"},"nodeType":"YulFunctionCall","src":"10176:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10166:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10209:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10220:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10205:3:25"},"nodeType":"YulFunctionCall","src":"10205:18:25"},{"name":"length","nodeType":"YulIdentifier","src":"10225:6:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10198:6:25"},"nodeType":"YulFunctionCall","src":"10198:34:25"},"nodeType":"YulExpressionStatement","src":"10198:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10280:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10288:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10276:3:25"},"nodeType":"YulFunctionCall","src":"10276:15:25"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10297:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10308:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10293:3:25"},"nodeType":"YulFunctionCall","src":"10293:18:25"},{"name":"length","nodeType":"YulIdentifier","src":"10313:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10241:34:25"},"nodeType":"YulFunctionCall","src":"10241:79:25"},"nodeType":"YulExpressionStatement","src":"10241:79:25"},{"nodeType":"YulAssignment","src":"10329:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10345:9:25"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10364:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"10372:2:25","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10360:3:25"},"nodeType":"YulFunctionCall","src":"10360:15:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10381:2:25","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10377:3:25"},"nodeType":"YulFunctionCall","src":"10377:7:25"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10356:3:25"},"nodeType":"YulFunctionCall","src":"10356:29:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10341:3:25"},"nodeType":"YulFunctionCall","src":"10341:45:25"},{"kind":"number","nodeType":"YulLiteral","src":"10388:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10337:3:25"},"nodeType":"YulFunctionCall","src":"10337:54:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10329:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10091:9:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10102:6:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10113:4:25","type":""}],"src":"10001:396:25"},{"body":{"nodeType":"YulBlock","src":"10576:235:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10593:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10604:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10586:6:25"},"nodeType":"YulFunctionCall","src":"10586:21:25"},"nodeType":"YulExpressionStatement","src":"10586:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10627:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10638:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10623:3:25"},"nodeType":"YulFunctionCall","src":"10623:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"10643:2:25","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10616:6:25"},"nodeType":"YulFunctionCall","src":"10616:30:25"},"nodeType":"YulExpressionStatement","src":"10616:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10677:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:25"},"nodeType":"YulFunctionCall","src":"10662:18:25"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"10682:34:25","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10655:6:25"},"nodeType":"YulFunctionCall","src":"10655:62:25"},"nodeType":"YulExpressionStatement","src":"10655:62:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10748:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10733:3:25"},"nodeType":"YulFunctionCall","src":"10733:18:25"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"10753:15:25","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10726:6:25"},"nodeType":"YulFunctionCall","src":"10726:43:25"},"nodeType":"YulExpressionStatement","src":"10726:43:25"},{"nodeType":"YulAssignment","src":"10778:27:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10790:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"10801:3:25","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10786:3:25"},"nodeType":"YulFunctionCall","src":"10786:19:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10778:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10553:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10567:4:25","type":""}],"src":"10402:409:25"},{"body":{"nodeType":"YulBlock","src":"10868:116:25","statements":[{"nodeType":"YulAssignment","src":"10878:20:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10893:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"10896:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10889:3:25"},"nodeType":"YulFunctionCall","src":"10889:9:25"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"10878:7:25"}]},{"body":{"nodeType":"YulBlock","src":"10956:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10958:16:25"},"nodeType":"YulFunctionCall","src":"10958:18:25"},"nodeType":"YulExpressionStatement","src":"10958:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10927:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10920:6:25"},"nodeType":"YulFunctionCall","src":"10920:9:25"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10934:1:25"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"10941:7:25"},{"name":"x","nodeType":"YulIdentifier","src":"10950:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10937:3:25"},"nodeType":"YulFunctionCall","src":"10937:15:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10931:2:25"},"nodeType":"YulFunctionCall","src":"10931:22:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10917:2:25"},"nodeType":"YulFunctionCall","src":"10917:37:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10910:6:25"},"nodeType":"YulFunctionCall","src":"10910:45:25"},"nodeType":"YulIf","src":"10907:71:25"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10847:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"10850:1:25","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"10856:7:25","type":""}],"src":"10816:168:25"},{"body":{"nodeType":"YulBlock","src":"11037:77:25","statements":[{"nodeType":"YulAssignment","src":"11047:16:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11058:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"11061:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11054:3:25"},"nodeType":"YulFunctionCall","src":"11054:9:25"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11047:3:25"}]},{"body":{"nodeType":"YulBlock","src":"11086:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11088:16:25"},"nodeType":"YulFunctionCall","src":"11088:18:25"},"nodeType":"YulExpressionStatement","src":"11088:18:25"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11078:1:25"},{"name":"sum","nodeType":"YulIdentifier","src":"11081:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11075:2:25"},"nodeType":"YulFunctionCall","src":"11075:10:25"},"nodeType":"YulIf","src":"11072:36:25"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11020:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"11023:1:25","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11029:3:25","type":""}],"src":"10989:125:25"},{"body":{"nodeType":"YulBlock","src":"11166:89:25","statements":[{"body":{"nodeType":"YulBlock","src":"11193:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11195:16:25"},"nodeType":"YulFunctionCall","src":"11195:18:25"},"nodeType":"YulExpressionStatement","src":"11195:18:25"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11186:5:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11179:6:25"},"nodeType":"YulFunctionCall","src":"11179:13:25"},"nodeType":"YulIf","src":"11176:39:25"},{"nodeType":"YulAssignment","src":"11224:25:25","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11235:5:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11246:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11242:3:25"},"nodeType":"YulFunctionCall","src":"11242:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11231:3:25"},"nodeType":"YulFunctionCall","src":"11231:18:25"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11224:3:25"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11148:5:25","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11158:3:25","type":""}],"src":"11119:136:25"},{"body":{"nodeType":"YulBlock","src":"11434:182:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11451:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11462:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11444:6:25"},"nodeType":"YulFunctionCall","src":"11444:21:25"},"nodeType":"YulExpressionStatement","src":"11444:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11485:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11496:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11481:3:25"},"nodeType":"YulFunctionCall","src":"11481:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"11501:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11474:6:25"},"nodeType":"YulFunctionCall","src":"11474:30:25"},"nodeType":"YulExpressionStatement","src":"11474:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11524:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11535:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11520:3:25"},"nodeType":"YulFunctionCall","src":"11520:18:25"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"11540:34:25","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11513:6:25"},"nodeType":"YulFunctionCall","src":"11513:62:25"},"nodeType":"YulExpressionStatement","src":"11513:62:25"},{"nodeType":"YulAssignment","src":"11584:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11596:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"11607:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11592:3:25"},"nodeType":"YulFunctionCall","src":"11592:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11584:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11411:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11425:4:25","type":""}],"src":"11260:356:25"},{"body":{"nodeType":"YulBlock","src":"11670:79:25","statements":[{"nodeType":"YulAssignment","src":"11680:17:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11692:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"11695:1:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11688:3:25"},"nodeType":"YulFunctionCall","src":"11688:9:25"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11680:4:25"}]},{"body":{"nodeType":"YulBlock","src":"11721:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11723:16:25"},"nodeType":"YulFunctionCall","src":"11723:18:25"},"nodeType":"YulExpressionStatement","src":"11723:18:25"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"11712:4:25"},{"name":"x","nodeType":"YulIdentifier","src":"11718:1:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11709:2:25"},"nodeType":"YulFunctionCall","src":"11709:11:25"},"nodeType":"YulIf","src":"11706:37:25"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11652:1:25","type":""},{"name":"y","nodeType":"YulTypedName","src":"11655:1:25","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11661:4:25","type":""}],"src":"11621:128:25"},{"body":{"nodeType":"YulBlock","src":"11786:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11803:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11810:3:25","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11815:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11806:3:25"},"nodeType":"YulFunctionCall","src":"11806:20:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11796:6:25"},"nodeType":"YulFunctionCall","src":"11796:31:25"},"nodeType":"YulExpressionStatement","src":"11796:31:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11843:1:25","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11846:4:25","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11836:6:25"},"nodeType":"YulFunctionCall","src":"11836:15:25"},"nodeType":"YulExpressionStatement","src":"11836:15:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11867:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11870:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11860:6:25"},"nodeType":"YulFunctionCall","src":"11860:15:25"},"nodeType":"YulExpressionStatement","src":"11860:15:25"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"11754:127:25"},{"body":{"nodeType":"YulBlock","src":"12023:150:25","statements":[{"nodeType":"YulVariableDeclaration","src":"12033:27:25","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12053:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12047:5:25"},"nodeType":"YulFunctionCall","src":"12047:13:25"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12037:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12108:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"12116:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12104:3:25"},"nodeType":"YulFunctionCall","src":"12104:17:25"},{"name":"pos","nodeType":"YulIdentifier","src":"12123:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"12128:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12069:34:25"},"nodeType":"YulFunctionCall","src":"12069:66:25"},"nodeType":"YulExpressionStatement","src":"12069:66:25"},{"nodeType":"YulAssignment","src":"12144:23:25","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12155:3:25"},{"name":"length","nodeType":"YulIdentifier","src":"12160:6:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12151:3:25"},"nodeType":"YulFunctionCall","src":"12151:16:25"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12144:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11999:3:25","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12004:6:25","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12015:3:25","type":""}],"src":"11886:287:25"},{"body":{"nodeType":"YulBlock","src":"12352:179:25","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12369:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12380:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12362:6:25"},"nodeType":"YulFunctionCall","src":"12362:21:25"},"nodeType":"YulExpressionStatement","src":"12362:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12403:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12414:2:25","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12399:3:25"},"nodeType":"YulFunctionCall","src":"12399:18:25"},{"kind":"number","nodeType":"YulLiteral","src":"12419:2:25","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12392:6:25"},"nodeType":"YulFunctionCall","src":"12392:30:25"},"nodeType":"YulExpressionStatement","src":"12392:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:25","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:25"},"nodeType":"YulFunctionCall","src":"12438:18:25"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"12458:31:25","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12431:6:25"},"nodeType":"YulFunctionCall","src":"12431:59:25"},"nodeType":"YulExpressionStatement","src":"12431:59:25"},{"nodeType":"YulAssignment","src":"12499:26:25","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12511:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"12522:2:25","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12507:3:25"},"nodeType":"YulFunctionCall","src":"12507:18:25"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12499:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12329:9:25","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12343:4:25","type":""}],"src":"12178:353:25"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1530":[{"length":32,"start":1686},{"length":32,"start":1750},{"length":32,"start":1909},{"length":32,"start":1973},{"length":32,"start":2116}]},"linkReferences":{},"object":"60806040526004361061011f5760003560e01c80636caacbe7116100a0578063b908afa811610064578063b908afa81461032e578063c0c53b8b14610351578063ca15c87314610371578063d547741f14610391578063f68e9553146103b157600080fd5b80636caacbe7146102815780637f17caa7146102a15780639010d07c146102c157806391d14854146102f9578063a217fddf1461031957600080fd5b806336568abe116100e757806336568abe146101f95780633659cfe6146102195780634f1ef2861461023957806352d1902d1461024c5780636aa700961461026157600080fd5b806301ffc9a7146101245780630488d9741461015957806305a3b8091461017b578063248a9ca31461019b5780632f2ff15d146101d9575b600080fd5b34801561013057600080fd5b5061014461013f36600461172c565b6103d6565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061017961017436600461176b565b610401565b005b34801561018757600080fd5b5061014461019636600461176b565b61050a565b3480156101a757600080fd5b506101cb6101b6366004611788565b60009081526065602052604090206001015490565b604051908152602001610150565b3480156101e557600080fd5b506101796101f43660046117a1565b6105df565b34801561020557600080fd5b506101796102143660046117a1565b610609565b34801561022557600080fd5b5061017961023436600461176b565b61068c565b6101796102473660046117e7565b61076b565b34801561025857600080fd5b506101cb610837565b34801561026d57600080fd5b5061017961027c36600461176b565b6108ea565b34801561028d57600080fd5b5061017961029c3660046118ab565b6109de565b3480156102ad57600080fd5b506101796102bc3660046118ab565b610ad5565b3480156102cd57600080fd5b506102e16102dc366004611920565b610bcf565b6040516001600160a01b039091168152602001610150565b34801561030557600080fd5b506101446103143660046117a1565b610bee565b34801561032557600080fd5b506101cb600081565b34801561033a57600080fd5b506101cb6b555047524144455f524f4c4560a01b81565b34801561035d57600080fd5b5061017961036c366004611942565b610c19565b34801561037d57600080fd5b506101cb61038c366004611788565b610d73565b34801561039d57600080fd5b506101796103ac3660046117a1565b610d8a565b3480156103bd57600080fd5b506101cb6d5245474953545241525f524f4c4560901b81565b60006001600160e01b031982166305a3b80960e01b14806103fb57506103fb82610daf565b92915050565b6d5245474953545241525f524f4c4560901b61041c81610dd4565b813f600081815261012f60209081526040808320805460ff191660011790558051639061112760e01b815290516001600160a01b03871692639061112792600480820193918290030181865afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e919061198d565b6001600160a01b03818116600090815261012e6020908152604091829020805460ff1916600190811790915591519182529293509086169184917f52a9758e33d80a562e98b34d922581e414149b9c485e5929682a72acb451c31591015b60405180910390a350505050565b6001600160a01b038116600090815261012d602052604081205460ff161561053457506001919050565b813f600081815261012f602052604090205460ff16156105d6576000836001600160a01b031663906111276040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b2919061198d565b6001600160a01b0316600090815261012e602052604090205460ff16949350505050565b50600092915050565b6000828152606560205260409020600101546105fa81610dd4565b6106048383610dde565b505050565b6001600160a01b038116331461067e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106888282610e00565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106d45760405162461bcd60e51b8152600401610675906119aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661071d600080516020611bf3833981519152546001600160a01b031690565b6001600160a01b0316146107435760405162461bcd60e51b8152600401610675906119f6565b61074c81610e22565b6040805160008082526020820190925261076891839190610e3b565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107b35760405162461bcd60e51b8152600401610675906119aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107fc600080516020611bf3833981519152546001600160a01b031690565b6001600160a01b0316146108225760405162461bcd60e51b8152600401610675906119f6565b61082b82610e22565b61068882826001610e3b565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d75760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610675565b50600080516020611bf383398151915290565b6d5245474953545241525f524f4c4560901b61090581610dd4565b813f600081815261012f60209081526040808320805460ff191690558051639061112760e01b815290516001600160a01b03871692639061112792600480820193918290030181865afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610984919061198d565b6001600160a01b03818116600090815261012e60209081526040808320805460ff19169055519182529293509086169184917f52a9758e33d80a562e98b34d922581e414149b9c485e5929682a72acb451c31591016104fc565b6d5245474953545241525f524f4c4560901b6109f981610dd4565b60005b82811015610acf5761012d6000858584818110610a1b57610a1b611a42565b9050602002016020810190610a30919061176b565b6001600160a01b031681526020810191909152604001600020805460ff19169055838382818110610a6357610a63611a42565b9050602002016020810190610a78919061176b565b6001600160a01b03167f218a1635b2755f3fe7bdb77932fcd6ffca69760533404fe817f7404315bf6df06000604051610ab5911515815260200190565b60405180910390a280610ac781611a6e565b9150506109fc565b50505050565b6d5245474953545241525f524f4c4560901b610af081610dd4565b60005b82811015610acf57600161012d6000868685818110610b1457610b14611a42565b9050602002016020810190610b29919061176b565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055838382818110610b6357610b63611a42565b9050602002016020810190610b78919061176b565b6001600160a01b03167f218a1635b2755f3fe7bdb77932fcd6ffca69760533404fe817f7404315bf6df06001604051610bb5911515815260200190565b60405180910390a280610bc781611a6e565b915050610af3565b6000828152609760205260408120610be79083610fa6565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600054610100900460ff1615808015610c395750600054600160ff909116105b80610c535750303b158015610c53575060005460ff166001145b610cb65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610675565b6000805460ff191660011790558015610cd9576000805461ff0019166101001790555b610ce1610fb2565b610ce9610fb2565b610cf4600085610dde565b610d0d6b555047524144455f524f4c4560a01b84610dde565b610d286d5245474953545241525f524f4c4560901b83610dde565b8015610acf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60008181526097602052604081206103fb9061101f565b600082815260656020526040902060010154610da581610dd4565b6106048383610e00565b60006001600160e01b03198216635a05180f60e01b14806103fb57506103fb82611029565b610768813361105e565b610de882826110b7565b6000828152609760205260409020610604908261113d565b610e0a8282611152565b600082815260976020526040902061060490826111b9565b6b555047524144455f524f4c4560a01b61068881610dd4565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e6e57610604836111ce565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ec8575060408051601f3d908101601f19168201909252610ec591810190611a87565b60015b610f2b5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610675565b600080516020611bf38339815191528114610f9a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610675565b5061060483838361126a565b6000610be7838361128f565b600054610100900460ff1661101d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610675565b565b60006103fb825490565b60006001600160e01b03198216637965db0b60e01b14806103fb57506301ffc9a760e01b6001600160e01b03198316146103fb565b6110688282610bee565b61068857611075816112b9565b6110808360206112cb565b604051602001611091929190611ac4565b60408051601f198184030181529082905262461bcd60e51b825261067591600401611b39565b6110c18282610bee565b6106885760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556110f93390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610be7836001600160a01b038416611467565b61115c8282610bee565b156106885760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610be7836001600160a01b0384166114b6565b6001600160a01b0381163b61123b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610675565b600080516020611bf383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611273836115a9565b6000825111806112805750805b1561060457610acf83836115e9565b60008260000182815481106112a6576112a6611a42565b9060005260206000200154905092915050565b60606103fb6001600160a01b03831660145b606060006112da836002611b6c565b6112e5906002611b83565b67ffffffffffffffff8111156112fd576112fd6117d1565b6040519080825280601f01601f191660200182016040528015611327576020820181803683370190505b509050600360fc1b8160008151811061134257611342611a42565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061137157611371611a42565b60200101906001600160f81b031916908160001a9053506000611395846002611b6c565b6113a0906001611b83565b90505b6001811115611418576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113d4576113d4611a42565b1a60f81b8282815181106113ea576113ea611a42565b60200101906001600160f81b031916908160001a90535060049490941c9361141181611b96565b90506113a3565b508315610be75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610675565b60008181526001830160205260408120546114ae575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103fb565b5060006103fb565b6000818152600183016020526040812054801561159f5760006114da600183611bad565b85549091506000906114ee90600190611bad565b905081811461155357600086600001828154811061150e5761150e611a42565b906000526020600020015490508087600001848154811061153157611531611a42565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061156457611564611bc0565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103fb565b60009150506103fb565b6115b2816111ce565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610be78383604051806060016040528060278152602001611c13602791396060600080856001600160a01b0316856040516116269190611bd6565b600060405180830381855af49150503d8060008114611661576040519150601f19603f3d011682016040523d82523d6000602084013e611666565b606091505b509150915061167786838387611681565b9695505050505050565b606083156116f05782516000036116e9576001600160a01b0385163b6116e95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610675565b50816116fa565b6116fa8383611702565b949350505050565b8151156117125781518083602001fd5b8060405162461bcd60e51b81526004016106759190611b39565b60006020828403121561173e57600080fd5b81356001600160e01b031981168114610be757600080fd5b6001600160a01b038116811461076857600080fd5b60006020828403121561177d57600080fd5b8135610be781611756565b60006020828403121561179a57600080fd5b5035919050565b600080604083850312156117b457600080fd5b8235915060208301356117c681611756565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156117fa57600080fd5b823561180581611756565b9150602083013567ffffffffffffffff8082111561182257600080fd5b818501915085601f83011261183657600080fd5b813581811115611848576118486117d1565b604051601f8201601f19908116603f01168101908382118183101715611870576118706117d1565b8160405282815288602084870101111561188957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080602083850312156118be57600080fd5b823567ffffffffffffffff808211156118d657600080fd5b818501915085601f8301126118ea57600080fd5b8135818111156118f957600080fd5b8660208260051b850101111561190e57600080fd5b60209290920196919550909350505050565b6000806040838503121561193357600080fd5b50508035926020909101359150565b60008060006060848603121561195757600080fd5b833561196281611756565b9250602084013561197281611756565b9150604084013561198281611756565b809150509250925092565b60006020828403121561199f57600080fd5b8151610be781611756565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a8057611a80611a58565b5060010190565b600060208284031215611a9957600080fd5b5051919050565b60005b83811015611abb578181015183820152602001611aa3565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611afc816017850160208801611aa0565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b2d816028840160208801611aa0565b01602801949350505050565b6020815260008251806020840152611b58816040850160208701611aa0565b601f01601f19169190910160400192915050565b80820281158282048414176103fb576103fb611a58565b808201808211156103fb576103fb611a58565b600081611ba557611ba5611a58565b506000190190565b818103818111156103fb576103fb611a58565b634e487b7160e01b600052603160045260246000fd5b60008251611be8818460208701611aa0565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206df656b67508087317a95ae7c0cd38ee00e16e25458f50fd7114769ede1264bf64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CAACBE7 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB908AFA8 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB908AFA8 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xF68E9553 EQ PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6CAACBE7 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x7F17CAA7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x6AA70096 EQ PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x488D974 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x5A3B809 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x172C JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x179 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x837 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x176B JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x18AB JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1920 JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x1942 JUMP JUMPDEST PUSH2 0xC19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0xD73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xD8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A3B809 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x41C DUP2 PUSH2 0xDD4 JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 MLOAD PUSH4 0x90611127 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x90611127 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP3 SWAP4 POP SWAP1 DUP7 AND SWAP2 DUP5 SWAP2 PUSH32 0x52A9758E33D80A562E98B34D922581E414149B9C485E5929682A72ACB451C315 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12D PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x534 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x90611127 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5FA DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xDDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH2 0xE00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x6D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x71D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x74C DUP2 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x768 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xE3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7FC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH2 0x82B DUP3 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH1 0x1 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x905 DUP2 PUSH2 0xDD4 JUMP JUMPDEST DUP2 EXTCODEHASH PUSH1 0x0 DUP2 DUP2 MSTORE PUSH2 0x12F PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD PUSH4 0x90611127 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 PUSH4 0x90611127 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x960 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x984 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x12E PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE SWAP3 SWAP4 POP SWAP1 DUP7 AND SWAP2 DUP5 SWAP2 PUSH32 0x52A9758E33D80A562E98B34D922581E414149B9C485E5929682A72ACB451C315 SWAP2 ADD PUSH2 0x4FC JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0x9F9 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH2 0x12D PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA1B JUMPI PUSH2 0xA1B PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xA63 JUMPI PUSH2 0xA63 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x218A1635B2755F3FE7BDB77932FCD6FFCA69760533404FE817F7404315BF6DF0 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xAB5 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0xAC7 DUP2 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9FC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL PUSH2 0xAF0 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH1 0x1 PUSH2 0x12D PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB14 JUMPI PUSH2 0xB14 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xB63 JUMPI PUSH2 0xB63 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x218A1635B2755F3FE7BDB77932FCD6FFCA69760533404FE817F7404315BF6DF0 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xBB5 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0xBC7 DUP2 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xBE7 SWAP1 DUP4 PUSH2 0xFA6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xC39 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xC53 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xCE1 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCE9 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xCF4 PUSH1 0x0 DUP6 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xD0D PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL DUP5 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0xD28 PUSH14 0x5245474953545241525F524F4C45 PUSH1 0x90 SHL DUP4 PUSH2 0xDDE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xACF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x3FB SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDA5 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH2 0x3FB DUP3 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x768 DUP2 CALLER PUSH2 0x105E JUMP JUMPDEST PUSH2 0xDE8 DUP3 DUP3 PUSH2 0x10B7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x604 SWAP1 DUP3 PUSH2 0x113D JUMP JUMPDEST PUSH2 0xE0A DUP3 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x604 SWAP1 DUP3 PUSH2 0x11B9 JUMP JUMPDEST PUSH12 0x555047524144455F524F4C45 PUSH1 0xA0 SHL PUSH2 0x688 DUP2 PUSH2 0xDD4 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE6E JUMPI PUSH2 0x604 DUP4 PUSH2 0x11CE JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEC8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEC5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST POP PUSH2 0x604 DUP4 DUP4 DUP4 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 DUP4 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x1068 DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH2 0x1075 DUP2 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x1080 DUP4 PUSH1 0x20 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1091 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x675 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B39 JUMP JUMPDEST PUSH2 0x10C1 DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x688 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x10F9 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1467 JUMP JUMPDEST PUSH2 0x115C DUP3 DUP3 PUSH2 0xBEE JUMP JUMPDEST ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x123B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1BF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1273 DUP4 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x1280 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x604 JUMPI PUSH2 0xACF DUP4 DUP4 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12A6 JUMPI PUSH2 0x12A6 PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x12DA DUP4 PUSH1 0x2 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x12E5 SWAP1 PUSH1 0x2 PUSH2 0x1B83 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12FD JUMPI PUSH2 0x12FD PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1327 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1342 JUMPI PUSH2 0x1342 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1371 JUMPI PUSH2 0x1371 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1395 DUP5 PUSH1 0x2 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x13A0 SWAP1 PUSH1 0x1 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1418 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x13D4 JUMPI PUSH2 0x13D4 PUSH2 0x1A42 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1411 DUP2 PUSH2 0x1B96 JUMP JUMPDEST SWAP1 POP PUSH2 0x13A3 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x14AE JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3FB JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x159F JUMPI PUSH1 0x0 PUSH2 0x14DA PUSH1 0x1 DUP4 PUSH2 0x1BAD JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x14EE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1553 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x150E JUMPI PUSH2 0x150E PUSH2 0x1A42 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1531 JUMPI PUSH2 0x1531 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1564 JUMPI PUSH2 0x1564 PUSH2 0x1BC0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x15B2 DUP2 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBE7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C13 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP2 SWAP1 PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1661 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1677 DUP7 DUP4 DUP4 DUP8 PUSH2 0x1681 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x16F0 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x16E9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x675 JUMP JUMPDEST POP DUP2 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x16FA DUP4 DUP4 PUSH2 0x1702 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1712 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBE7 DUP2 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17C6 DUP2 PUSH2 0x1756 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1805 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH2 0x1848 PUSH2 0x17D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1870 JUMPI PUSH2 0x1870 PUSH2 0x17D1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x190E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1962 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1972 DUP2 PUSH2 0x1756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1982 DUP2 PUSH2 0x1756 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBE7 DUP2 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A80 JUMPI PUSH2 0x1A80 PUSH2 0x1A58 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ABB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AA3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1AFC DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1B2D DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B58 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1BA5 JUMPI PUSH2 0x1BA5 PUSH2 0x1A58 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3FB JUMPI PUSH2 0x3FB PUSH2 0x1A58 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1BE8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A26469706673582212206D 0xF6 JUMP 0xB6 PUSH22 0x8087317A95AE7C0CD38EE00E16E25458F50FD711476 SWAP15 0xDE SLT PUSH5 0xBF64736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"195:67:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6667:264:2;;;;;;;;;;-1:-1:-1;6667:264:2;;;;;:::i;:::-;;:::i;:::-;;;470:14:25;;463:22;445:41;;433:2;418:18;6667:264:2;;;;;;;;4217:562;;;;;;;;;;-1:-1:-1;4217:562:2;;;;;:::i;:::-;;:::i;:::-;;5843:681;;;;;;;;;;-1:-1:-1;5843:681:2;;;;;:::i;:::-;;:::i;4855:129:7:-;;;;;;;;;;-1:-1:-1;4855:129:7;;;;;:::i;:::-;4929:7;4955:12;;;:6;:12;;;;;:22;;;;4855:129;;;;1216:25:25;;;1204:2;1189:18;4855:129:7;1070:177:25;5280:145:7;;;;;;;;;;-1:-1:-1;5280:145:7;;;;;:::i;:::-;;:::i;6389:214::-;;;;;;;;;;-1:-1:-1;6389:214:7;;;;;:::i;:::-;;:::i;3408:195:15:-;;;;;;;;;;-1:-1:-1;3408:195:15;;;;;:::i;:::-;;:::i;3922:220::-;;;;;;:::i;:::-;;:::i;3027:131::-;;;;;;;;;;;;;:::i;5052:568:2:-;;;;;;;;;;-1:-1:-1;5052:568:2;;;;;:::i;:::-;;:::i;3435:359::-;;;;;;;;;;-1:-1:-1;3435:359:2;;;;;:::i;:::-;;:::i;2977:300::-;;;;;;;;;;-1:-1:-1;2977:300:2;;;;;:::i;:::-;;:::i;1791:151:6:-;;;;;;;;;;-1:-1:-1;1791:151:6;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3802:32:25;;;3784:51;;3772:2;3757:18;1791:151:6;3638:203:25;3350:145:7;;;;;;;;;;-1:-1:-1;3350:145:7;;;;;:::i;:::-;;:::i;2320:49::-;;;;;;;;;;-1:-1:-1;2320:49:7;2365:4;2320:49;;1705:62:2;;;;;;;;;;;;-1:-1:-1;;;1705:62:2;;2439:336;;;;;;;;;;-1:-1:-1;2439:336:2;;;;;:::i;:::-;;:::i;2110:140:6:-;;;;;;;;;;-1:-1:-1;2110:140:6;;;;;:::i;:::-;;:::i;5705:147:7:-;;;;;;;;;;-1:-1:-1;5705:147:7;;;;;:::i;:::-;;:::i;1573:66:2:-;;;;;;;;;;;;-1:-1:-1;;;1573:66:2;;6667:264;6810:4;-1:-1:-1;;;;;;6833:51:2;;-1:-1:-1;;;6833:51:2;;:91;;;6888:36;6912:11;6888:23;:36::i;:::-;6826:98;6667:264;-1:-1:-1;;6667:264:2:o;4217:562::-;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;:::-;4462:23:2;::::1;4345:16;4504:27:::0;;;:17:::1;:27;::::0;;;;;;;:34;;-1:-1:-1;;4504:34:2::1;4534:4;4504:34;::::0;;4603:50;;-1:-1:-1;;;4603:50:2;;;;-1:-1:-1;;;;;4603:48:2;::::1;::::0;::::1;::::0;:50:::1;::::0;;::::1;::::0;;;;;;;:48;:50:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4663:36:2;;::::1;;::::0;;;:30:::1;:36;::::0;;;;;;;;:43;;-1:-1:-1;;4663:43:2::1;4702:4;4663:43:::0;;::::1;::::0;;;4722:50;;445:41:25;;;4663:36:2;;-1:-1:-1;4722:50:2;;::::1;::::0;4745:8;;4722:50:::1;::::0;418:18:25;4722:50:2::1;;;;;;;;4301:478;;4217:562:::0;;:::o;5843:681::-;-1:-1:-1;;;;;5934:24:2;;5914:4;5934:24;;;:16;:24;;;;;;;;5930:66;;;-1:-1:-1;5981:4:2;;5843:681;-1:-1:-1;5843:681:2:o;5930:66::-;6189:19;;6072:16;6231:27;;;:17;:27;;;;;;;;6227:268;;;6365:12;6393:6;-1:-1:-1;;;;;6380:44:2;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6448:36:2;;;;;:30;:36;;;;;;;;;5843:681;-1:-1:-1;;;;5843:681:2:o;6227:268::-;-1:-1:-1;6512:5:2;;5843:681;-1:-1:-1;;5843:681:2:o;5280:145:7:-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5393:25:::1;5404:4;5410:7;5393:10;:25::i;:::-;5280:145:::0;;;:::o;6389:214::-;-1:-1:-1;;;;;6484:23:7;;965:10:17;6484:23:7;6476:83;;;;-1:-1:-1;;;6476:83:7;;5020:2:25;6476:83:7;;;5002:21:25;5059:2;5039:18;;;5032:30;5098:34;5078:18;;;5071:62;-1:-1:-1;;;5149:18:25;;;5142:45;5204:19;;6476:83:7;;;;;;;;;6570:26;6582:4;6588:7;6570:11;:26::i;:::-;6389:214;;:::o;3408:195:15:-;-1:-1:-1;;;;;1764:6:15;1747:23;1755:4;1747:23;1739:80;;;;-1:-1:-1;;;1739:80:15;;;;;;;:::i;:::-;1861:6;-1:-1:-1;;;;;1837:30:15;:20;-1:-1:-1;;;;;;;;;;;1557:65:12;-1:-1:-1;;;;;1557:65:12;;1478:151;1837:20:15;-1:-1:-1;;;;;1837:30:15;;1829:87;;;;-1:-1:-1;;;1829:87:15;;;;;;;:::i;:::-;3489:36:::1;3507:17;3489;:36::i;:::-;3576:12;::::0;;3586:1:::1;3576:12:::0;;;::::1;::::0;::::1;::::0;;;3535:61:::1;::::0;3557:17;;3576:12;3535:21:::1;:61::i;:::-;3408:195:::0;:::o;3922:220::-;-1:-1:-1;;;;;1764:6:15;1747:23;1755:4;1747:23;1739:80;;;;-1:-1:-1;;;1739:80:15;;;;;;;:::i;:::-;1861:6;-1:-1:-1;;;;;1837:30:15;:20;-1:-1:-1;;;;;;;;;;;1557:65:12;-1:-1:-1;;;;;1557:65:12;;1478:151;1837:20:15;-1:-1:-1;;;;;1837:30:15;;1829:87;;;;-1:-1:-1;;;1829:87:15;;;;;;;:::i;:::-;4037:36:::1;4055:17;4037;:36::i;:::-;4083:52;4105:17;4124:4;4130;4083:21;:52::i;3027:131::-:0;3105:7;2190:4;-1:-1:-1;;;;;2199:6:15;2182:23;;2174:92;;;;-1:-1:-1;;;2174:92:15;;6262:2:25;2174:92:15;;;6244:21:25;6301:2;6281:18;;;6274:30;6340:34;6320:18;;;6313:62;6411:26;6391:18;;;6384:54;6455:19;;2174:92:15;6060:420:25;2174:92:15;-1:-1:-1;;;;;;;;;;;;3027:131:15;:::o;5052:568:2:-;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;:::-;5302:23:2;::::1;5185:16;5351:27:::0;;;:17:::1;:27;::::0;;;;;;;5344:34;;-1:-1:-1;;5344:34:2::1;::::0;;5443:50;;-1:-1:-1;;;5443:50:2;;;;-1:-1:-1;;;;;5443:48:2;::::1;::::0;::::1;::::0;:50:::1;::::0;;::::1;::::0;;;;;;;:48;:50:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5510:36:2;;::::1;;::::0;;;:30:::1;:36;::::0;;;;;;;5503:43;;-1:-1:-1;;5503:43:2::1;::::0;;5562:51;445:41:25;;;5510:36:2;;-1:-1:-1;5562:51:2;;::::1;::::0;5585:8;;5562:51:::1;::::0;418:18:25;5562:51:2::1;305:187:25::0;3435:359:2;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;:::-;3557:9:2::1;3552:236;3568:25:::0;;::::1;3552:236;;;3674:16;:35;3691:14;;3706:1;3691:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3674:35:2::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3674:35:2;3667:42;;-1:-1:-1;;3667:42:2::1;::::0;;3752:14;;3767:1;3752:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3728:49:2::1;;3771:5;3728:49;;;;470:14:25::0;463:22;445:41;;433:2;418:18;;305:187;3728:49:2::1;;;;;;;;3595:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3552:236;;;;3435:359:::0;;;:::o;2977:300::-;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;:::-;3094:9:2::1;3089:182;3105:25:::0;;::::1;3089:182;;;3189:4;3151:16;:35;3168:14;;3183:1;3168:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3151:35:2::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3151:35:2;:42;;-1:-1:-1;;3151:42:2::1;::::0;::::1;;::::0;;;::::1;::::0;;3236:14;;3251:1;3236:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3212:48:2::1;;3255:4;3212:48;;;;470:14:25::0;463:22;445:41;;433:2;418:18;;305:187;3212:48:2::1;;;;;;;;3132:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3089:182;;1791:151:6::0;1881:7;1907:18;;;:12;:18;;;;;:28;;1929:5;1907:21;:28::i;:::-;1900:35;1791:151;-1:-1:-1;;;1791:151:6:o;3350:145:7:-;3436:4;3459:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3459:29:7;;;;;;;;;;;;;;;3350:145::o;2439:336:2:-;3279:19:14;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:14;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:14;1713:19:16;:23;;;3387:66:14;;-1:-1:-1;3436:12:14;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:14;;7091:2:25;3325:201:14;;;7073:21:25;7130:2;7110:18;;;7103:30;7169:34;7149:18;;;7142:62;-1:-1:-1;;;7220:18:25;;;7213:44;7274:19;;3325:201:14;6889:410:25;3325:201:14;3536:12;:16;;-1:-1:-1;;3536:16:14;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:14;;;;;3562:65;2557:24:2::1;:22;:24::i;:::-;2591:22;:20;:22::i;:::-;2623:42;2365:4:7;2654:10:2::0;2623::::1;:42::i;:::-;2675:39;-1:-1:-1::0;;;2700:13:2::1;2675:10;:39::i;:::-;2724:44;-1:-1:-1::0;;;2751:16:2::1;2724:10;:44::i;:::-;3651:14:14::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:14;;;3721:14;;-1:-1:-1;7456:36:25;;3721:14:14;;7444:2:25;7429:18;3721:14:14;;;;;;;3269:483;2439:336:2;;;:::o;2110:140:6:-;2190:7;2216:18;;;:12;:18;;;;;:27;;:25;:27::i;5705:147:7:-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5819:26:::1;5831:4;5837:7;5819:11;:26::i;983:223:6:-:0;1068:4;-1:-1:-1;;;;;;1091:68:6;;-1:-1:-1;;;1091:68:6;;:108;;;1163:36;1187:11;1163:23;:36::i;3789:103:7:-;3855:30;3866:4;965:10:17;3855::7;:30::i;2338:166:6:-;2425:31;2442:4;2448:7;2425:16;:31::i;:::-;2466:18;;;;:12;:18;;;;;:31;;2489:7;2466:22;:31::i;2593:171::-;2681:32;2699:4;2705:7;2681:17;:32::i;:::-;2723:18;;;;:12;:18;;;;;:34;;2749:7;2723:25;:34::i;7033:97:2:-;-1:-1:-1;;;2798:16:7;2809:4;2798:10;:16::i;2841:944:12:-;839:66;3257:59;;;3253:526;;;3332:37;3351:17;3332:18;:37::i;3253:526::-;3433:17;-1:-1:-1;;;;;3404:61:12;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3404:63:12;;;;;;;;-1:-1:-1;;3404:63:12;;;;;;;;;;;;:::i;:::-;;;3400:302;;3631:56;;-1:-1:-1;;;3631:56:12;;7894:2:25;3631:56:12;;;7876:21:25;7933:2;7913:18;;;7906:30;7972:34;7952:18;;;7945:62;-1:-1:-1;;;8023:18:25;;;8016:44;8077:19;;3631:56:12;7692:410:25;3400:302:12;-1:-1:-1;;;;;;;;;;;3517:28:12;;3509:82;;;;-1:-1:-1;;;3509:82:12;;8309:2:25;3509:82:12;;;8291:21:25;8348:2;8328:18;;;8321:30;8387:34;8367:18;;;8360:62;-1:-1:-1;;;8438:18:25;;;8431:39;8487:19;;3509:82:12;8107:405:25;3509:82:12;3468:138;3715:53;3733:17;3752:4;3758:9;3715:17;:53::i;9574:156:24:-;9648:7;9698:22;9702:3;9714:5;9698:3;:22::i;2290:67:15:-;5374:13:14;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:14;;8719:2:25;5366:69:14;;;8701:21:25;8758:2;8738:18;;;8731:30;8797:34;8777:18;;;8770:62;-1:-1:-1;;;8848:18:25;;;8841:41;8899:19;;5366:69:14;8517:407:25;5366:69:14;2290:67:15:o;9117:115:24:-;9180:7;9206:19;9214:3;4556:18;;4474:107;3050:213:7;3135:4;-1:-1:-1;;;;;;3158:58:7;;-1:-1:-1;;;3158:58:7;;:98;;-1:-1:-1;;;;;;;;;;1189:51:20;;;3220:36:7;1081:166:20;4173:501:7;4261:22;4269:4;4275:7;4261;:22::i;:::-;4256:412;;4444:39;4475:7;4444:30;:39::i;:::-;4554:49;4593:4;4600:2;4554:30;:49::i;:::-;4351:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4351:274:7;;;;;;;;;;-1:-1:-1;;;4299:358:7;;;;;;;:::i;7938:233::-;8021:22;8029:4;8035:7;8021;:22::i;:::-;8016:149;;8059:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8059:29:7;;;;;;;;;:36;;-1:-1:-1;;8059:36:7;8091:4;8059:36;;;8141:12;965:10:17;;886:96;8141:12:7;-1:-1:-1;;;;;8114:40:7;8132:7;-1:-1:-1;;;;;8114:40:7;8126:4;8114:40;;;;;;;;;;7938:233;;:::o;8316:150:24:-;8386:4;8409:50;8414:3;-1:-1:-1;;;;;8434:23:24;;8409:4;:50::i;8342:234:7:-;8425:22;8433:4;8439:7;8425;:22::i;:::-;8421:149;;;8495:5;8463:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8463:29:7;;;;;;;;;;:37;;-1:-1:-1;;8463:37:7;;;8519:40;965:10:17;;8463:12:7;;8519:40;;8495:5;8519:40;8342:234;;:::o;8634:156:24:-;8707:4;8730:53;8738:3;-1:-1:-1;;;;;8758:23:24;;8730:7;:53::i;1720:281:12:-;-1:-1:-1;;;;;1713:19:16;;;1793:106:12;;;;-1:-1:-1;;;1793:106:12;;10604:2:25;1793:106:12;;;10586:21:25;10643:2;10623:18;;;10616:30;10682:34;10662:18;;;10655:62;-1:-1:-1;;;10733:18:25;;;10726:43;10786:19;;1793:106:12;10402:409:25;1793:106:12;-1:-1:-1;;;;;;;;;;;1909:85:12;;-1:-1:-1;;;;;;1909:85:12;-1:-1:-1;;;;;1909:85:12;;;;;;;;;;1720:281::o;2393:276::-;2501:29;2512:17;2501:10;:29::i;:::-;2558:1;2544:4;:11;:15;:28;;;;2563:9;2544:28;2540:123;;;2588:64;2628:17;2647:4;2588:39;:64::i;4923:118:24:-;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;5009:25;;4923:118;;;;:::o;2473:149:19:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:19;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:19;;1984:47;;-1:-1:-1;;;2041:6:19;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:19;;;;;;;;;-1:-1:-1;;;2066:6:19;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:19;;;;;;;;-1:-1:-1;2096:9:19;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:19;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:19;;;;;;;;-1:-1:-1;2207:1:19;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:19;;2228:55;;;;-1:-1:-1;;;2228:55:19;;11462:2:25;2228:55:19;;;11444:21:25;;;11481:18;;;11474:30;11540:34;11520:18;;;11513:62;11592:18;;2228:55:19;11260:356:25;2225:404:24;2288:4;4362:19;;;:12;;;:19;;;;;;2304:319;;-1:-1:-1;2346:23:24;;;;;;;;:11;:23;;;;;;;;;;;;;2526:18;;2504:19;;;:12;;;:19;;;;;;:40;;;;2558:11;;2304:319;-1:-1:-1;2607:5:24;2600:12;;2797:1388;2863:4;3000:19;;;:12;;;:19;;;;;;3034:15;;3030:1149;;3403:21;3427:14;3440:1;3427:10;:14;:::i;:::-;3475:18;;3403:38;;-1:-1:-1;3455:17:24;;3475:22;;3496:1;;3475:22;:::i;:::-;3455:42;;3529:13;3516:9;:26;3512:398;;3562:17;3582:3;:11;;3594:9;3582:22;;;;;;;;:::i;:::-;;;;;;;;;3562:42;;3733:9;3704:3;:11;;3716:13;3704:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3816:23;;;:12;;;:23;;;;;:36;;;3512:398;3988:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4080:3;:12;;:19;4093:5;4080:19;;;;;;;;;;;4073:26;;;4121:4;4114:11;;;;;;;3030:1149;4163:5;4156:12;;;;;2107:152:12;2173:37;2192:17;2173:18;:37::i;:::-;2225:27;;-1:-1:-1;;;;;2225:27:12;;;;;;;;2107:152;:::o;6685:198:16:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:16;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:16:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:16;;;8124:60;;;;-1:-1:-1;;;8124:60:16;;12380:2:25;8124:60:16;;;12362:21:25;12419:2;12399:18;;;12392:30;12458:31;12438:18;;;12431:59;12507:18;;8124:60:16;12178:353:25;8124:60:16;-1:-1:-1;8219:10:16;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:16;;;;;;;;:::i;14:286:25:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:25;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:25;;562:42;;552:70;;618:1;615;608:12;633:247;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;800:9;787:23;819:31;844:5;819:31;:::i;885:180::-;944:6;997:2;985:9;976:7;972:23;968:32;965:52;;;1013:1;1010;1003:12;965:52;-1:-1:-1;1036:23:25;;885:180;-1:-1:-1;885:180:25:o;1252:315::-;1320:6;1328;1381:2;1369:9;1360:7;1356:23;1352:32;1349:52;;;1397:1;1394;1387:12;1349:52;1433:9;1420:23;1410:33;;1493:2;1482:9;1478:18;1465:32;1506:31;1531:5;1506:31;:::i;:::-;1556:5;1546:15;;;1252:315;;;;;:::o;1572:127::-;1633:10;1628:3;1624:20;1621:1;1614:31;1664:4;1661:1;1654:15;1688:4;1685:1;1678:15;1704:1056;1781:6;1789;1842:2;1830:9;1821:7;1817:23;1813:32;1810:52;;;1858:1;1855;1848:12;1810:52;1897:9;1884:23;1916:31;1941:5;1916:31;:::i;:::-;1966:5;-1:-1:-1;2022:2:25;2007:18;;1994:32;2045:18;2075:14;;;2072:34;;;2102:1;2099;2092:12;2072:34;2140:6;2129:9;2125:22;2115:32;;2185:7;2178:4;2174:2;2170:13;2166:27;2156:55;;2207:1;2204;2197:12;2156:55;2243:2;2230:16;2265:2;2261;2258:10;2255:36;;;2271:18;;:::i;:::-;2346:2;2340:9;2314:2;2400:13;;-1:-1:-1;;2396:22:25;;;2420:2;2392:31;2388:40;2376:53;;;2444:18;;;2464:22;;;2441:46;2438:72;;;2490:18;;:::i;:::-;2530:10;2526:2;2519:22;2565:2;2557:6;2550:18;2605:7;2600:2;2595;2591;2587:11;2583:20;2580:33;2577:53;;;2626:1;2623;2616:12;2577:53;2682:2;2677;2673;2669:11;2664:2;2656:6;2652:15;2639:46;2727:1;2722:2;2717;2709:6;2705:15;2701:24;2694:35;2748:6;2738:16;;;;;;;1704:1056;;;;;:::o;2765:615::-;2851:6;2859;2912:2;2900:9;2891:7;2887:23;2883:32;2880:52;;;2928:1;2925;2918:12;2880:52;2968:9;2955:23;2997:18;3038:2;3030:6;3027:14;3024:34;;;3054:1;3051;3044:12;3024:34;3092:6;3081:9;3077:22;3067:32;;3137:7;3130:4;3126:2;3122:13;3118:27;3108:55;;3159:1;3156;3149:12;3108:55;3199:2;3186:16;3225:2;3217:6;3214:14;3211:34;;;3241:1;3238;3231:12;3211:34;3294:7;3289:2;3279:6;3276:1;3272:14;3268:2;3264:23;3260:32;3257:45;3254:65;;;3315:1;3312;3305:12;3254:65;3346:2;3338:11;;;;;3368:6;;-1:-1:-1;2765:615:25;;-1:-1:-1;;;;2765:615:25:o;3385:248::-;3453:6;3461;3514:2;3502:9;3493:7;3489:23;3485:32;3482:52;;;3530:1;3527;3520:12;3482:52;-1:-1:-1;;3553:23:25;;;3623:2;3608:18;;;3595:32;;-1:-1:-1;3385:248:25:o;3846:529::-;3923:6;3931;3939;3992:2;3980:9;3971:7;3967:23;3963:32;3960:52;;;4008:1;4005;3998:12;3960:52;4047:9;4034:23;4066:31;4091:5;4066:31;:::i;:::-;4116:5;-1:-1:-1;4173:2:25;4158:18;;4145:32;4186:33;4145:32;4186:33;:::i;:::-;4238:7;-1:-1:-1;4297:2:25;4282:18;;4269:32;4310:33;4269:32;4310:33;:::i;:::-;4362:7;4352:17;;;3846:529;;;;;:::o;4562:251::-;4632:6;4685:2;4673:9;4664:7;4660:23;4656:32;4653:52;;;4701:1;4698;4691:12;4653:52;4733:9;4727:16;4752:31;4777:5;4752:31;:::i;5234:408::-;5436:2;5418:21;;;5475:2;5455:18;;;5448:30;5514:34;5509:2;5494:18;;5487:62;-1:-1:-1;;;5580:2:25;5565:18;;5558:42;5632:3;5617:19;;5234:408::o;5647:::-;5849:2;5831:21;;;5888:2;5868:18;;;5861:30;5927:34;5922:2;5907:18;;5900:62;-1:-1:-1;;;5993:2:25;5978:18;;5971:42;6045:3;6030:19;;5647:408::o;6485:127::-;6546:10;6541:3;6537:20;6534:1;6527:31;6577:4;6574:1;6567:15;6601:4;6598:1;6591:15;6617:127;6678:10;6673:3;6669:20;6666:1;6659:31;6709:4;6706:1;6699:15;6733:4;6730:1;6723:15;6749:135;6788:3;6809:17;;;6806:43;;6829:18;;:::i;:::-;-1:-1:-1;6876:1:25;6865:13;;6749:135::o;7503:184::-;7573:6;7626:2;7614:9;7605:7;7601:23;7597:32;7594:52;;;7642:1;7639;7632:12;7594:52;-1:-1:-1;7665:16:25;;7503:184;-1:-1:-1;7503:184:25:o;8929:250::-;9014:1;9024:113;9038:6;9035:1;9032:13;9024:113;;;9114:11;;;9108:18;9095:11;;;9088:39;9060:2;9053:10;9024:113;;;-1:-1:-1;;9171:1:25;9153:16;;9146:27;8929:250::o;9184:812::-;9595:25;9590:3;9583:38;9565:3;9650:6;9644:13;9666:75;9734:6;9729:2;9724:3;9720:12;9713:4;9705:6;9701:17;9666:75;:::i;:::-;-1:-1:-1;;;9800:2:25;9760:16;;;9792:11;;;9785:40;9850:13;;9872:76;9850:13;9934:2;9926:11;;9919:4;9907:17;;9872:76;:::i;:::-;9968:17;9987:2;9964:26;;9184:812;-1:-1:-1;;;;9184:812:25:o;10001:396::-;10150:2;10139:9;10132:21;10113:4;10182:6;10176:13;10225:6;10220:2;10209:9;10205:18;10198:34;10241:79;10313:6;10308:2;10297:9;10293:18;10288:2;10280:6;10276:15;10241:79;:::i;:::-;10381:2;10360:15;-1:-1:-1;;10356:29:25;10341:45;;;;10388:2;10337:54;;10001:396;-1:-1:-1;;10001:396:25:o;10816:168::-;10889:9;;;10920;;10937:15;;;10931:22;;10917:37;10907:71;;10958:18;;:::i;10989:125::-;11054:9;;;11075:10;;;11072:36;;;11088:18;;:::i;11119:136::-;11158:3;11186:5;11176:39;;11195:18;;:::i;:::-;-1:-1:-1;;;11231:18:25;;11119:136::o;11621:128::-;11688:9;;;11709:11;;;11706:37;;;11723:18;;:::i;11754:127::-;11815:10;11810:3;11806:20;11803:1;11796:31;11846:4;11843:1;11836:15;11870:4;11867:1;11860:15;11886:287;12015:3;12053:6;12047:13;12069:66;12128:6;12123:3;12116:4;12108:6;12104:17;12069:66;:::i;:::-;12151:16;;;;;11886:287;-1:-1:-1;;11886:287:25:o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","REGISTRAR_ROLE()":"f68e9553","UPGRADE_ROLE()":"b908afa8","addAddressesToAllowlist(address[])":"7f17caa7","addWalletToAllowlist(address)":"0488d974","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address,address)":"c0c53b8b","isAllowlisted(address)":"05a3b809","proxiableUUID()":"52d1902d","removeAddressesFromAllowlist(address[])":"6caacbe7","removeWalletFromAllowlist(address)":"6aa70096","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"added\",\"type\":\"bool\"}],\"name\":\"AddressAllowlistChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"targetBytes\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"added\",\"type\":\"bool\"}],\"name\":\"WalletAllowlistChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTRAR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addressTargets\",\"type\":\"address[]\"}],\"name\":\"addAddressesToAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddr\",\"type\":\"address\"}],\"name\":\"addWalletToAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_roleAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_upgradeAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registerarAdmin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isAllowlisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addressTargets\",\"type\":\"address[]\"}],\"name\":\"removeAddressesFromAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddr\",\"type\":\"address\"}],\"name\":\"removeWalletFromAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"addAddressesToAllowlist(address[])\":{\"params\":{\"addressTargets\":\"the addresses to be added to the allowlist\"}},\"addWalletToAllowlist(address)\":{\"params\":{\"walletAddr\":\"the wallet address to be added to the allowlist\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,address)\":{\"params\":{\"_roleAdmin\":\"the address to grant `DEFAULT_ADMIN_ROLE` to\",\"_upgradeAdmin\":\"the address to grant `UPGRADE_ROLE` to\"}},\"isAllowlisted(address)\":{\"params\":{\"target\":\"the address that will be checked for presence in the allowlist\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"removeAddressesFromAllowlist(address[])\":{\"params\":{\"addressTargets\":\"the addresses to be removed from the allowlist\"}},\"removeWalletFromAllowlist(address)\":{\"params\":{\"walletAddr\":\"the wallet address to be removed from the allowlist\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"The interface identifier, which is a 4-byte selector.\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddressAllowlistChanged(address,bool)\":{\"notice\":\"Emitted when a target address is added or removed from the Allowlist\"},\"WalletAllowlistChanged(bytes32,address,bool)\":{\"notice\":\"Emitted when a target smart contract wallet is added or removed from the Allowlist\"}},\"kind\":\"user\",\"methods\":{\"REGISTRAR_ROLE()\":{\"notice\":\"Only REGISTRAR_ROLE can invoke white listing registration and removal\"},\"UPGRADE_ROLE()\":{\"notice\":\"Only UPGRADE_ROLE can upgrade the contract\"},\"addAddressesToAllowlist(address[])\":{\"notice\":\"Adds a list of multiple addresses to Allowlist\"},\"addWalletToAllowlist(address)\":{\"notice\":\"Add a smart contract wallet to the Allowlist. This will allowlist the proxy and implementation contract pair. First, the bytecode of the proxy is added to the bytecode allowlist. Second, the implementation address stored in the proxy is stored in the implementation address allowlist.\"},\"initialize(address,address,address)\":{\"notice\":\"Grants `DEFAULT_ADMIN_ROLE` to the supplied `admin` address\"},\"isAllowlisted(address)\":{\"notice\":\"Returns true if an address is Allowlisted, false otherwise\"},\"removeAddressesFromAllowlist(address[])\":{\"notice\":\"Removes a list target address from Allowlist\"},\"removeWalletFromAllowlist(address)\":{\"notice\":\"Remove  a smart contract wallet from the Allowlist This will remove the proxy bytecode hash and implementation contract address pair from the allowlist\"},\"supportsInterface(bytes4)\":{\"notice\":\"ERC-165 interface support\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestOperatorAllowList.sol\":\"TestOperatorAllowlist\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@imtbl/contracts/contracts/allowlist/IOperatorAllowlist.sol\":{\"keccak256\":\"0x78abc58b15098d7a8cf3792739b9e87b6a748d47d05fcfacfb25cb90424f0bb4\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://2f92934b4b67959325074c773784efd7ce3c78e99ffe14f6e541fa1fb65eb27b\",\"dweb:/ipfs/QmYySNnZ53Ju9pxbtQtFdtWPCx3bgL4N79yB3WxeaMP6pk\"]},\"@imtbl/contracts/contracts/allowlist/IWalletProxy.sol\":{\"keccak256\":\"0x8a6d31443be2a55f0886dffb538202d71c66fee01a93ec72da6d1961c9d3327a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://18f6ad3a0fa9a4a6799bb5638c134de16777b86193dff27bd0a9f7a8419f4119\",\"dweb:/ipfs/QmXv4r4xw1uoMy3JLLXvMKvXupuqt12F4MVDaEmRAQDWVG\"]},\"@imtbl/contracts/contracts/allowlist/OperatorAllowlistUpgradeable.sol\":{\"keccak256\":\"0xa232d4539e305fca21a0d5d0d787ad442eb70aeb32b7d02fde19c90c3c29acff\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://5b6767898dceb0760381132efd3d222b031ce29f0bcc9141d2a63314cac559ee\",\"dweb:/ipfs/QmbyDbu5osPpXLnVQoYefJ5n9ufpwQKoZDPy3gxW71ZvpL\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/TestOperatorAllowList.sol\":{\"keccak256\":\"0x475d7e3a8deb94c33ffad30bcd0b9909c0359e457945ac74752908bf0705b104\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2388b446d4ed21eb9a92595cf7a06ca41fffbd6d7772047c67e077b98a5185d9\",\"dweb:/ipfs/QmQaUtFjdCK5XCr3mZCULpvF6niGqyWXgg6BvwrSxcEYhs\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7d24c901e098a04fa7f388c9ff1890bb522307272a2fee8030ee15a8d907096f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://581f4c4b9af18b5a8e811a0a45d38a125cad4627d67f7a605626ff3a2b26eb70\",\"dweb:/ipfs/QmWZwM8HEbPPjf5MaaRnELgW8JtDdWNu7oBXWCtLCERQyz\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol":{"AccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol\":\"AccessControlEnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7d24c901e098a04fa7f388c9ff1890bb522307272a2fee8030ee15a8d907096f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://581f4c4b9af18b5a8e811a0a45d38a125cad4627d67f7a605626ff3a2b26eb70\",\"dweb:/ipfs/QmWZwM8HEbPPjf5MaaRnELgW8JtDdWNu7oBXWCtLCERQyz\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol":{"IAccessControlEnumerableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol\":\"IAccessControlEnumerableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol":{"IAccessControlUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"openzeppelin-contracts-upgradeable-4.9.3/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfad20afef9d6b75ad0afd1ca0169b4b66f54448384a0a97b36022199d75a78664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xAD KECCAK256 0xAF 0xEF SWAP14 PUSH12 0x75AD0AFD1CA0169B4B66F544 BASEFEE CODESIZE 0x4A EXP SWAP8 0xB3 PUSH1 0x22 NOT SWAP14 PUSH22 0xA78664736F6C63430008130033000000000000000000 ","sourceMap":"194:9180:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfad20afef9d6b75ad0afd1ca0169b4b66f54448384a0a97b36022199d75a78664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xAD KECCAK256 0xAF 0xEF SWAP14 PUSH12 0x75AD0AFD1CA0169B4B66F544 BASEFEE CODESIZE 0x4A EXP SWAP8 0xB3 PUSH1 0x22 NOT SWAP14 PUSH22 0xA78664736F6C63430008130033000000000000000000 ","sourceMap":"194:9180:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200b936f1fd409141bc7f0952bf16f0130d406464d2fe18223a4b2f9a4e9e58dc264736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND SWAP4 PUSH16 0x1FD409141BC7F0952BF16F0130D40646 0x4D 0x2F 0xE1 DUP3 0x23 LOG4 0xB2 0xF9 LOG4 0xE9 0xE5 DUP14 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2696:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2696:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200b936f1fd409141bc7f0952bf16f0130d406464d2fe18223a4b2f9a4e9e58dc264736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND SWAP4 PUSH16 0x1FD409141BC7F0952BF16F0130D40646 0x4D 0x2F 0xE1 DUP3 0x23 LOG4 0xB2 0xF9 LOG4 0xE9 0xE5 DUP14 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2696:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d32f0ef327f7654d12956322510b2124eaccb3d85168581b0b0c40e32ae1433464736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0x2F 0xE RETURN 0x27 0xF7 PUSH6 0x4D1295632251 SIGNEXTEND 0x21 0x24 0xEA 0xCC 0xB3 0xD8 MLOAD PUSH9 0x581B0B0C40E32AE143 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"242:2603:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;242:2603:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d32f0ef327f7654d12956322510b2124eaccb3d85168581b0b0c40e32ae1433464736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0x2F 0xE RETURN 0x27 0xF7 PUSH6 0x4D1295632251 SIGNEXTEND 0x21 0x24 0xEA 0xCC 0xB3 0xD8 MLOAD PUSH9 0x581B0B0C40E32AE143 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"242:2603:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4d9a97f554e6450da447b4f18835240fda157a204171d0576322feaf36a976664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD9 0xA9 PUSH32 0x554E6450DA447B4F18835240FDA157A204171D0576322FEAF36A976664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"202:12593:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12593:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4d9a97f554e6450da447b4f18835240fda157a204171d0576322feaf36a976664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD9 0xA9 PUSH32 0x554E6450DA447B4F18835240FDA157A204171D0576322FEAF36A976664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"202:12593:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol":{"SignedMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122092ea12f7b8ffe4a5029623dba7e154af69730c11879b118d65daa5aa792055d864736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xEA SLT 0xF7 0xB8 SELFDESTRUCT 0xE4 0xA5 MUL SWAP7 0x23 0xDB 0xA7 0xE1 SLOAD 0xAF PUSH10 0x730C11879B118D65DAA5 0xAA PUSH26 0x2055D864736F6C63430008130033000000000000000000000000 ","sourceMap":"215:1058:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1058:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122092ea12f7b8ffe4a5029623dba7e154af69730c11879b118d65daa5aa792055d864736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xEA SLT 0xF7 0xB8 SELFDESTRUCT 0xE4 0xA5 MUL SWAP7 0x23 0xDB 0xA7 0xE1 SLOAD 0xAF PUSH10 0x730C11879B118D65DAA5 0xAA PUSH26 0x2055D864736F6C63430008130033000000000000000000000000 ","sourceMap":"215:1058:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}"}},"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122057cab0d7b71d911d7c6a03562d990aa93670ae2e5564170bfc2fc5affc74efed64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xCA 0xB0 0xD7 0xB7 SAR SWAP2 SAR PUSH29 0x6A03562D990AA93670AE2E5564170BFC2FC5AFFC74EFED64736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1329:11641:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1329:11641:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122057cab0d7b71d911d7c6a03562d990aa93670ae2e5564170bfc2fc5affc74efed64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0xCA 0xB0 0xD7 0xB7 SAR SWAP2 SAR PUSH29 0x6A03562D990AA93670AE2E5564170BFC2FC5AFFC74EFED64736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1329:11641:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-upgradeable-4.9.3/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}"}}}}}